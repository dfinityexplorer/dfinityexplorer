{"version":3,"sources":["Components/AboutPage/banner-x-horizon.png","Components/AboutPage/open-block-explorer-logo-large.png","Components/AboutPage/apollo-logo-dark-mode.png","Components/AboutPage/apollo-logo-light-mode.png","Components/AboutPage/github-octocat.png","Components/AboutPage/graphql-logo.png","Components/AboutPage/material-ui-logo.png","Components/AboutPage/mysql-logo.png","Components/AboutPage/nomics-logo-dark-mode.png","Components/AboutPage/nomics-logo-light-mode.png","Components/AboutPage/prisma-logo-dark-mode.png","Components/AboutPage/prisma-logo-light-mode.png","Components/AboutPage/react-logo-text.png","Components/AboutPage/styled-components-logo-dark-mode.png","Components/AboutPage/styled-components-logo-light-mode.png","Components/DEAppBar/open-block-explorer-logo.png","constants.js","theme/globalStyle.js","Components/ResponsiveComponent/ResponsiveComponent.js","Components/TrackablePage/TrackablePage.js","utils/breakpoint.js","Components/DynamicTable/DynamicTable.js","graphql/queryBlocks.js","graphql/subscriptionBlock.js","Components/BlocksSlideTable/BlocksSlideTable.js","graphql/queryTransactions.js","graphql/subscriptionTransaction.js","utils/getHashString.js","Components/TransactionsFadeTable/TransactionsFadeTable.js","Components/DashCard/DashCard.js","graphql/queryNetworkStats.js","graphql/subscriptionNetworkStats.js","Components/BlockTimeCard/BlockTimeCard.js","Components/TransactionsCard/TransactionsCard.js","graphql/queryPrice.js","graphql/subscriptionPrice.js","Components/PriceCard/PriceCard.js","Components/AreaChart/AreaChart.js","graphql/queryDailyNetworkStatses.js","Components/TransactionsChart/TransactionsChart.js","graphql/queryCandles.js","Components/PriceChart/PriceChart.js","Components/HomePage/HomePage.js","Components/AccountsPage/AccountsPage.js","Components/TablePager/TablePager.js","Components/PagedTable/PagedTable.js","graphql/queryBlocksConnection.js","graphql/queryBlocksCount.js","Components/BlocksPagedTable/BlocksPagedTable.js","Components/BlocksPage/BlocksPage.js","Components/BlockTransactionsTable/BlockTransactionsTable.js","graphql/queryBlock.js","Components/BlockDetailsPage/BlockDetailsPage.js","graphql/queryTransactionsConnection.js","graphql/queryTransactionsCount.js","Components/TransactionsPagedTable/TransactionsPagedTable.js","Components/TransactionsPage/TransactionsPage.js","graphql/queryTransaction.js","Components/TransactionDetailsPage/TransactionDetailsPage.js","Components/CanistersPage/CanistersPage.js","utils/getRandomInt.js","utils/getRandomNumber.js","Components/SymbolD3/SymbolD3.js","Components/ImageLinkGrid/ImageLinkGrid.js","Components/AboutPage/AboutPage.js","graphql/querySearchGetType.js","Components/SearchPage/SearchPage.js","graphql/querySearchAutoComplete.js","Components/DEAppBar/DEAppBar.js","Components/Footer/Footer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Constants","Object","freeze","URI_SERVER_HTTP","URI_SERVER_WEB_SOCKETS","URI_CDN_FONT_AWESOME","URI_CDN_GOOGLE_FONTS","URI_ABOUT_APOLLO","URI_ABOUT_NOMICS","URI_ABOUT_GRAPHQL","URI_ABOUT_GRAPHQL_YOGA","URI_ABOUT_MATERIAL_UI","URI_ABOUT_MY_SQL","URI_ABOUT_PRISMA","URI_ABOUT_REACT","URI_ABOUT_STYLED_COMPONENTS","URI_GITHUB_CONTRIBUTORS","URI_GITHUB_OPEN_BLOCK_EXPLORER_PROJECT","URI_GITHUB_OPEN_BLOCK_EXPLORER_WIKI","URI_GITHUB_DYLAN","URI_GITHUB_MIT_LICENSE","URI_GITHUB_TODD","URI_TWITTER_OPEN_BLOCK_EXPLORER","COLOR_DFINITY_BLACK","COLOR_DFINITY_BLACK_LIGHTER","COLOR_DFINITY_BLACK_DARKER","COLOR_DFINITY_LIGHT_ORANGE","COLOR_DFINITY_DARK_ORANGE","COLOR_DFINITY_BLUE_400","COLOR_DFINITY_BLUE_500","COLOR_DFINITY_BLUE_600","COLOR_DFINITY_BLUE_700","COLOR_DFINITY_BLUE_800","COLOR_DFINITY_BLUE_900","COLOR_TEXT_LIGHT","COLOR_DARK_TEXT","COLOR_DARK_TEXT_FADED","COLOR_TEXT_DARKER","COLOR_TEXT_DARKEST","COLOR_LIGHT_TEXT_FADED","COLOR_DARK_BODY_DARKER_MAC_OS","COLOR_DARK_BODY_LIGHTER_MAC_OS","COLOR_DARK_DRAWER_DIVIDER_MAC_OS","COLOR_DARK_DRAWER_DIVIDER_YOUTUBE","COLOR_DARK_FOOTER_TEXT_ICON_NETFLIX","COLOR_DARK_TEXT_MAC_OS","COLOR_LIGHT_BODY_TEXT_GOOGLE","COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE","COLOR_LIGHT_CHART_GOOGLE","COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE","COLOR_LIGHT_DRAWER_ICON_GOOGLE","COLOR_LIGHT_DRAWER_TEXT_GOOGLE","COLOR_TWITTER_BLUE","COLOR_TWITTER_GREEN","COLOR_TWITTER_ORANGE","COLOR_TWITTER_PURPLE","COLOR_GRAY_ON_WHITE","FONT_PRIMARY","MATERIAL_FONT_SIZE_H1","MATERIAL_FONT_SIZE_H2","MATERIAL_FONT_SIZE_H3","MATERIAL_FONT_SIZE_H4","MATERIAL_FONT_SIZE_H5","MATERIAL_FONT_SIZE_H6","MATERIAL_FONT_SIZE_SUBTITLE_1","MATERIAL_FONT_SIZE_SUBTITLE_2","MATERIAL_FONT_SIZE_BODY_1","MATERIAL_FONT_SIZE_BODY_2","MATERIAL_FONT_SIZE_BUTTON","MATERIAL_FONT_SIZE_CAPTION","MATERIAL_FONT_SIZE_OVERLINE","MATERIAL_CIRCULAR_INDICATOR_SIZE","MATERIAL_UI_ICON_BUTTON_FONT_SIZE","FONT_SIZE_TABLE_XS","BREAKPOINT_MIN_XS","BREAKPOINT_MAX_XS","BREAKPOINT_MIN_SM","BREAKPOINT_MAX_SM","BREAKPOINT_MIN_MD","BREAKPOINT_MAX_MD","BREAKPOINT_MIN_LG","BREAKPOINT_MAX_LG","BREAKPOINT_MIN_XL","BREAKPOINT_LG_MAX_WIDTH","DRAWER_WIDTH","FOOTER_HEIGHT","FOOTER_MARGIN_XS","FOOTER_MARGIN_SM_AND_UP","ICON_SVG_PATH_TPS","ICON_SVG_PATH_VOLUME","ICON_SVG_PATH_MARKET_CAP","ICON_SVG_PATH_BLOCK","ICON_SVG_PATH_PRICE","ICON_SVG_PATH_BLOCK_TIME","ICON_SVG_PATH_THEME_LIGHT","ICON_SVG_PATH_THEME_DARK","ICON_SVG_PATH_BITCOIN","ABOUT_PAGE_MARGIN_XS","ABOUT_PAGE_MARGIN_SM","ABOUT_PAGE_MARGIN_MD","ABOUT_PAGE_MARGIN_LG","HOME_PAGE_MARGIN_XS","HOME_PAGE_MARGIN_SM_AND_UP","TABLE_ROW_HEIGHT_XS","TABLE_ROW_HEIGHT_SM_AND_UP","ABOUT_PAGE_PROJECT_ICONS_HEIGHT","COINBASE_CHECKOUT_ID","GOOGLE_ANALYTICS_TRACKING_ID","GlobalStyle","createGlobalStyle","_templateObject","props","theme","colorBodyBackground","themeLight","isDark","colorAboutBackgroundPrimary","colorAboutBackgroundSecondary","colorAboutHeaderText","colorAboutTwitterBackground","colorAppBarBackground","colorAppBarTextButton","colorAppBarOpenText","colorAppBarExplorerText","colorBodyButtonBackground","colorBodyButtonText","colorBodyButtonHoverBackground","colorBodyButtonHoverText","colorBodyText","colorBodyTextDim","colorBodyTextLink","colorDashCardBackground","colorDashCardIcon","colorDashCardIconOpacity","colorDrawerBackground","colorDrawerDivider","colorDrawerIcon","colorDrawerIconTextSelected","colorDrawerText","colorChartBackground","colorChartTooltipBackground","colorChartAxes","colorChartGrid","colorChartText","colorChartLine","colorChartActiveDotStroke","colorIconButtonHover","colorTableBackgroundPrimary","colorTableRowBorder","colorTableTextDim","colorFooterBackground","colorFooterTextIcon","colorSearchText","colorSearchIcon","opacityActionDisabled","opacityActionHover","themeDark","ResponsiveComponent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleWindowResize","bind","assertThisInitialized","throttledHandleWindowResize","throttle","window","addEventListener","removeEventListener","forceUpdate","Component","TrackablePage","get","prototype","scrollTo","pathName","location","pathname","search","trackPage","prevProps","currentPathName","nextPathName","ReactGA","set","page","pageview","Breakpoints","XS","SM","MD","LG","XL","getBreakpoint","isDesktopDrawerOpen","drawerWidth","matchMedia","matches","isBreakpointDesktop","breakpoint","isBreakpointGreaterOrEqualTo","StyledPaper","styled","Paper","DynamicTable_templateObject","TypographyTitle","Typography","_templateObject2","StyledTable","Table","_templateObject3","TableRowHeader","TableRow","_templateObject4","_ref","concat","TableRowBody","_templateObject5","StyledTableCell","TableCell","_templateObject6","_ref2","TableCellHeader","_templateObject7","StyledLink","Link","_templateObject8","TableRowFooter","_templateObject9","TableCellFooter","_templateObject10","DynamicTable","rows","_this$props","columnWidths","footerRow","headerRow","title","react_default","a","createElement","elevation","map","width","index","key","index_es","cell","align","isNumeric","padding","link","to","value","getBodyRowElements","_this2","_this$props2","getBodyRows","maxRows","slide","rowHeight","document","visibilityState","slice","renderprops","items","keys","bodyRow","mapKey","from","height","opacity","enter","leave","state","style","getBodyRowElement","in","timeout","rowIndex","cells","borderBottomStyle","container","direction","justify","alignItems","queryBlocks","gql","queryBlocks_templateObject","subscriptionBlock","subscriptionBlock_templateObject","BlocksSlideTableWithData","firstBlockAdded","handleQueryCompleted","react_apollo_esm","query","variables","first","onCompleted","loading","error","data","subscribeToMore","subscribeToNewObjects","BlocksSlideTable_BlocksSlideTable","blocks","length","handleAddNewBlock","_this3","updateQuery","prev","subscriptionData","block","node","toConsumableArray","BlocksSlideTable","_this4","Components_DynamicTable_DynamicTable","_this$props3","date","Date","timestamp","toLocaleString","numTransactions","queryTransactions","queryTransactions_templateObject","subscriptionTransaction","subscriptionTransaction_templateObject","getHashString","hash","maxLength","undefined","substring","substr","TransactionsFadeTableWithData","TransactionsFadeTable_TransactionsFadeTable","transactions","transaction","TransactionsFadeTable","amount","toFixed","toString","GridNoWrap","Grid","DashCard_templateObject","SvgIconCard","SvgIcon","DashCard_templateObject2","cardindex","DashCard_templateObject3","TypographyValue","DashCard_templateObject4","DashCard","cardIndex","className","svgIconPath","wrap","item","d","DashCard_TypographyTitle","noWrap","queryNetworkStats","queryNetworkStats_templateObject","subscriptionNetworkStats","subscriptionNetworkStats_templateObject","BlockTimeCard","secondsPerBlock","networkStats","Components_DashCard_DashCard","TransactionsCard","transactionsPerSecond","queryPrice","queryPrice_templateObject","subscriptionPrice","subscriptionPrice_templateObject","PriceCard","price","AreaChart_templateObject","AreaChart_templateObject2","StyledAreaChart","RechartsAreaChart","AreaChart_templateObject3","AreaChart","chartHeight","getData","AreaChart_StyledPaper","AreaChart_TypographyTitle","getTitle","es6","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","stroke","vertical","dataKey","getDataKeyX","tick","fill","tickFormatter","getGetTickX","tickMargin","tickSize","domain","dataMin","getDomainMinY","dataMax","getDomainMaxY","getGetTickY","tickLine","labelFormatter","getGetTooltipX","formatter","getGetTooltipY","contentStyle","background","border","borderRadius","fontSize","boxShadow","shadows","itemStyle","color","labelStyle","cursor","animationDuration","type","getDataKeyY","strokeWidth","fillOpacity","activeDot","r","Error","queryDailyNetworkStatses","queryDailyNetworkStatses_templateObject","TransactionsChartWithData","last","TransactionsChart_TransactionsChart","dailyNetworkStatses","TransactionsChart","Math","floor","ceil","toLocaleDateString","timeZone","k","Number","isInteger","propTypes","PropTypes","number","isRequired","array","bool","object","withTheme","queryCandles","queryCandles_templateObject","PriceChartWithData","startDate","setDate","getDate","endDate","start","toISOString","end","PriceChart_PriceChart","candles","PriceChart","GridSection","HomePage_templateObject","duration","standard","easing","easeInOut","GridSectionTables","HomePage_templateObject2","GridCard","HomePage_templateObject3","GridChart","HomePage_templateObject4","_ref3","GridTable","HomePage_templateObject5","_ref4","CardBlocks","HomePage_templateObject6","CardBlockTime","HomePage_templateObject7","CardTransactions","HomePage_templateObject8","CardPrice","HomePage_templateObject9","HomePage","blockHeight","getSectionCards","getSectionCharts","getSectionTables","Fade_default","delay","Components_TransactionsChart_TransactionsChart","Components_PriceChart_PriceChart","Components_BlocksSlideTable_BlocksSlideTable","Components_TransactionsFadeTable_TransactionsFadeTable","setState","TypographyHeading","AccountsPage_templateObject","TypographyBody","AccountsPage_templateObject2","AccountsPage","marginTop","marginLeft","TablePager_templateObject","StyledToolbar","Toolbar","TablePager_templateObject2","TypographyCaption","TablePager_templateObject3","TypographyRows","TablePager_templateObject4","TypographyCount","TablePager_templateObject5","StyledSelect","other","esm_extends","assign","classes","icon","root","selectMenu","TablePager_templateObject6","_ref5","StyledMenuItem","MenuItem","TablePager_templateObject7","StyledIconButton","IconButton","TablePager_templateObject8","_ref6","fade","StyledIconButtonNotLast","TablePager_templateObject9","TablePagerActions","count","onChangePage","rowsPerPage","objectWithoutProperties","lastPage","onClick","event","disabled","aria-label","FirstPage_default","KeyboardArrowLeft_default","KeyboardArrowRight_default","max","LastPage_default","TablePager","newLastPage","TablePager_StyledTableCell","colSpan","getToolbar","getRowsSelectCount","getActions","onChangeRowsPerPage","rowsPerPageOptions","rowsText","react","input","onChange","MenuProps","PaperProps","rowsPerPageOption","getCountText","total","_this$props4","min","t","m","_this$props5","TablePager_TablePagerActions","PagedTable_templateObject","PagedTable_templateObject2","DivCircularProgress","div","PagedTable_templateObject3","zIndex","modal","StyledCircularProgress","CircularProgress","PagedTable_templateObject4","PagedTable_templateObject5","StyledTableRow","PagedTable_templateObject6","PagedTable_templateObject7","PagedTable_templateObject8","PagedTable_templateObject9","PagedTable_templateObject10","PagedTable","pageIndex","priorPageIndex","priorStartCursor","priorEndCursor","firstId","startCursor","endCursor","handleChangePage","handleChangeRowsPerPage","PagedTable_StyledPaper","PagedTable_TypographyTitle","getTableElements","getDataConnection","queryCount","_this$state","getCount","lastPageIndex","after","before","fetchPolicy","connection","edges","pageInfo","skip","where","id_lte","loadingCount","errorCount","dataCount","aggregate","mountOnEnter","unmountOnExit","size","PagedTable_StyledTable","getHeaderRowElement","getFooterRowElement","PagedTable_TableCellHeader","PagedTable_StyledLink","PagedTable_StyledTableCell","_this$state2","show","PagedTable_TableRowFooter","Components_TablePager_TablePager","prevState","target","queryBlocksConnection","queryBlocksConnection_templateObject","queryBlocksCount","queryBlocksCount_templateObject","BlocksPagedTable","Components_PagedTable_PagedTable","blocksConnection","edge","BlocksPage_templateObject","GridPagedTable","BlocksPage_templateObject2","BlocksPage","BlocksPage_GridSection","Components_BlocksPagedTable_BlocksPagedTable","BlockTransactionsTable","queryBlock","queryBlock_templateObject","BlockDetailsPage_templateObject","BlockDetailsPage_templateObject2","BlockDetailsPage_templateObject3","BlockDetailsPage_templateObject4","BlockDetailsPage","parseInt","match","params","BlockDetailsPage_GridSection","BlockDetailsPage_TypographyHeading","BlockDetailsPage_TypographyBody","BlockDetailsPage_GridTable","Components_BlockTransactionsTable_BlockTransactionsTable","queryTransactionsConnection","queryTransactionsConnection_templateObject","queryTransactionsCount","queryTransactionsCount_templateObject","TransactionsPagedTable","transactionsConnection","TransactionsPage_templateObject","TransactionsPage_templateObject2","TransactionsPage","TransactionsPage_GridSection","TransactionsPage_GridPagedTable","Components_TransactionsPagedTable_TransactionsPagedTable","queryTransaction","queryTransaction_templateObject","TransactionDetailsPage_templateObject","TransactionDetailsPage_templateObject2","TransactionDetailsPage_templateObject3","TransactionDetailsPage_templateObject4","TransactionDetailsPage","hashMaxLength","TransactionDetailsPage_GridSection","TransactionDetailsPage_TypographyHeading","TransactionDetailsPage_TypographyBody","TransactionDetailsPage_StyledLink","CanistersPage_templateObject","CanistersPage_templateObject2","CanistersPage","CanistersPage_TypographyHeading","CanistersPage_TypographyBody","getRandomInt","random","getRandomNumber","SymbolD3","dragStarted","dragged","dragEnded","rotate","stage","renderer","linksGraphics","simulationWidth","logoMode","simulationHeight","scaleSimulationToPixi","centerX","centerY","scaleToWindow","numSymbolNodes","numVertices","numNodes","forceManyBodyStrengthSymbolNodes","forceManyBodyStrengthNonSymbolNodes","linkDistance","nodeStrokeWidth","nodeRadius","nodeRadiusSelected","nodeSelectedFillColorArray","nodeSelectedStrokeColorArray","nodeOpacity","nodeOpacitySelected","linkStrokeWidth","linkStrokeWidthIncreaseAtMagnitude","symbolHeightMultiplier","rotateOffset","rotateTimeMs","rotateAmount","selectedNodeIndex","newBlockNodeStartTime","newBlockLinksStartTime","newBlockNodeTimerMs","newBlockLinksTimerMs","draw","destroy","pixiResizeRenderer","nodesData","forEach","pixiDrawNode","ref","el","element","addNodes","addLinks","createSimulation","pixiSetup","i","pos","getNodePosition","push","fx","fy","_fx","_fy","linkCount","PI","scale","circleMode","cos","sin","linksData","indexSymbol","indexSymbolNext","addLink","vertexShapeTop","indexShapeTop","indexShapeTopNext","indexShapeAlmostTop","j","indexShapeNext","indexSpiralNext","indexSource","indexTarget","strength","source","_strength","_opacity","simulation","d3","force","link_force","distance","on","alphaDecay","_this5","PIXI","skipHello","antialias","transparent","resolution","autoResize","appendChild","view","graphics","addChild","subject","find","x","y","resize","position","nodeStrokeColor","nodeFillColor","selectedNodeMagnitude","arguments","rgbNumberFromArray","gradientColor","getNodeStrokeColorArray","clear","lineStyle","beginFill","filters","drawCircle","linkMagnitude","linkOpacity","alpha","getColorArray","moveTo","lineTo","numIndices","purple","pink","darkOrange","lightOrange","blue","transitionIndicesSmall","transitionIndicesGradual","lastPurpleIndex","lastPinkIndex","lastDarkOrangeIndex","lastLightOrangeIndex","lastBlueIndex","percentage","color1","color2","percent","p1","p2","round","active","alphaTarget","restart","_this6","pixiMoveNode","elapsedMs","pixiDrawLink","endFill","render","elapsed","ImageLinkGrid","widths","maxHeight","calculateMaxImageDimensions","arePropsChanged","imageLinks","imageLink","src","justifyRow","marginBetweenRows","perRow","containerHeight","imageLinkGrid","maxWidthColumn","Array","row","isShortRow","columnIndex","href","rel","alt","img","Image","onload","_event$currentTarget","currentTarget","naturalWidth","naturalHeight","PaperParallax","AboutPage_templateObject","GridParallax","AboutPage_templateObject2","TypographyParallax","AboutPage_templateObject3","AboutPage_templateObject4","GridSectionPrimary","AboutPage_templateObject5","GridSectionSecondary","AboutPage_templateObject6","GridItem","AboutPage_templateObject7","GridImageLeft","AboutPage_templateObject8","GridImageRight","AboutPage_templateObject9","GridSymbolLeft","AboutPage_templateObject10","GridText","_templateObject11","_ref7","GridTextLeft","_templateObject12","_ref8","GridTextRight","_templateObject13","_ref9","_templateObject14","_ref10","_templateObject15","StyledA","_templateObject16","ImgSection","_templateObject17","ButtonSubscribe","Button","_templateObject18","MailIconButton","MailIcon","_templateObject19","SpanHeart","span","_templateObject20","ButtonDonate","CoinbaseCommerceButton","_templateObject21","SvgIconButton","_templateObject22","PaperTwitter","_templateObject23","_ref11","ImageLinkGridThanks","_templateObject24","AboutPage","getHeader","getSectionMission","getSectionOpenSource","getSectionCommunity","getSectionContributors","getSectionThanks","dist","bgImage","bannerXHorizon","bgImageAlt","bgImageStyle","isThemeDark","Components_SymbolD3_SymbolD3","getSymbolD3Width","AboutPage_TypographyHeading","AboutPage_TypographyBody","Flip_default","openBlockExplorerLogo","dist_index_es","sourceType","screenName","options","noFooter","action","method","name","noValidate","aria-hidden","tabIndex","defaultValue","checkoutId","LightSpeed_default","githubOctocat","imagesPerRow","reactHeight","styledComponentsHeight","materialUiHeight","nomicsHeight","apolloHeight","graphqlHeight","prismaHeight","mySqlHeight","reactLogo","styledComponentsLogoDark","styledComponentsLogoLight","materialUiLogo","nomicsLogoDark","nomicsLogoLight","apolloLogoDark","apolloLogoLight","graphqlLogo","prismaLogoDark","prismaLogoLight","mySqlLogo","contentWidth","innerWidth","querySearchGetType","querySearchGetType_templateObject","SearchPage_templateObject","SearchPage_templateObject2","SearchPage","SearchPage_TypographyHeading","SearchPage_TypographyBody","searchGetType","Redirect","querySearchAutoComplete","querySearchAutoComplete_templateObject","StyledAppBar","AppBar","DEAppBar_templateObject","drawer","SearchAppBar","DEAppBar_templateObject2","DEAppBar_templateObject3","SearchToolbar","DEAppBar_templateObject4","ImgProductIcon","DEAppBar_templateObject5","TypographyAppName","DEAppBar_templateObject6","TypographyBlock","DEAppBar_templateObject7","TypographyBorder","DEAppBar_templateObject8","TypographyExplorer","DEAppBar_templateObject9","InputSearch","Input","DEAppBar_templateObject10","ListSearch","List","DEAppBar_templateObject11","ListItemSearch","ListItem","DEAppBar_templateObject12","highlighted","SearchIconListSearch","SearchIcon","DEAppBar_templateObject13","DEAppBar_templateObject14","StyledMenuIcon","MenuIcon","DEAppBar_templateObject15","StyledSearchIcon","DEAppBar_templateObject16","StyledCloseIcon","CloseIcon","DEAppBar_templateObject17","_ref12","StyledSwipeableDrawer","_ref13","paper","DEAppBar_templateObject18","StyledDrawer","_ref14","DEAppBar_templateObject19","StyledDivider","Divider","DEAppBar_templateObject20","DrawerListItemIcon","ListItemIcon","DEAppBar_templateObject21","DrawerListItemText","_ref15","primary","DEAppBar_templateObject22","DrawerListItem","DEAppBar_templateObject23","selected","DEAppBar","isSearchOn","searchQuery","toolbarDivRef","React","createRef","maxSearchAutoCompleteItems","handleSearchClick","handleCloseClick","handleDownshiftStateChange","handleDownshiftChange","handleSearchSubmit","isActiveRoute","getToolbarSearchContent","getToolbarDefaultContent","getDrawer","handleAppBarResize","current","offsetHeight","isMobileDrawerOpen","handleMobileDrawerMenuClick","variant","flexGrow","downshift_esm","onStateChange","selectedItem","_ref16","getInputProps","getItemProps","getMenuProps","isOpen","inputValue","highlightedIndex","onSubmit","autoFocus","disableUnderline","fullWidth","placeholder","_ref17","searchAutoComplete","disableGutters","DEAppBar_StyledToolbar","getMenuButton","getAppTitle","getSearchButton","handleDesktopDrawerMenuClick","DEAppBar_StyledIconButton","textDecoration","getProductIconHeight","Zoom_default","BREAKPOINT_MAX_XL","isBreakpointLessOrEqualTo","open","getDrawerContent","onOpen","onClose","button","component","Home_default","AccountCircle_default","Description_default","Info_default","changes","performSearch","preventDefault","routerRef","history","routeName","func","withRouter","FooterToolbar","Footer_templateObject","OneThirdGrid","Footer_templateObject2","LeftThirdGrid","Footer_templateObject3","RightThirdGrid","Footer_templateObject4","FooterTypography","Footer_templateObject5","FooterA","Footer_templateObject6","AwesomeIconButtonGrid","Footer_templateObject7","AwesomeIconButton","Footer_templateObject8","AwesomeIcon","Icon","Footer_templateObject9","ThemeCheckbox","Checkbox","Footer_templateObject10","ThemeSvgIcon","Footer_templateObject11","Footer","loadCSS","querySelector","getCopyrightText","getSimulatedText","getNomicsTextDescription","getNomicsTextLink","checked","checkedIcon","handleThemeChange","httpLink","HttpLink","uri","wsLink","WebSocketLink","reconnect","split","_getMainDefinition","getMainDefinition","kind","operation","apolloClient","ApolloClient","cache","InMemoryCache","dataIdFromObject","addTypename","initialize","anonymizeIp","ContentDiv","App_templateObject","enteringScreen","leavingScreen","ContentGrid","App_templateObject2","appbarheight","App","appBarHeight","isDesktopDrawerEnabled","setRouterRef","client","getTheme","styled_components_browser_esm","HashRouter","Components_DEAppBar_DEAppBar","onTransitionEnd","dispatchEvent","Event","Route","exact","path","Components_HomePage_HomePage","Components_BlocksPage_BlocksPage","Components_TransactionsPage_TransactionsPage","Components_AboutPage_AboutPage","Components_BlockDetailsPage_BlockDetailsPage","Components_TransactionDetailsPage_TransactionDetailsPage","Components_Footer_Footer","contentRect","ReactDOM","src_App","getElementById"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gFCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kFCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mFCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qVC4HzBC,EAtHGC,OAAOC,OAAO,CAK9BC,gBAAiB,kDACjBC,uBAAwB,gDACxBC,qBACE,qFAEFC,qBACE,6EACFC,iBAAkB,iCAClBC,iBAAkB,kDAClBC,kBAAmB,uBACnBC,uBAAwB,yCACxBC,sBAAuB,2BACvBC,iBAAkB,yBAClBC,iBAAkB,yBAClBC,gBAAiB,uBACjBC,4BAA6B,qCAC7BC,wBAAyB,mDACzBC,uCAAwC,yDACxCC,oCAAqC,8DACrCC,iBAAkB,8BAClBC,uBAAwB,6EACxBC,gBAAiB,kCACjBC,gCAAiC,+BAEjCC,oBAAqB,kBACrBC,4BAA6B,kBAC7BC,2BAA4B,kBAC5BC,2BAA4B,oBAC5BC,0BAA2B,mBAC3BC,uBAAwB,UACxBC,uBAAwB,UACxBC,uBAAwB,UACxBC,uBAAwB,UACxBC,uBAAwB,UACxBC,uBAAwB,UACxBC,iBAAkB,UAClBC,gBAAiB,UACjBC,sBAAuB,qBACvBC,kBAAmB,qBACnBC,mBAAoB,qBACpBC,uBAAwB,kBACxBC,8BAA+B,UAC/BC,+BAAgC,UAChCC,iCAAkC,UAClCC,kCAAmC,UACnCC,oCAAqC,UACrCC,uBAAwB,UACxBC,6BAA8B,UAC9BC,iCAAkC,UAClCC,yBAA0B,UAC1BC,kCAAmC,UACnCC,+BAAgC,UAChCC,+BAAgC,UAChCC,mBAAoB,qBACpBC,oBAAqB,oBACrBC,qBAAsB,oBACtBC,qBAAsB,qBACtBC,oBAAqB,qBACrBC,aAAc,qBACdC,sBAAuB,OACvBC,sBAAuB,UACvBC,sBAAuB,OACvBC,sBAAuB,WACvBC,sBAAuB,SACvBC,sBAAuB,UACvBC,8BAA+B,OAC/BC,8BAA+B,WAC/BC,0BAA2B,OAC3BC,0BAA2B,WAC3BC,0BAA2B,WAC3BC,2BAA4B,UAC5BC,4BAA6B,WAC7BC,iCAAkC,GAClCC,kCAAmC,GACnCC,mBAAoB,YACpBC,kBAAmB,EACnBC,kBAAmB,IACnBC,kBAAmB,IACnBC,kBAAmB,IACnBC,kBAAmB,IACnBC,kBAAmB,KACnBC,kBAAmB,KACnBC,kBAAmB,KACnBC,kBAAmB,KACnBC,wBAAyB,KACzBC,aAAc,IACdC,cAAe,GACfC,iBAAkB,EAClBC,wBAAyB,GACzBC,kBAAmB,4EACnBC,qBAAsB,sFACtBC,yBAA0B,gIAC1BC,oBAAqB,+KACrBC,oBAAqB,sXACrBC,yBAA0B,yVAC1BC,0BAA2B,2qBAC3BC,yBAA0B,oYAC1BC,sBAAuB,iwBACvBC,qBAAsB,EACtBC,qBAAsB,GACtBC,qBAAsB,GACtBC,qBAAsB,IACtBC,oBAAqB,EACrBC,2BAA4B,GAG5BC,oBAAqB,GACrBC,2BAA4B,GAC5BC,gCAAiC,GACjCC,qBAAsB,uCACtBC,6BAA8B,kKC7GzB,IAAMC,EAAcC,YAAHC,IAIN,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,sBAO1BC,EAAa,CAExBC,QAAQ,EACRC,4BAA6B,UAC7BC,8BAA+B,UAC/BC,qBAAsB,UACtBC,4BAA6B,UAC7BC,sBAAuB,UACvBC,sBAAuBzH,EAAUuC,uBACjCmF,oBAAqB1H,EAAU8C,6BAC/B6E,wBAAyB3H,EAAU+B,uBACnCkF,oBAAqB,UACrBW,0BAA2B5H,EAAU+B,uBACrC8F,oBAAqB7H,EAAUkC,iBAC/B4F,+BAAgC9H,EAAU6B,uBAC1CkG,yBAA0B/H,EAAUkC,iBACpC8F,cAAehI,EAAU8C,6BACzBmF,iBAAkBjI,EAAU+C,iCAC5BmF,kBAAmBlI,EAAU+B,uBAC7BoG,wBAAyB,UACzBC,kBAAmB,CAACpI,EAAU+B,uBAAwB,UAAW,UAAW,WAC5EsG,yBAA0B,EAC1BC,sBAAuB,UACvBC,mBAAoBvI,EAAUiD,kCAC9BuF,gBAAiBxI,EAAUkD,+BAC3BuF,4BAA6BzI,EAAU+B,uBACvC2G,gBAAiB1I,EAAUmD,+BAC3BwF,qBAAsB,UACtBC,4BAA6B,4BAC7BC,eAAgB7I,EAAU+C,iCAC1B+F,eAAgB9I,EAAUiD,kCAC1B8F,eAAgB/I,EAAU+C,iCAC1BiG,eAAgBhJ,EAAU+B,uBAC1BkH,0BAA2B,UAC3BC,qBAAsB,UACtBC,4BAA6B,UAC7BC,oBAAqBpJ,EAAUiD,kCAC/BoG,kBAAmB,UACnBC,sBAAuB,UACvBC,oBAAqB,UACrBC,gBAAiBxJ,EAAU8C,6BAC3B2G,gBAAiB,UACjBC,sBAAuB,IACvBC,mBAAoB,KAMTC,EAAY,CACvBzC,QAAQ,EACRC,4BAA6BpH,EAAUwC,8BACvC6E,8BAA+BrH,EAAUyC,+BACzC6E,qBAAsB,UACtBC,4BAA6BvH,EAAUyC,+BACvC+E,sBAAuBxH,EAAUyC,+BACjCgF,sBAAuBzH,EAAUoC,sBACjCsF,oBAAqB1H,EAAUmC,gBAC/BwF,wBAAyB3H,EAAU0B,2BACnCuF,oBAAqBjH,EAAUwC,8BAC/BoF,0BAA2B5H,EAAU+B,uBACrC8F,oBAAqB7H,EAAU6C,uBAC/BiF,+BAAgC9H,EAAU6B,uBAC1CkG,yBAA0B/H,EAAUkC,iBACpC8F,cAAehI,EAAU6C,uBACzBoF,iBAAkBjI,EAAU6C,uBAC5BqF,kBAAmBlI,EAAU8B,uBAC7BqG,wBAAyBnI,EAAUyC,+BACnC2F,kBAAmB,CAAC,UAAW,UAAW,UAAW,WACrDC,yBAA0B,GAC1BC,sBAAuBtI,EAAUyC,+BACjC8F,mBAAoBvI,EAAU2C,kCAC9B6F,gBAAiBxI,EAAUoC,sBAC3BqG,4BAA6B,UAC7BC,gBAAiB1I,EAAUoC,sBAC3BuG,qBAAsB3I,EAAUyC,+BAChCmG,4BAA6B,yBAC7BC,eAAgB7I,EAAU4C,oCAC1BkG,eAAgB9I,EAAU0C,iCAC1BqG,eAAgB/I,EAAUoC,sBAC1B4G,eAAgBhJ,EAAU8B,uBAC1BmH,0BAA2BjJ,EAAUyC,+BACrCyG,qBAAsBlJ,EAAUmC,gBAChCgH,4BAA6BnJ,EAAUyC,+BACvC2G,oBAAqBpJ,EAAU2C,kCAC/B0G,kBAAmB,UACnBC,sBAAuBtJ,EAAUyC,+BACjC8G,oBAAqBvJ,EAAU4C,oCAC/B4G,gBAAiBxJ,EAAU8C,6BAC3B2G,gBAAiB,UACjBC,sBAAuB,GACvBC,mBAAoB,sDC9DPE,cAnCb,SAAAA,IAAc,IAAAC,EAAA,OAAA7J,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAAH,IACZC,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAA4J,GAAAM,KAAAH,QAGKI,mBAAqBN,EAAKM,mBAAmBC,KAAxBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IAG1BA,EAAKS,4BAA8BC,YAAS,KAAK,EAAMV,EAAKM,oBAPhDN,mFAeZW,OAAOC,iBAAiB,SAAUV,KAAKO,4EAQvCE,OAAOE,oBAAoB,SAAUX,KAAKO,0EAQ1CP,KAAKY,qBApCyBC,aC2CnBC,8LArCX7K,OAAA8K,EAAA,EAAA9K,QAAAiK,EAAA,EAAAjK,CAAA6K,EAAAE,WAAA,oBAAAhB,MAAAG,KAAAH,MAGAS,OAAOQ,SAAS,EAAG,GAEnB,IAAMC,EAAWlB,KAAKjD,MAAMoE,SAASC,SAAWpB,KAAKjD,MAAMoE,SAASE,OACpErB,KAAKsB,UAAUJ,8CASEK,GACjB,IAAMC,EAAkBD,EAAUJ,SAASC,SAAWG,EAAUJ,SAASE,OACnEI,EAAezB,KAAKjD,MAAMoE,SAASC,SAAWpB,KAAKjD,MAAMoE,SAASE,OAEpEG,IAAoBC,GACtBzB,KAAKsB,UAAUG,qCAQTP,GAGNQ,IAAQC,IAAI,CAAEC,KAAMV,IACpBQ,IAAQG,SAASX,UAtCKrB,6BCJfiC,EAAc7L,OAAOC,OAAO,CACvC6L,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IAUC,SAASC,EAAcC,GAC5B,IAAMC,EAAeD,EAAsBrM,EAAUoF,aAAe,EACpE,OAAIqF,OAAO8B,WAAW,gBAAkBvM,EAAU2E,kBAAoB2H,GAAe,OAAOE,QACnFV,EAAYC,GACZtB,OAAO8B,WAAW,gBAAkBvM,EAAU6E,kBAAoByH,GAAe,OAAOE,QACxFV,EAAYE,GACZvB,OAAO8B,WAAW,gBAAkBvM,EAAU+E,kBAAqBuH,GAAe,OAAOE,QACzFV,EAAYG,GACZxB,OAAO8B,WAAW,gBAAkBvM,EAAUiF,kBAAoBqH,GAAe,OAAOE,QACxFV,EAAYI,GAEZJ,EAAYK,GAiChB,SAASM,IACd,OAxBK,SAAsCC,GAC3C,OAAQA,GACN,KAAKZ,EAAYC,GACf,OAAOtB,OAAO8B,WAAW,eAAiBvM,EAAU0E,kBAAoB,OAAO8H,QACjF,KAAKV,EAAYE,GACf,OAAOvB,OAAO8B,WAAW,eAAiBvM,EAAU4E,kBAAoB,OAAO4H,QACjF,KAAKV,EAAYG,GACf,OAAOxB,OAAO8B,WAAW,eAAiBvM,EAAU8E,kBAAoB,OAAO0H,QACjF,KAAKV,EAAYI,GACf,OAAOzB,OAAO8B,WAAW,eAAiBvM,EAAUgF,kBAAoB,OAAOwH,QACjF,KAAKV,EAAYK,GACjB,QACE,OAAO1B,OAAO8B,WAAW,eAAiBvM,EAAUkF,kBAAoB,OAAOsH,SAY5EG,CAA6Bb,EAAYG,ijEC1ClD,IAAMW,GAAcC,YAAOC,IAAPD,CAAHE,KAEC,SAAAhG,GAAK,OAAIA,EAAMC,MAAMmC,8BAIjC6D,GAAkBH,YAAOI,IAAPJ,CAAHK,KAER,SAAAnG,GAAK,OAAIA,EAAMC,MAAMgB,eAKfhI,EAAUyD,aACZzD,EAAU+D,uBAKrBoJ,GAAcN,YAAOO,IAAPP,CAAHQ,KAEErN,EAAUyD,cAMvB6J,GAAiBT,YAAOU,IAAPV,CAAHW,IAENxN,EAAUwG,2BAA6B,KAC/C,SAAAiH,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,qBAAA2B,OACY1N,EAAUuG,oBAAsB,KAD5C,eASAoH,GAAed,YAAOU,IAAPV,CAAHe,KAMZC,GAAkBhB,YAAOiB,IAAPjB,CAAHkB,IAED,SAAAhH,GAAK,OAAIA,EAAMC,MAAMoC,qBAC5B,SAAArC,GAAK,OAAIA,EAAMC,MAAMgB,eACjBhI,EAAUmE,0BAOrB,SAAA6J,GAAA,OAAAA,EAAGtB,aACYZ,EAAYC,IAA3B,wBAAA2B,OACe1N,EAAUyE,mBADzB,eAOAwJ,GAAkBpB,YAAOgB,GAAPhB,CAAHqB,IAIR,SAAAnH,GAAK,OAAIA,EAAMC,MAAMiB,mBAK5BkG,GAAatB,YAAOuB,IAAPvB,CAAHwB,IAEH,SAAAtH,GAAK,OAAIA,EAAMC,MAAMkB,oBAQ5BoG,GAAiBzB,YAAOU,IAAPV,CAAH0B,KAMdC,GAAkB3B,YAAOgB,GAAPhB,CAAH4B,IAIR,SAAA1H,GAAK,OAAIA,EAAMC,MAAMqC,oBAsOnBqF,eAtKb,SAAAA,IAAc,IAAA5E,EAAA,OAAA7J,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAA0E,IACZ5E,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAAyO,GAAAvE,KAAAH,QAEK2E,KAAO,GAHA7E,wEAWL,IAAA8E,EAE2D5E,KAAKjD,MAA/D2F,EAFDkC,EAEClC,WAAYmC,EAFbD,EAEaC,aAAcC,EAF3BF,EAE2BE,UAAWC,EAFtCH,EAEsCG,UAAWC,EAFjDJ,EAEiDI,MACxD,OACEC,EAAAC,EAAAC,cAACvC,GAAD,CAAawC,UAAW,GACtBH,EAAAC,EAAAC,cAACnC,GAAD,KAAkBgC,GAClBC,EAAAC,EAAAC,cAAChC,GAAD,KACE8B,EAAAC,EAAAC,cAAA,gBACGN,EAAaQ,IAAI,SAACC,EAAOC,GAGxB,OACEN,EAAAC,EAAAC,cAAA,OAAKK,IAAKD,EAAOD,MAAOA,OAI9BL,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAAC7B,GAAD,CAAgBZ,WAAYA,GACzBqC,EAAUM,IAAI,SAACK,EAAMH,GACpB,OAGEN,EAAAC,EAAAC,cAAClB,GAAD,CACEvB,WAAYA,EACZ8C,IAAKD,EACLI,MAAOD,EAAKE,UAAY,QAAU,UAClCC,QAAQ,YAEI,MAAbH,EAAKI,KACJb,EAAAC,EAAAC,cAAChB,GAAD,CAAY4B,GAAIL,EAAKI,MAAOJ,EAAKM,OACjCN,EAAKM,WAOff,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACGzF,KAAKiG,sBAERhB,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACb,GAAD,KACGQ,EAAUO,IAAI,SAACK,EAAMH,GACpB,OACEN,EAAAC,EAAAC,cAACX,GAAD,CACE9B,WAAYA,EACZ8C,IAAKD,EACLI,MAAOD,EAAKE,UAAY,QAAU,UAClCC,QAAQ,YAEI,MAAbH,EAAKI,KACJb,EAAAC,EAAAC,cAAChB,GAAD,CAAY4B,GAAIL,EAAKI,MAAOJ,EAAKM,OACjCN,EAAKM,0DAiBF,IAAAE,EAAAlG,KAAAmG,EACiCnG,KAAKjD,MAAjD2F,EADWyD,EACXzD,WAAY0D,EADDD,EACCC,YAAaC,EADdF,EACcE,QAASC,EADvBH,EACuBG,MACpCC,EAAY7D,IAAeZ,EAAYC,GAC3C/L,EAAUuG,oBAAsBvG,EAAUwG,2BAS5C,MAHiC,YAA7BgK,SAASC,kBACXzG,KAAK2E,KAAOyB,IAAcM,MAAM,EAAGL,IAEjCC,EAKArB,EAAAC,EAAAC,cAACwB,EAAA,WAAD,CACEC,MAAO5G,KAAK2E,KACZkC,KAAM,SAAAC,GAAO,OAAIA,EAAQC,QACzBC,KAAM,CAAEC,OAAQ,EAAGC,QAAS,GAC5BC,MAAO,CAAEF,OAAQV,EAAWW,QAAS,GACrCE,MAAO,CAAEH,OAAQ,EAAGC,QAAS,IAG5B,SAACJ,EAASO,EAAO9B,GAAjB,OAA2B,SAAA+B,GAAK,OAAIpB,EAAKqB,kBAAkBT,EAASO,EAAO9B,EAAO+B,MAKhFtH,KAAK2E,KAAKU,IAAI,SAACyB,EAASvB,GAE7B,OACEN,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACED,IAAKsB,EAAQC,OACbS,IAAI,EACJC,QAAS,KAERvB,EAAKqB,kBAAkBT,EAAS,SAAUvB,EAAO,CAAE0B,OAAQV,iDAgBpDO,EAASO,EAAOK,EAAUJ,GAAO,IACzC5E,EAAe1C,KAAKjD,MAApB2F,WACR,OACEuC,EAAAC,EAAAC,cAACxB,GAAD,KACGmD,EAAQa,MAAMtC,IAAI,SAACK,EAAMH,GACxB,OACEN,EAAAC,EAAAC,cAACtB,GAAD,CACEnB,WAAYA,EACZ8C,IAAKD,EACLM,QAAQ,WAERyB,MAAiB,UAAVD,EAAoB,CAACO,kBAAmB,UAAY,MAE3D3C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EACbC,UAAU,MACVC,QAASrC,EAAKE,UAAY,WAAa,aACvCoC,WAAW,SACXV,MAAOA,GAEO,MAAb5B,EAAKI,KACJb,EAAAC,EAAAC,cAAChB,GAAD,CAAY4B,GAAIL,EAAKI,MAAOJ,EAAKM,OACjCN,EAAKM,kBAnNInF,wQCpH3B,IAWeoH,GAXKC,KAAHC,yNCAjB,IAaeC,GAbWF,KAAHG,MCIjBC,eAoBJ,SAAAA,IAAc,IAAAxI,EAAA,OAAA7J,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAAsI,IACZxI,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAAqS,GAAAnI,KAAAH,QAEKuI,iBAAkB,EAGvBzI,EAAK0I,qBAAuB1I,EAAK0I,qBAAqBnI,KAA1BpK,OAAAqK,EAAA,EAAArK,CAAA6J,IANhBA,wEAcL,IAAAoG,EAAAlG,KAAA4E,EACuB5E,KAAKjD,MAA5B2F,EADAkC,EACAlC,WAAY2D,EADZzB,EACYyB,QACnB,OACEpB,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACEC,MAAOT,GACPU,UAAW,CAAEC,MAAOvC,GACpBwC,YAAa7I,KAAKwI,sBAEjB,SAAA/E,GAA+C,IAA5CqF,EAA4CrF,EAA5CqF,QAASC,EAAmCtF,EAAnCsF,MAAOC,EAA4BvF,EAA5BuF,KAAMC,EAAsBxF,EAAtBwF,gBAClBC,EAAwB,kBAAMhD,EAAKgD,sBAAsBD,IAC/D,OAAIH,EAEA7D,EAAAC,EAAAC,cAACgE,GAAD,CACEC,OAAQ,GACRF,sBAAuBA,EACvBxG,WAAYA,EACZ2D,QAASA,EACTyC,SAAO,IAGJC,EAEL9D,EAAAC,EAAAC,cAACgE,GAAD,CACEC,OAAQ,GACRF,sBAAuBA,EACvBxG,WAAYA,EACZ2D,QAASA,EACT0C,OAAK,IAKP9D,EAAAC,EAAAC,cAACgE,GAAD,CACEC,OAAQJ,EAAKI,OACbF,sBAAuBA,EACvBxG,WAAYA,EACZ2D,QAASA,mDAcF2C,IACdhJ,KAAKuI,iBAAmBS,EAAKI,OAAOC,SACvCrJ,KAAKuI,iBAAkB,EAGnBvI,KAAKjD,MAAMuM,mBACbtJ,KAAKjD,MAAMuM,kBAAkBN,EAAKI,OAAO,mDAWzBH,GAAiB,IAAAM,EAAAvJ,KACrCiJ,EAAgB,CACdzC,SAAU4B,GACVoB,YAAa,SAACC,EAADzF,GAAgC,IAAvB0F,EAAuB1F,EAAvB0F,iBACpB,OAAKA,EAAiBV,MAIlBO,EAAKxM,MAAMuM,mBACbC,EAAKxM,MAAMuM,kBAAkBI,EAAiBV,KAAKW,MAAMC,MAIpD,CACLR,OAAQ,CACNM,EAAiBV,KAAKW,MAAMC,MADtBlG,OAAAzN,OAAA4T,EAAA,EAAA5T,CAEM,MAARwT,EAAeA,EAAKL,OAAS,KACjC1C,MAAM,EAAG6C,EAAKxM,MAAMsJ,WAZfoD,YA1GsB5I,aAiIjCiJ,eAgCJ,SAAAA,IAAc,IAAAC,EAAA,OAAA9T,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAA8J,IACZC,EAAA9T,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAA6T,GAAA3J,KAAAH,QAGKoG,YAAc2D,EAAK3D,YAAY/F,KAAjBpK,OAAAqK,EAAA,EAAArK,CAAA8T,IAJPA,mFAaR/J,KAAKjD,MAAMmM,uBACblJ,KAAKjD,MAAMmM,yDAQN,IAAA/C,EACyCnG,KAAKjD,MAA7C2F,EADDyD,EACCzD,WAAYqG,EADb5C,EACa4C,MAAOD,EADpB3C,EACoB2C,QAASzC,EAD7BF,EAC6BE,QACpC,OACEpB,EAAAC,EAAAC,cAAC6E,GAAD,CACEtH,WAAYA,EACZsC,MAAM,SACNH,aAAc,CAAC,MAAO,MAAO,OAC7BwB,QAASA,EACTtB,UAAW,CACT,CAACiB,MAAO,SAAUJ,WAAW,GAC7B,CAACI,MAAO,YAAaJ,WAAW,GAChC,CAACI,MAAO,eAAgBJ,WAAW,IAErCQ,YAAapG,KAAKoG,YAClBtB,UAAW,CACT,CAACkB,MAAO,KAAMJ,WAAW,GACzB,CAACI,MAAO,KAAMJ,WAAW,GACzB,CAACI,MAAO,mBAAoBJ,WAAW,IAEzCU,OAAQwC,IAAYC,0CAgBZ,IAAAkB,EACuBjK,KAAKjD,MAAhCqM,EADIa,EACJb,OAAQN,EADJmB,EACInB,QAASC,EADbkB,EACalB,MACzB,OAAID,EACK,CAAC,CAAC/B,OAAQ,UAAWY,MAAO,CAAC,CAAC3B,MAAO,aAAcJ,WAAW,EAAOE,KAAM,SAC3EiD,EACA,CAAC,CAAChC,OAAQ,QAASY,MAAO,CAAC,CAAC3B,MAAO,gBAAiBJ,WAAW,EAAOE,KAAM,SAEpEsD,EAAO/D,IAAI,SAACsE,GACzB,IAAMO,EAAO,IAAIC,KAAKR,EAAMS,WAC5B,MAAO,CACLrD,OAAQ4C,EAAM1C,OACdU,MAAO,CACL,CACE3B,MAAO2D,EAAM1C,OAAOoD,iBACpBzE,WAAW,EACXE,KAAI,UAAApC,OAAYiG,EAAM1C,SAExB,CAACjB,MAAOkE,EAAKG,iBAAkBzE,WAAW,EAAOE,KAAM,MACvD,CAACE,MAAO2D,EAAMW,gBAAgBD,iBAAkBzE,WAAW,EAAME,KAAM,iBA3GpDjF,aAoHhByH,gOCzPf,IAUeiC,GAVWrC,KAAHsC,iMCAvB,IAYeC,GAZiBvC,KAAHwC,MCCd,SAASC,GAAcC,EAAMC,GAI1C,YAHkBC,IAAdD,IACFA,EAAY,IACdD,EAAO,KAAOA,EACI,IAAdC,GAAmBD,EAAKvB,OAASwB,EACrBD,EAAKG,UAAU,EAAGF,EAAY,GAE7B,MADFD,EAAKI,OAAOJ,EAAKvB,OAAS,GAIhCuB,MCNLK,oLAiBK,IAAAnL,EAAAE,KAAA4E,EACuB5E,KAAKjD,MAA5B2F,EADAkC,EACAlC,WAAY2D,EADZzB,EACYyB,QACnB,OACEpB,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,MAAO6B,GAAmB5B,UAAW,CAAEC,MAAOvC,IAClD,SAAA5C,GAA+C,IAA5CqF,EAA4CrF,EAA5CqF,QAASC,EAAmCtF,EAAnCsF,MAAOC,EAA4BvF,EAA5BuF,KAAMC,EAAsBxF,EAAtBwF,gBAClBC,EAAwB,kBAAMpJ,EAAKoJ,sBAAsBD,IAC/D,OAAIH,EAEA7D,EAAAC,EAAAC,cAAC+F,GAAD,CACEC,aAAc,GACdjC,sBAAuBA,EACvBxG,WAAYA,EACZ2D,QAASA,EACTyC,SAAO,IAGJC,EAEL9D,EAAAC,EAAAC,cAAC+F,GAAD,CACEC,aAAc,GACdjC,sBAAuBA,EACvBxG,WAAYA,EACZ2D,QAASA,EACT0C,OAAK,IAKP9D,EAAAC,EAAAC,cAAC+F,GAAD,CACEC,aAAcnC,EAAKmC,aACnBjC,sBAAuBA,EACvBxG,WAAYA,EACZ2D,QAASA,oDAgBD4C,GAAiB,IAAA/C,EAAAlG,KACrCiJ,EAAgB,CACdzC,SAAUiE,GACVjB,YAAa,SAACC,EAADzF,GAAgC,IAAvB0F,EAAuB1F,EAAvB0F,iBACpB,OAAKA,EAAiBV,KAKf,CACLmC,aAAc,CACZzB,EAAiBV,KAAKoC,YAAYxB,MADtBlG,OAAAzN,OAAA4T,EAAA,EAAA5T,CAEA,MAARwT,EAAeA,EAAK0B,aAAe,KACvCzE,MAAM,EAAGR,EAAKnJ,MAAMsJ,UARfoD,YAtE2B5I,aAwFtCwK,eAgCJ,SAAAA,IAAc,IAAA9B,EAAA,OAAAtT,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAAqL,IACZ9B,EAAAtT,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAAoV,GAAAlL,KAAAH,QAGKoG,YAAcmD,EAAKnD,YAAY/F,KAAjBpK,OAAAqK,EAAA,EAAArK,CAAAsT,IAJPA,mFAaRvJ,KAAKjD,MAAMmM,uBACblJ,KAAKjD,MAAMmM,yDAQN,IAAA/C,EACyBnG,KAAKjD,MAA7B2F,EADDyD,EACCzD,WAAY2D,EADbF,EACaE,QACpB,OACEpB,EAAAC,EAAAC,cAAC6E,GAAD,CACEtH,WAAYA,EACZsC,MAAM,eACNH,aAAc,CAAC,MAAO,OACtBwB,QAASA,EACTtB,UAAW,CACT,CAACiB,MAAO,OAAQJ,WAAW,GAC3B,CAACI,MAAO,SAAUJ,WAAW,IAE/BQ,YAAapG,KAAKoG,YAClBtB,UAAW,CACT,CAACkB,MAAO,KAAMJ,WAAW,GACzB,CAACI,MAAO,mBAAoBJ,WAAW,4CAiBjC,IAAAqE,EAC6BjK,KAAKjD,MAAtCoO,EADIlB,EACJkB,aAAcrC,EADVmB,EACUnB,QAASC,EADnBkB,EACmBlB,MAC/B,OAAID,EACK,CAAC,CAAC/B,OAAQ,UAAWY,MAAO,CAAC,CAAC3B,MAAO,aAAcJ,WAAW,EAAOE,KAAM,SAC3EiD,EACA,CAAC,CAAChC,OAAQ,QAASY,MAAO,CAAC,CAAC3B,MAAO,gBAAiBJ,WAAW,EAAOE,KAAM,SAEpEqF,EAAa9F,IAAI,SAAC+F,GAC/B,MAAO,CACLrE,OAAQqE,EAAYR,KACpBjD,MAAO,CACL,CACE3B,MAAO2E,GAAcS,EAAYR,MACjChF,WAAW,EACXE,KAAI,SAAApC,OAAW0H,EAAYR,OAE7B,CAAC5E,MAAOoF,EAAYE,OAAOC,QAAQ,GAAGC,WAAa,OAAQ5F,WAAW,EAAME,KAAM,iBAtG1DjF,aA+GrBoK,kxBCvMf,IAAMQ,GAAa5I,YAAO6I,IAAP7I,CAAH8I,MAOVC,GAAc/I,YAAOgJ,IAAPhJ,CAAHiJ,KAKF,SAAA/O,GAAK,OAAIA,EAAMC,MAAMqB,0BACvB,SAAAtB,GAAK,OAAIA,EAAMC,MAAMoB,kBAAkBrB,EAAMgP,aAIpD/I,GAAkBH,YAAOI,IAAPJ,CAAHmJ,KAEFhW,EAAUyD,cAMvBwS,GAAkBpJ,YAAOI,IAAPJ,CAAHqJ,KAEFlW,EAAUyD,cA6Fd0S,+LAjDPnM,KAAKjD,MAAMmM,uBACblJ,KAAKjD,MAAMmM,yDAQN,IAAAtE,EAOH5E,KAAKjD,MALPqP,EAFKxH,EAELwH,UACAC,EAHKzH,EAGLyH,UACAC,EAJK1H,EAIL0H,YACAtH,EALKJ,EAKLI,MACAgB,EANKpB,EAMLoB,MAGF,OACEf,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAO4G,UAAWA,EAAWjH,UAAW,GACtCH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACC,UAAU,MAAMC,QAAQ,aAAaC,WAAW,SAASuE,KAAK,UAC5EtH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACyG,GAAD,CAAaG,UAAWK,GACtBnH,EAAAC,EAAAC,cAAA,QAAMsH,EAAGH,MAGbrH,EAAAC,EAAAC,cAACsG,GAAD,CAAY5D,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,cAEnE/C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACC,UAAU,MAAMC,QAAQ,aAAaC,WAAW,UAC9D/C,EAAAC,EAAAC,cAACsG,GAAD,CAAYe,MAAI,GACdvH,EAAAC,EAAAC,cAACuH,GAAD,CAAiBL,UAAWA,EAAWM,QAAM,GAC1C3H,KAIPC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACC,UAAU,MAAMC,QAAQ,aAAaC,WAAW,UAC9D/C,EAAAC,EAAAC,cAACsG,GAAD,CAAYe,MAAI,GACdvH,EAAAC,EAAAC,cAAC8G,GAAD,CAAiBI,UAAWA,EAAWM,QAAM,GAC1C3G,eAzEInF,yLCzCvB,IAUe+L,GAVW1E,KAAH2E,4NCAvB,IAYeC,GAZkB5E,KAAH6E,MCuEfC,oLAhDJ,IAAAlN,EAAAE,KAAA4E,EACwB5E,KAAKjD,MAA9BqP,EADCxH,EACDwH,UAAWC,EADVzH,EACUyH,UAEjB,OACEpH,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,MAAOkE,IACb,SAAAnJ,GAA+C,IAE1CwJ,EAFFnE,EAA4CrF,EAA5CqF,QAASC,EAAmCtF,EAAnCsF,MAAOC,EAA4BvF,EAA5BuF,KAAMC,EAAsBxF,EAAtBwF,gBASxB,OALEgE,EADEnE,EACgB,aACXC,EACW,gBAEAC,EAAKkE,aAAaD,gBAAgB1B,QAAQ,GAAK,KAEjEtG,EAAAC,EAAAC,cAACgI,GAAD,CACEd,UAAWA,EACXD,UAAWA,EACXpH,MAAM,iBACNgB,MAAOiH,EACPX,YAAatW,EAAU6F,yBACvBqN,sBAf0B,kBAAMpJ,EAAKoJ,sBAAsBD,sDA8B/CA,GACpBA,EAAgB,CACdzC,SAAUsG,GACVtD,YAAa,SAACC,EAADzF,GAAgC,IAAvB0F,EAAuB1F,EAAvB0F,iBACpB,OAAKA,EAAiBV,KAEf,CAACkE,aAAcxD,EAAiBV,KAAKkE,aAAatD,MADhDH,YA3DW5I,aCkEbuM,oLAhDJ,IAAAtN,EAAAE,KAAA4E,EACwB5E,KAAKjD,MAA9BqP,EADCxH,EACDwH,UAAWC,EADVzH,EACUyH,UAEjB,OACEpH,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,MAAOkE,IACb,SAAAnJ,GAA+C,IAE1C4J,EAFFvE,EAA4CrF,EAA5CqF,QAASC,EAAmCtF,EAAnCsF,MAAOC,EAA4BvF,EAA5BuF,KAAMC,EAAsBxF,EAAtBwF,gBASxB,OALEoE,EADEvE,EACsB,aACjBC,EACiB,gBAEAC,EAAKkE,aAAaG,sBAAsB9B,QAAQ,GAAK,OAE7EtG,EAAAC,EAAAC,cAACgI,GAAD,CACEd,UAAWA,EACXD,UAAWA,EACXpH,MAAM,mBACNgB,MAAOqH,EACPf,YAAatW,EAAUwF,kBACvB0N,sBAf0B,kBAAMpJ,EAAKoJ,sBAAsBD,sDA8B/CA,GACpBA,EAAgB,CACdzC,SAAUsG,GACVtD,YAAa,SAACC,EAADzF,GAAgC,IAAvB0F,EAAuB1F,EAAvB0F,iBACpB,OAAKA,EAAiBV,KAEf,CAACkE,aAAcxD,EAAiBV,KAAKkE,aAAatD,MADhDH,YA3Dc5I,2ICL/B,IASeyM,GATIpF,KAAHqF,4KCAhB,IAWeC,GAXWtF,KAAHuF,MCuERC,oLAhDJ,IAAA5N,EAAAE,KAAA4E,EACwB5E,KAAKjD,MAA9BqP,EADCxH,EACDwH,UAAWC,EADVzH,EACUyH,UAEjB,OACEpH,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,MAAO4E,IACX,SAAA7J,GAA+C,IAE1CkK,EAFF7E,EAA4CrF,EAA5CqF,QAASC,EAAmCtF,EAAnCsF,MAAOC,EAA4BvF,EAA5BuF,KAAMC,EAAsBxF,EAAtBwF,gBASxB,OALE0E,EADE7E,EACM,aACDC,EACC,gBAEA,IAAMC,EAAK2E,MAAMA,MAAMpC,QAAQ,GAEvCtG,EAAAC,EAAAC,cAACgI,GAAD,CACEd,UAAWA,EACXD,UAAWA,EACXpH,MAAM,QACNgB,MAAO2H,EACPrB,YAAatW,EAAU4F,oBACvBsN,sBAf0B,kBAAMpJ,EAAKoJ,sBAAsBD,sDA8BjDA,GACpBA,EAAgB,CACdzC,SAAUgH,GACVhE,YAAa,SAACC,EAADzF,GAAgC,IAAvB0F,EAAuB1F,EAAvB0F,iBACpB,OAAKA,EAAiBV,KAEf,CAAC2E,MAAOjE,EAAiBV,KAAK2E,MAAM/D,MADlCH,YA3DO5I,ynBCSxB,IAAM+B,GAAcC,YAAOC,IAAPD,CAAH+K,KAEC,SAAA7Q,GAAK,OAAIA,EAAMC,MAAM2B,uBAMjCqE,GAAkBH,YAAOI,IAAPJ,CAAHgL,KAER,SAAA9Q,GAAK,OAAIA,EAAMC,MAAMgB,eAKfhI,EAAUyD,aACZzD,EAAU+D,sBAErB,SAAA0J,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,wBAAA2B,OACe1N,EAAU+D,sBADzB,eAOA+T,GAAkBjL,YAAOkL,KAAPlL,CAAHmL,KAEFhY,EAAUyD,aACZzD,EAAUqE,4BA2MZ4T,oLA9KJ,IAAAnO,EAAAE,KAAA4E,EACoC5E,KAAKjD,MAAxC2F,EADDkC,EACClC,WAAYwL,EADbtJ,EACasJ,YAAalR,EAD1B4H,EAC0B5H,MAC3BgM,EAAOhJ,KAAKmO,UAElB,OACElJ,EAAAC,EAAAC,cAACiJ,GAAD,CAAahJ,UAAW,GACtBH,EAAAC,EAAAC,cAACkJ,GAAD,CAAiB3L,WAAYA,GAAa1C,KAAKsO,YAC7CtF,EAAKK,OAAS,GACdpE,EAAAC,EAAAC,cAACoJ,GAAA,EAAD,CAAqBjJ,MAAM,OAAO2B,OAAQiH,GACxCjJ,EAAAC,EAAAC,cAAC2I,GAAD,CACE9E,KAAMA,EACNwF,OAAQ,CAAEC,IAAK,EAAGC,MAAO,EAAGC,KAAM,EAAGC,OAAQ,GAI7CtH,MAAO,CAAChC,MAAO,IAEfL,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBAAgB0J,GAAG,SAASC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAClDhK,EAAAC,EAAAC,cAAA,QAAM+J,OAAO,KAAKC,UAAWnS,EAAMgC,eAAgBoQ,YAAa,KAChEnK,EAAAC,EAAAC,cAAA,QAAM+J,OAAO,MAAMC,UAAWnS,EAAMgC,eAAgBoQ,YAAa,OAGrEnK,EAAAC,EAAAC,cAACoJ,GAAA,EAAD,CACEc,OAAQrS,EAAM8B,eACdwQ,UAAU,IAEZrK,EAAAC,EAAAC,cAACoJ,GAAA,EAAD,CACEgB,QAASvP,KAAKwP,cACdH,OAAQrS,EAAM6B,eACd4Q,KAAM,CAAEC,KAAM1S,EAAM+B,gBACpB4Q,cAAe,SAACF,GAAD,OAAU3P,EAAK8P,YAAYH,IAC1CI,WAAY,EACZC,SAAU,IAEZ7K,EAAAC,EAAAC,cAACoJ,GAAA,EAAD,CACEwB,OAAQ,CACN,SAAAC,GAAO,OAAIlQ,EAAKmQ,cAAcD,IAC9B,SAAAE,GAAO,OAAIpQ,EAAKqQ,cAAcD,KAEhCb,OAAQrS,EAAM6B,eACd4Q,KAAM,CAAEC,KAAM1S,EAAM+B,gBACpB4Q,cAAe,SAACF,GAAD,OAAU3P,EAAKsQ,YAAYX,IAC1CY,UAAU,IAEZpL,EAAAC,EAAAC,cAACoJ,GAAA,EAAD,CACE+B,eAAgB,SAACtK,GAAD,OAAWlG,EAAKyQ,eAAevK,IAC/CwK,UAAW,SAACxK,GAAD,MAAW,CAAClG,EAAK2Q,eAAezK,KAC3C0K,aAAc,CACZC,WAAY3T,EAAM4B,4BAClBgS,OAAQ,KACRC,aAAc,EACdC,SAAU9a,EAAUmE,0BACpB4W,UAAWC,KAlDA,IAoDbC,UAAW,CAAEC,MAAOlU,EAAMgC,gBAC1BmS,WAAY,CAAED,MAAOlU,EAAMgB,eAC3BoT,OAAQ,CAAE/B,OAAQrS,EAAM8B,gBACxBuS,kBAAmB,MAErBpM,EAAAC,EAAAC,cAACoJ,GAAA,EAAD,CACE+C,KAAK,WACL/B,QAASvP,KAAKuR,cACdlC,OAAQrS,EAAMgC,eACdwS,YAAa,EACbC,YAAa,EACb/B,KAAK,eACLgC,UAAW,CAAErC,OAAQrS,EAAMiC,0BAA2B0S,EAAG,GACzDN,kBAAmB,4CAe/B,MAAM,IAAIO,MAAM,2EAShB,MAAM,IAAIA,MAAM,8EAShB,MAAM,IAAIA,MAAM,kFAShB,MAAM,IAAIA,MAAM,kFASJ5B,GACZ,MAAM,IAAI4B,MAAM,oFASJ1B,GACZ,MAAM,IAAI0B,MAAM,kFASN5L,GACV,MAAM,IAAI4L,MAAM,gFASN5L,GACV,MAAM,IAAI4L,MAAM,mFASH5L,GACb,MAAM,IAAI4L,MAAM,sFASH5L,GACb,MAAM,IAAI4L,MAAM,sDA/LI/Q,+RCnDxB,IAWegR,GAXkB3J,KAAH4J,MCIxBC,oLAqBK,IAAAnN,EACoC5E,KAAKjD,MAAxC2F,EADDkC,EACClC,WAAYwL,EADbtJ,EACasJ,YAAalR,EAD1B4H,EAC0B5H,MACjC,OACEiI,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACEC,MAAOmJ,GAEPlJ,UAAW,CAAEqJ,KAAM,KAElB,SAAAvO,GAA8B,IAA3BqF,EAA2BrF,EAA3BqF,QAASC,EAAkBtF,EAAlBsF,MAAOC,EAAWvF,EAAXuF,KAClB,OAAIF,EAEA7D,EAAAC,EAAAC,cAAC8M,GAAD,CACEC,oBAAqB,GACrBhE,YAAaA,EACblR,MAAOA,EACP8L,SAAO,EACPpG,WAAYA,IAITqG,EAEL9D,EAAAC,EAAAC,cAAC8M,GAAD,CACEC,oBAAqB,GACrBhE,YAAaA,EACblR,MAAOA,EACP+L,OAAK,EACLrG,WAAYA,IAMduC,EAAAC,EAAAC,cAAC8M,GAAD,CACEC,oBAAqBlJ,EAAKkJ,oBAC1BhE,YAAaA,EACblR,MAAOA,EACP0F,WAAYA,aA1DY7B,aAuElCsR,sLAiCO,IAELnN,EAAQ,sBAGZ,OAJkBhF,KAAKjD,MAAfgM,QAGN/D,GAAS,oBACJA,oCAUP,OADgChF,KAAKjD,MAA7BmV,0DAUR,MAAO,6CASP,MAAO,wDASKlC,GACZ,OAAqC,IAA9BoC,KAAKC,MAAMrC,EAAU,2CAShBE,GACZ,OAAoC,IAA7BkC,KAAKE,KAAKpC,EAAU,yCASjBlK,GACV,OAAO,IAAImE,KAAKnE,GAAOuM,mBAAmB,UAAW,CAAEC,SAAU,4CASvDxM,GACV,GAAIA,GAAS,IAAM,CACjB,IAAMyM,EAAIzM,EAAQ,IAClB,OAAOyM,EAAElH,QAAQmH,OAAOC,UAAUF,GAAK,EAAI,GAAK,IAGhD,OAAOzM,yCASIA,GACb,OAAO,IAAImE,KAAKnE,GAAOuM,mBAAmB,UAAW,CAAEC,SAAU,+CASpDxM,GACb,uBAAAtC,OAAwBsC,EAAMqE,yBAnIF4D,IAA1BkE,GACGS,UAAY,CAIjBlQ,WAAYmQ,IAAUC,OAAOC,WAI7B7E,YAAa2E,IAAUC,OAAOC,WAI9Bb,oBAAqBW,IAAUG,MAAMD,WAIrChK,MAAO8J,IAAUI,KAIjBnK,QAAS+J,IAAUI,KAInBjW,MAAO6V,IAAUK,OAAOH,YA+GbI,mBAAUpB,wQCnNzB,IAaeqB,GAbMlL,KAAHmL,MCIZC,eAoBJ,SAAAA,EAAYvW,GAAO,IAAA+C,EAAA,OAAA7J,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAAsT,IACjBxT,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAAqd,GAAAnT,KAAAH,KAAMjD,KAEDwW,UAAY,IAAIpJ,KACrBrK,EAAKyT,UAAUC,QAAQ1T,EAAKyT,UAAUE,UAAY,IAClD3T,EAAK4T,QAAU,IAAIvJ,KALFrK,wEAaV,IAAA8E,EACoC5E,KAAKjD,MAAxC2F,EADDkC,EACClC,WAAYwL,EADbtJ,EACasJ,YAAalR,EAD1B4H,EAC0B5H,MACjC,OACEiI,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACEC,MAAO0K,GACPzK,UAAW,CAAEgL,MAAO3T,KAAKuT,UAAUK,cAAeC,IAAK7T,KAAK0T,QAAQE,gBAEnE,SAAAnQ,GAA8B,IAA3BqF,EAA2BrF,EAA3BqF,QAASC,EAAkBtF,EAAlBsF,MAAOC,EAAWvF,EAAXuF,KAClB,OAAIF,EAEA7D,EAAAC,EAAAC,cAAC2O,GAAD,CACEC,QAAS,GACT7F,YAAaA,EACblR,MAAOA,EACP8L,SAAO,EACPpG,WAAYA,IAITqG,EAEL9D,EAAAC,EAAAC,cAAC2O,GAAD,CACEC,QAAS,GACT7F,YAAaA,EACblR,MAAOA,EACP+L,OAAK,EACLrG,WAAYA,IAMduC,EAAAC,EAAAC,cAAC2O,GAAD,CACEC,QAAS/K,EAAK+K,QACd7F,YAAaA,EACblR,MAAOA,EACP0F,WAAYA,aArEK7B,aAkF3BmT,sLAiCO,IAELhP,EAAQ,gBAGZ,OAJkBhF,KAAKjD,MAAfgM,QAGN/D,GAAS,oBACJA,oCAUP,OADoBhF,KAAKjD,MAAjBgX,8CAUR,MAAO,kDASP,MAAO,8CASK/D,GACZ,OAAOoC,KAAKC,MAAMrC,yCASNE,GACZ,OAAOkC,KAAKE,KAAKpC,uCASPlK,GACV,OAAO,IAAImE,KAAKnE,GAAOuM,mBAAmB,UAAW,CAAEC,SAAU,4CASvDxM,GACV,UAAAtC,OAAWsC,EAAMuF,QAAQ,2CASZvF,GACb,OAAO,IAAImE,KAAKnE,GAAOuM,mBAAmB,UAAW,CAAEC,SAAU,+CASpDxM,GACb,2BAAAtC,OAA4BsC,EAAMuF,QAAQ,WA9HrB0C,IAAnB+F,GACGpB,UAAY,CAIjBlQ,WAAYmQ,IAAUC,OAAOC,WAI7BgB,QAASlB,IAAUG,MAAMD,WAIzB7E,YAAa2E,IAAUC,OAAOC,WAI9BhK,MAAO8J,IAAUI,KAIjBnK,QAAS+J,IAAUI,KAInBjW,MAAO6V,IAAUK,OAAOH,YA0GbI,mBAAUG,gnCC3MzB,IAAMW,GAAcpR,YAAO6I,IAAP7I,CAAHqR,KAEGle,EAAUsG,2BAA6B,KACtCtG,EAAUsG,2BAA6B,KAC1C,WAAa6X,WAASC,SAAW,MAAQC,SAAOC,UAC5D,SAAA7Q,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,2BAAA2B,OACkB1N,EAAUqG,oBAAsB,KADlD,8BAAAqH,OAEmB1N,EAAUqG,oBAAsB,KAFnD,eAQAkY,GAAoB1R,YAAOoR,GAAPpR,CAAH2R,KAEDxe,EAAUsG,2BAA6B,MAIvDmY,GAAW5R,YAAO6I,IAAP7I,CAAH6R,KAEK1e,EAAUsG,2BAA6B,KACpD,SAAA0H,GAAA,IAAGtB,EAAHsB,EAAGtB,WAAH,OACEA,IAAeZ,EAAYK,IAAMO,IAAeZ,EAAYI,KAA7D,+BAAAwB,OAC0D,EAArC1N,EAAUsG,2BAA6B,EAAI,KADhE,gBAGCoG,IAAeZ,EAAYG,IAAMS,IAAeZ,EAAYE,KAA7D,+BAAA0B,OACqB1N,EAAUsG,2BAA2B,EAAI,KAD9D,eAGAoG,IAAeZ,EAAYC,IAA3B,0BAAA2B,OACgB1N,EAAUqG,oBAAsB,KADhD,qCAQDsY,GAAY9R,YAAO6I,IAAP7I,CAAH+R,KAEI5e,EAAUsG,2BAA6B,KACpD,SAAAuY,GAAA,IAAGnS,EAAHmS,EAAGnS,WAAH,OACEA,IAAeZ,EAAYK,IAAMO,IAAeZ,EAAYI,IAAMQ,IAAeZ,EAAYG,KAA9F,+BAAAyB,OACqB1N,EAAUsG,2BAA2B,EAAI,KAD9D,gBAGCoG,IAAeZ,EAAYE,IAAMU,IAAeZ,EAAYC,KAA7D,mCAOD+S,GAAYjS,YAAO6I,IAAP7I,CAAHkS,KAEI/e,EAAUsG,2BAA6B,KACpD,SAAA0Y,GAAA,IAAGtS,EAAHsS,EAAGtS,WAAH,OACEA,IAAeZ,EAAYK,IAAMO,IAAeZ,EAAYI,IAAMQ,IAAeZ,EAAYG,KAA9F,+BAAAyB,OACqB1N,EAAUsG,2BAA2B,EAAI,KAD9D,gBAGCoG,IAAeZ,EAAYE,IAAMU,IAAeZ,EAAYC,KAA7D,mCAODkT,GAAapS,YAAOsJ,GAAPtJ,CAAHqS,KAEE,SAAAnY,GAAK,OAAIA,EAAMC,MAAMmB,yBAC1B,SAAApB,GAAK,OAAIA,EAAMC,MAAMgB,gBAI5BmX,GAAgBtS,YAAOmK,GAAPnK,CAAHuS,KAED,SAAArY,GAAK,OAAIA,EAAMC,MAAMmB,yBAC1B,SAAApB,GAAK,OAAIA,EAAMC,MAAMgB,gBAI5BqX,GAAmBxS,YAAOuK,GAAPvK,CAAHyS,KAEJ,SAAAvY,GAAK,OAAIA,EAAMC,MAAMmB,yBAC1B,SAAApB,GAAK,OAAIA,EAAMC,MAAMgB,gBAI5BuX,GAAY1S,YAAO6K,GAAP7K,CAAH2S,KAEG,SAAAzY,GAAK,OAAIA,EAAMC,MAAMmB,yBAC1B,SAAApB,GAAK,OAAIA,EAAMC,MAAMgB,gBAO5ByX,eAYJ,SAAAA,EAAY1Y,GAAO,IAAA+C,EAAA,OAAA7J,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAAyV,IACjB3V,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAAwf,GAAAtV,KAAAH,KAAMjD,KACDsK,MAAQ,CACXqO,YAAa,GAIf5V,EAAKwJ,kBAAoBxJ,EAAKwJ,kBAAkBjJ,KAAvBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IAPRA,wEAgBjB,OACEmF,EAAAC,EAAAC,cAAA,WACGnF,KAAK2V,kBACL3V,KAAK4V,mBACL5V,KAAK6V,8DAWZ,IACUnT,EAAe1C,KAAKjD,MAApB2F,WACAgT,EAAgB1V,KAAKqH,MAArBqO,YAER,OACEzQ,EAAAC,EAAAC,cAAC8O,GAAD,CAAapM,WAAS,EACpBC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXtF,WAAYA,GAEZuC,EAAAC,EAAAC,cAACsP,GAAD,CAAUjI,MAAI,EAAC9J,WAAYA,GACzBuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CACEuC,QAAS,KAETxC,EAAAC,EAAAC,cAAC8P,GAAD,CACE7I,UAAW,EACXpH,MAAM,SACNgB,MAAO0P,EAAcA,EAAYrL,iBAAmB,aACpDiC,YAAatW,EAAU2F,wBAI7BsJ,EAAAC,EAAAC,cAACsP,GAAD,CAAUjI,MAAI,EAAC9J,WAAYA,GACzBuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CACE6Q,MAAO,GACPtO,QAAS,KAETxC,EAAAC,EAAAC,cAACgQ,GAAD,CAAe/I,UAAW,MAG9BnH,EAAAC,EAAAC,cAACsP,GAAD,CAAUjI,MAAI,EAAC9J,WAAYA,GACzBuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CACE6Q,MAAO,IACPtO,QAAS,KAETxC,EAAAC,EAAAC,cAACkQ,GAAD,CAAkBjJ,UAAW,MAGjCnH,EAAAC,EAAAC,cAACsP,GAAD,CAAUjI,MAAI,EAAC9J,WAAYA,GACzBuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CACE6Q,MAAO,IACPtO,QAAS,KAETxC,EAAAC,EAAAC,cAACoQ,GAAD,CAAWnJ,UAAW,kDAahC,IACU1J,EAAe1C,KAAKjD,MAApB2F,WAGR,OACEuC,EAAAC,EAAAC,cAAC8O,GAAD,CAAapM,WAAS,EACpBC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXtF,WAAYA,GAEZuC,EAAAC,EAAAC,cAACwP,GAAD,CAAWnI,MAAI,EAAC9J,WAAYA,GAC1BuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CACEuC,QAAS,KAETxC,EAAAC,EAAAC,cAAC6Q,GAAD,CAAmB9H,YAZP,IAYiCxL,WAAYA,MAG7DuC,EAAAC,EAAAC,cAACwP,GAAD,CAAWnI,MAAI,EAAC9J,WAAYA,GAC1BuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CACE6Q,MAAO,GACPtO,QAAS,KAETxC,EAAAC,EAAAC,cAAC8Q,GAAD,CAAY/H,YApBA,IAoB0BxL,WAAYA,kDAa5D,IACUA,EAAe1C,KAAKjD,MAApB2F,WAER,OACEuC,EAAAC,EAAAC,cAACoP,GAAD,CAAmB1M,WAAS,EAC1BC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXtF,WAAYA,GAEZuC,EAAAC,EAAAC,cAAC2P,GAAD,CAAWtI,MAAI,EAAC9J,WAAYA,GAC1BuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CACEuC,QAAS,KAETxC,EAAAC,EAAAC,cAAC+Q,GAAD,CACExT,WAAYA,EACZ2D,QAAS,EACTiD,kBAAmBtJ,KAAKsJ,sBAI9BrE,EAAAC,EAAAC,cAAC2P,GAAD,CAAWtI,MAAI,EAAC9J,WAAYA,GAC1BuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CACE6Q,MAAO,GACPtO,QAAS,KAETxC,EAAAC,EAAAC,cAACgR,GAAD,CAAuBzT,WAAYA,EAAY2D,QAAS,iDAYhDsD,GAChB3J,KAAKoW,SAAS,CACZV,YAAa/L,EAAM1C,gBAhLFnG,GAAjB2U,GACG7C,UAAY,CAIjBlQ,WAAYmQ,IAAUC,OAAOC,YAgLlB0C,2WCjSf,IAAMY,GAAoBxT,YAAOI,IAAPJ,CAAHyT,KAEJtgB,EAAUyD,aACZzD,EAAU6D,sBAEd,SAAAkD,GAAK,OAAIA,EAAMC,MAAMgB,eAC5B,SAAAyF,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,wBAAA2B,OACe1N,EAAU8D,sBADzB,sBAOAyc,GAAiB1T,YAAOI,IAAPJ,CAAH2T,KAEDxgB,EAAUyD,aACZzD,EAAUkE,0BAEd,SAAA6C,GAAK,OAAIA,EAAMC,MAAMiB,mBAgBnBwY,oLAXJ,IACC/T,EAAe1C,KAAKjD,MAApB2F,WACR,OACEuC,EAAAC,EAAAC,cAAA,OAAKmC,MAAO,CAAEoP,UAAW,OAAQC,WAAY,SAC3C1R,EAAAC,EAAAC,cAACkR,GAAD,CAAmB3T,WAAYA,GAA/B,YACAuC,EAAAC,EAAAC,cAACoR,GAAD,2CANmBzV,4gFCX3B,IAAM+C,GAAkBhB,YAAOiB,IAAPjB,CAAH+T,MAQfC,GAAgBhU,YAAOiU,IAAPjU,CAAHkU,KAEN,SAAAha,GAAK,OAAIA,EAAMC,MAAMiB,mBAO5B+Y,GAAoBnU,YAAOI,IAAPJ,CAAHoU,KAEJjhB,EAAUyD,aACZzD,EAAUqE,2BAGrB,SAAAoJ,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,2CAOAmV,GAAiBrU,YAAOmU,GAAPnU,CAAHsU,KAId,SAAAnT,GAAA,IAAGtB,EAAHsB,EAAGtB,WAAH,OACCA,IAAeZ,EAAYE,IAAMU,IAAeZ,EAAYC,KAA7D,yCAOAqV,GAAkBvU,YAAOmU,GAAPnU,CAAHwU,KAIf,SAAAxC,GAAA,IAAGnS,EAAHmS,EAAGnS,WAAH,OACCA,IAAeZ,EAAYE,GAA3B,uCAGAU,IAAeZ,EAAYC,IAA3B,qEAQDuV,GAAezU,YAAO,SAAAmS,GAAA,IAAMuC,EAANthB,OAAAuhB,GAAA,QAAAvhB,CAAA,GAAA+e,GAAA,OACxB/P,EAAAC,EAAAC,cAACM,EAAA,EAADxP,OAAAwhB,OAAA,CACEC,QAAS,CACPC,KAAM,OACNC,KAAM,OACNC,WAAY,eAEVN,KAPW1U,CAAHiV,KAWL,SAAA/a,GAAK,OAAIA,EAAMC,MAAMiB,kBAEfjI,EAAUyD,aACZzD,EAAUqE,2BAEZ,SAAA0C,GAAK,OAAIA,EAAMC,MAAMiB,kBAE5B,SAAA8Z,GAAA,OAAAA,EAAGrV,aACYZ,EAAYC,IAA3B,oCAuBFiW,GAAiBnV,YAAOoV,IAAPpV,CAAHqV,KAEP,SAAAnb,GAAK,OAAIA,EAAMC,MAAMiB,kBACfjI,EAAUyD,aACZzD,EAAUmE,2BAIrBge,GAAmBtV,YAAOuV,IAAPvV,CAAHwV,MAGdriB,EAAUwG,2BAA6BxG,EAAUwE,mCAAqC,EAAK,KAE7F,SAAA8d,GAAA,OAAAA,EAAG5V,aACYZ,EAAYC,IAA3B,sBAAA2B,QAEM1N,EAAUuG,oBAAsBvG,EAAUwE,mCAAqC,EAAK,KAF1F,cAOS,SAAAuC,GAAK,OAAIwb,gBAAKxb,EAAMC,MAAMiB,iBAAkBlB,EAAMC,MAAM0C,wBAGnD,SAAA3C,GAAK,OAAIwb,gBAAKxb,EAAMC,MAAMkC,qBAAsBnC,EAAMC,MAAM2C,qBACjE,SAAA5C,GAAK,OAAIA,EAAMC,MAAMkC,uBAU9BsZ,GAA0B3V,YAAOsV,GAAPtV,CAAH4V,MAWvBC,oLAgCK,IAAA9T,EAQH5E,KAAKjD,MANP2F,EAFKkC,EAELlC,WACAiW,EAHK/T,EAGL+T,MACAC,EAJKhU,EAILgU,aACAhX,EALKgD,EAKLhD,KACAiX,EANKjU,EAMLiU,YACGtB,EAPEthB,OAAA6iB,GAAA,EAAA7iB,CAAA2O,EAAA,4DAUDmU,EAAW3G,KAAKE,KAAKqG,EAAQE,GAAe,EAClD,OACE5T,EAAAC,EAAAC,cAAA,MAASoS,EACPtS,EAAAC,EAAAC,cAACqT,GAAD,CACE9V,WAAYA,EACZwO,MAAM,UACN8H,QAAS,SAAAC,GAAK,OAAIL,EAAaK,EAAO,IACtCC,SAAmB,IAATtX,EACVuX,aAAW,cAEXlU,EAAAC,EAAAC,cAACiU,GAAAlU,EAAD,OAEFD,EAAAC,EAAAC,cAACqT,GAAD,CACE9V,WAAYA,EACZwO,MAAM,UACN8H,QAAS,SAAAC,GAAK,OAAIL,EAAaK,EAAOrX,EAAO,IAC7CsX,SAAmB,IAATtX,EACVuX,aAAW,iBAEXlU,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,OAEFD,EAAAC,EAAAC,cAACqT,GAAD,CACE9V,WAAYA,EACZwO,MAAM,UACN8H,QAAS,SAAAC,GAAK,OAAIL,EAAaK,EAAOrX,EAAO,IAC7CsX,SAAUtX,GAAQmX,EAClBI,aAAW,aAEXlU,EAAAC,EAAAC,cAACmU,GAAApU,EAAD,OAEFD,EAAAC,EAAAC,cAACgT,GAAD,CACEzV,WAAYA,EACZwO,MAAM,UACN8H,QAAS,SAAAC,GAAK,OAAIL,EAAaK,EAAO7G,KAAKmH,IAAI,EAAGR,KAClDG,SAAUtX,GAAQmX,EAClBI,aAAW,aAEXlU,EAAAC,EAAAC,cAACqU,GAAAtU,EAAD,eA/EsBrE,aA+F1B4Y,gMA+CiB,IAAAtT,EACgCnG,KAAKjD,MAAhD4b,EADWxS,EACXwS,MAAOC,EADIzS,EACJyS,aAAchX,EADVuE,EACUvE,KAAMiX,EADhB1S,EACgB0S,YAC7Ba,EAActH,KAAKmH,IAAI,EAAGnH,KAAKE,KAAKqG,EAAQE,GAAe,GAC7DjX,EAAO8X,GACTd,EAAa,KAAMc,oCAWrB,OACEzU,EAAAC,EAAAC,cAACwU,GAAD,CAAiBC,QAFH,IAEqB/T,QAAQ,YACxC7F,KAAK6Z,mDAYV,OADuB7Z,KAAKjD,MAApB2F,aAESZ,EAAYC,GAEzBkD,EAAAC,EAAAC,cAAC0R,GAAD,KACE5R,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACC,UAAU,SAASC,QAAQ,aAAaC,WAAW,UACjE/C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAASuE,KAAK,UACvEvM,KAAK8Z,sBAER7U,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAASuE,KAAK,UACvEvM,KAAK+Z,gBAKZ9U,EAAAC,EAAAC,cAAC0R,GAAD,KACE5R,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACC,UAAU,MAAMC,QAAQ,WAAWC,WAAW,SAASuE,KAAK,UACzEvM,KAAK8Z,qBACL9Z,KAAK+Z,4DAWK,IAAA9P,EAOfjK,KAAKjD,MALP2F,EAFiBuH,EAEjBvH,WACAsX,EAHiB/P,EAGjB+P,oBACAnB,EAJiB5O,EAIjB4O,YACAoB,EALiBhQ,EAKjBgQ,mBACAjd,EANiBiN,EAMjBjN,MAEIkd,EAAYxX,IAAeZ,EAAYE,IAAMU,IAAeZ,EAAYC,GAC5E,QAAU,iBACZ,OACEkD,EAAAC,EAAAC,cAACgV,EAAA,SAAD,KACGF,EAAmB5Q,OAAS,GAC3BpE,EAAAC,EAAAC,cAACgV,EAAA,SAAD,KACElV,EAAAC,EAAAC,cAAC+R,GAAD,CAAgBxU,WAAYA,EAAYwO,MAAM,WAC3CgJ,GAEHjV,EAAAC,EAAAC,cAACmS,GAAD,CACE5U,WAAYA,EACZ0X,MAAOnV,EAAAC,EAAAC,cAACM,EAAA,EAAD,MACPO,MAAO6S,EACPwB,SAAUL,EAEVM,UAAW,CACTC,WAAY,CAACjT,MAAO,CAACqJ,WAAY3T,EAAMmC,gCAGxC8a,EAAmB5U,IAAI,SAAAmV,GAAiB,OACvCvV,EAAAC,EAAAC,cAAC6S,GAAD,CACExS,IAAKgV,EACLxU,MAAOwU,GAENA,OAMXvV,EAAAC,EAAAC,cAACiS,GAAD,CAAiB1U,WAAYA,EAAYwO,MAAM,WAC5ClR,KAAKya,wDAWC,IAWTC,EAXSC,EAMT3a,KAAKjD,MAJP2F,EAFWiY,EAEXjY,WACAiW,EAHWgC,EAGXhC,MACA/W,EAJW+Y,EAIX/Y,KACAiX,EALW8B,EAKX9B,YAGI7R,EAAiB,IAAV2R,EAAc,EAAI/W,EAAOiX,EAAc,EAC9C9S,EAAKqM,KAAKwI,IAAIjC,GAAQ/W,EAAO,GAAKiX,GAGxC,GAAInW,IAAeZ,EAAYE,IAAMU,IAAeZ,EAAYC,GAC9D,GAAI4W,GAAS,IAAY,CACvB,IAAMkC,EAAIlC,EAAQ,IAClB+B,EAAQG,EAAEtP,QAAQmH,OAAOC,UAAUkI,GAAK,EAAI,GAAK,SAE9C,GAAIlC,GAAS,IAAS,CACzB,IAAMmC,EAAInC,EAAQ,IAClB+B,EAAQI,EAAEvP,QAAQmH,OAAOC,UAAUmI,GAAK,EAAI,GAAK,SAE9C,GAAInC,GAAS,IAAM,CACtB,IAAMlG,EAAIkG,EAAQ,IAClB+B,EAAQjI,EAAElH,QAAQmH,OAAOC,UAAUF,GAAK,EAAI,GAAK,SAGnDiI,EAAQ/B,EAAMpN,QAAQ,QAGtBmP,EAAQ/B,EAAMtO,iBAEhB,SAAA3G,OAAUsD,EAAKqD,iBAAf,KAAA3G,OAAmCqC,EAAGsE,iBAAtC,QAAA3G,OAA6DgX,wCAQlD,IAAAK,EAOP/a,KAAKjD,MALP2F,EAFSqY,EAETrY,WACAiW,EAHSoC,EAGTpC,MACAC,EAJSmC,EAITnC,aACAhX,EALSmZ,EAKTnZ,KACAiX,EANSkC,EAMTlC,YAEF,OACE5T,EAAAC,EAAAC,cAAC6V,GAAD,CACEtY,WAAYA,EACZiW,MAAOA,EACPC,aAAcA,EACdhX,KAAMA,EACNiX,YAAaA,WA/MIhY,aAsNVsS,eAAUsG,qyDCrczB,IAAM7W,GAAcC,YAAOC,IAAPD,CAAHoY,KAEC,SAAAle,GAAK,OAAIA,EAAMC,MAAMmC,8BAIjC6D,GAAkBH,YAAOI,IAAPJ,CAAHqY,KAER,SAAAne,GAAK,OAAIA,EAAMC,MAAMgB,eAKfhI,EAAUyD,aACZzD,EAAU+D,uBAKrBohB,GAAsBtY,IAAOuY,IAAVC,KAIVC,KAAOC,MAEhB,SAAA9X,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,4CAOAyZ,GAAyB3Y,YAAO4Y,IAAP5Y,CAAH6Y,KAEf,SAAA3e,GAAK,OAAIA,EAAMC,MAAMY,4BAI5BuF,GAAcN,YAAOO,IAAPP,CAAH8Y,KAGC,WAAaxH,WAASC,SAAW,MAAQC,SAAOC,UACnD,SAAAvX,GAAK,OAAIA,EAAM+L,QAAU,GAAM,GAC3B9S,EAAUyD,cAIvBmiB,GAAiB/Y,YAAOU,IAAPV,CAAHgZ,KAEN7lB,EAAUwG,2BAA6B,KAC/C,SAAAwH,GAAA,OAAAA,EAAGtB,aACYZ,EAAYC,IAA3B,qBAAA2B,OACY1N,EAAUuG,oBAAsB,KAD5C,eAOA+H,GAAiBzB,YAAO+Y,GAAP/Y,CAAHiZ,KAEI,SAAA/e,GAAK,OAAIA,EAAMC,MAAMoC,sBAMvCyE,GAAkBhB,YAAOiB,IAAPjB,CAAHkZ,KAED,SAAAhf,GAAK,OAAIA,EAAMC,MAAMoC,qBAC5B,SAAArC,GAAK,OAAIA,EAAMC,MAAMgB,eACjBhI,EAAUmE,0BAErB,SAAA0a,GAAA,OAAAA,EAAGnS,aACYZ,EAAYC,IAA3B,wBAAA2B,OACe1N,EAAUyE,mBADzB,eAOAwJ,GAAkBpB,YAAOgB,GAAPhB,CAAHmZ,KAIR,SAAAjf,GAAK,OAAIA,EAAMC,MAAMiB,mBAK5BkG,GAAatB,YAAOuB,IAAPvB,CAAHoZ,KAEH,SAAAlf,GAAK,OAAIA,EAAMC,MAAMkB,oBA6VnBge,eA3Rb,SAAAA,IAAc,IAAApc,EAAA,OAAA7J,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAAkc,IACZpc,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAAimB,GAAA/b,KAAAH,QACKqH,MAAQ,CACX8U,UAAW,EACXC,eAAgB,EAChBC,iBAAkB,KAClBC,eAAgB,KAChBzD,YAAa,IAGf/Y,EAAKkJ,KAAO,KACZlJ,EAAK6Y,MAAQ,EACb7Y,EAAKyc,QAAU,KACfzc,EAAK0c,YAAc,KACnB1c,EAAK2c,UAAY,KAGjB3c,EAAK4c,iBAAmB5c,EAAK4c,iBAAiBrc,KAAtBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IACxBA,EAAK6c,wBAA0B7c,EAAK6c,wBAAwBtc,KAA7BpK,OAAAqK,EAAA,EAAArK,CAAA6J,IAlBnBA,wEA0BL,IACCkF,EAAUhF,KAAKjD,MAAfiI,MACR,OACEC,EAAAC,EAAAC,cAACyX,GAAD,CAAaxX,UAAW,GACtBH,EAAAC,EAAAC,cAAC0X,GAAD,KAAkB7X,GACjBhF,KAAK8c,+DAUO,IAKbnU,EALazC,EAAAlG,KAAA4E,EAC0D5E,KAAKjD,MAAxE2F,EADSkC,EACTlC,WAAYmC,EADHD,EACGC,aAAckY,EADjBnY,EACiBmY,kBAAmBrU,EADpC9D,EACoC8D,MAAOsU,EAD3CpY,EAC2CoY,WAD3CC,EAEoEjd,KAAKqH,MAAlF8U,EAFSc,EAETd,UAAWC,EAFFa,EAEEb,eAAgBC,EAFlBY,EAEkBZ,iBAAkBC,EAFpCW,EAEoCX,eAAgBzD,EAFpDoE,EAEoDpE,YAI/DqE,EAA0B,IAAfld,KAAK2Y,MACtB,GAAIuE,EACFvU,EAAY,CAACC,MAAOiQ,OACjB,CACH,IAAMsE,EAAgB/K,KAAKE,KAAKtS,KAAK2Y,MAAQE,GAAe,EAC5D,GAAIsD,IAAcC,EAAiB,EACjCzT,EAAY,CAACyU,MAAOd,EAAgB1T,MAAOiQ,QACxC,GAAIsD,IAAcC,EAAiB,EACtCzT,EAAY,CAAC0U,OAAQhB,EAAkBrK,KAAM6G,QAC1C,GAAIsD,IAAcgB,EAAe,CAEpCxU,EAAY,CAACqJ,KADQhS,KAAK2Y,MAAQwD,EAAYtD,QAQ9ClQ,EAAY,CAACC,MAAOiQ,GAKxB,OACE5T,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAEE6U,YAAaJ,EAAW,eAAiB,KACzCxU,MAAOA,EACPC,UAAWA,GAEV,SAAAqM,GAA8B,IAA3BlM,EAA2BkM,EAA3BlM,QAASC,EAAkBiM,EAAlBjM,MAAOC,EAAWgM,EAAXhM,KAClB,IAAKF,IAAYC,EAAO,CACtB7C,EAAK8C,KAAOA,EACZ,IAAMuU,EAAaR,EAAkB7W,EAAK8C,MACrB,OAAjB9C,EAAKqW,SAAoBgB,EAAWC,MAAMnU,SAC5CnD,EAAKqW,QAAUgB,EAAWC,MAAM,GAAG5T,KAAKiF,IAC1C3I,EAAKsW,YAAce,EAAWE,SAASjB,YACvCtW,EAAKuW,UAAYc,EAAWE,SAAShB,UAGvC,OACExX,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAEE6U,YAAaJ,EAAW,eAAiB,KACzCxU,MAAOsU,EACPU,KAAuB,OAAjBxX,EAAKqW,QACX5T,UAAW,CAACgV,MAAO,CAAEC,OAAQ1X,EAAKqW,WAEjC,SAAAxE,GAAmE,IAAvD8F,EAAuD9F,EAAhEjP,QAA8BgV,EAAkC/F,EAAzChP,MAAyBgV,EAAgBhG,EAAtB/O,KAC5C,GAAiB,MAAb+U,IAAsBF,IAAiBC,EAAY,CACrD,IAAMP,EAAaR,EAAkBgB,GACrC7X,EAAKyS,MAAQ4E,EAAWS,UAAUrF,MAEpC,OACE1T,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EACbC,UAAU,SACVC,QAAQ,SACRC,WAAW,UAEX/C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+B,GAAIsB,EAASrB,QAAS0M,WAASC,SAAU6J,cAAY,EAACC,eAAa,GACvEjZ,EAAAC,EAAAC,cAACgW,GAAD,CAAqBzY,WAAYA,GAC/BuC,EAAAC,EAAAC,cAACqW,GAAD,CAAwB2C,KAAMnoB,EAAUuE,qCAG5C0K,EAAAC,EAAAC,cAACiZ,GAAD,CAAatV,QAASA,EAAU,EAAI,GAClC7D,EAAAC,EAAAC,cAAA,gBACGN,EAAaQ,IAAI,SAACC,EAAOC,GAGxB,OACEN,EAAAC,EAAAC,cAAA,OAAKK,IAAKD,EAAOD,MAAOA,OAI9BL,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACGS,EAAKmY,uBAERpZ,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACGS,EAAKD,sBAERhB,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACGS,EAAKoY,oBAAoBT,EAAcC,EAAYC,wDAkBpD,IAAA5X,EACcnG,KAAKjD,MAA/B2F,EADYyD,EACZzD,WAAYqC,EADAoB,EACApB,UACpB,OACEE,EAAAC,EAAAC,cAACyW,GAAD,CAAgBlZ,WAAYA,GACzBqC,EAAUM,IAAI,SAACK,EAAMH,GACpB,OAGEN,EAAAC,EAAAC,cAACoZ,GAAD,CACE7b,WAAYA,EACZ8C,IAAKD,EACLI,MAAOD,EAAKE,UAAY,QAAU,UAClCC,QAAQ,YAEM,MAAbH,EAAKI,KACJb,EAAAC,EAAAC,cAACqZ,GAAD,CAAYzY,GAAIL,EAAKI,MAAOJ,EAAKM,OACjCN,EAAKM,uDAcE,IAAAuD,EAAAvJ,KACXoG,EAAgBpG,KAAKjD,MAArBqJ,YACR,OAAIpG,KAAKgJ,KACI5C,EAAYpG,KAAKgJ,MAChB3D,IAAI,SAACyB,EAASvB,GACxB,OAAOgE,EAAKhC,kBAAkBT,KAIzB,+CASOA,GAAS,IACjBpE,EAAe1C,KAAKjD,MAApB2F,WACR,OACEuC,EAAAC,EAAAC,cAACyW,GAAD,CAAgBlZ,WAAYA,EAAY8C,IAAKsB,EAAQC,QAClDD,EAAQa,MAAMtC,IAAI,SAACK,EAAMH,GACxB,OACEN,EAAAC,EAAAC,cAACsZ,GAAD,CACE/b,WAAYA,EACZ8C,IAAKD,EACLI,MAAOD,EAAKE,UAAY,QAAU,UAClCC,QAAQ,YAEM,MAAbH,EAAKI,KACJb,EAAAC,EAAAC,cAACqZ,GAAD,CAAYzY,GAAIL,EAAKI,MAAOJ,EAAKM,OACjCN,EAAKM,wDAcG,IACZtD,EAAe1C,KAAKjD,MAApB2F,WADYgc,EAEe1e,KAAKqH,MAAhC8U,EAFYuC,EAEZvC,UAAWtD,EAFC6F,EAED7F,YACb8F,EAAO3e,KAAK2Y,MAAQ,EAC1B,OACE1T,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+B,GAAImX,EAAMlX,QAAS0M,WAASC,UAChCnP,EAAAC,EAAAC,cAACyZ,GAAD,CAAgBlc,WAAYA,GAC1BuC,EAAAC,EAAAC,cAAC0Z,GAAD,CACEnc,WAAYA,EACZuX,mBAAoB,CAAC,GAAI,GAAI,IAC7BpB,YAAaA,EACbjX,KAAMua,EACNxD,MAAO3Y,KAAK2Y,MACZC,aAAc5Y,KAAK0c,iBACnB1C,oBAAqBha,KAAK2c,qEAanB1D,EAAOrX,GAAM,IAAAmI,EAAA/J,KAC5BA,KAAKoW,SAAS,SAAA0I,GAAS,MAAK,CAC1B3C,UAAWva,EACXwa,eAAgB0C,EAAU3C,UAC1BE,iBAAkBtS,EAAKyS,YACvBF,eAAgBvS,EAAK0S,6DASDxD,GAEEjZ,KAAKqH,MAArBwR,cACYI,EAAM8F,OAAO/Y,QAC/BhG,KAAKgJ,KAAO,KACZhJ,KAAK2Y,MAAQ,EACb3Y,KAAKuc,QAAU,KACfvc,KAAKwc,YAAc,KACnBxc,KAAKyc,UAAY,KACjBzc,KAAKoW,SAAS,CACZ+F,UAAW,EACXC,eAAgB,EAChBC,iBAAkB,KAClBC,eAAgB,KAChBzD,YAAaI,EAAM8F,OAAO/Y,gBA5UTnF,8jBCzHzB,IAsBeme,GAtBe9W,KAAH+W,kOCA3B,IAUeC,GAVUhX,KAAHiX,MCgFPC,eAjEb,SAAAA,IAAc,IAAAtf,EAAA,OAAA7J,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAAof,IACZtf,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAAmpB,GAAAjf,KAAAH,QAGKoG,YAActG,EAAKsG,YAAY/F,KAAjBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IAJPA,wEAYL,IACC4C,EAAe1C,KAAKjD,MAApB2F,WACR,OACEuC,EAAAC,EAAAC,cAACka,GAAD,CACE3c,WAAYA,EACZsC,MAAM,SACNH,aAAc,CAAC,MAAO,MAAO,OAC7BE,UAAW,CACT,CAACiB,MAAO,SAAUJ,WAAW,GAC7B,CAACI,MAAO,YAAaJ,WAAW,GAChC,CAACI,MAAO,eAAgBJ,WAAW,IAErC8C,MAAOsW,GACPhC,WAAYkC,GACZnC,kBAAmB,SAAA/T,GAAI,OAAIA,EAAKsW,kBAChClZ,YAAapG,KAAKoG,kDAiBZ4C,GAiBV,OAhBeA,EAAKsW,iBAAiB9B,MAAMnY,IAAI,SAACka,GAC9C,IAAM5V,EAAQ4V,EAAK3V,KACbM,EAAO,IAAIC,KAAKR,EAAMS,WAC5B,MAAO,CACLrD,OAAQ4C,EAAM1C,OACdU,MAAO,CACL,CACE3B,MAAO2D,EAAM1C,OAAOoD,iBACpBzE,WAAW,EACXE,KAAI,UAAApC,OAAYiG,EAAM1C,SAExB,CAACjB,MAAOkE,EAAKG,iBAAkBzE,WAAW,GAC1C,CAACI,MAAO2D,EAAMW,gBAAgBD,iBAAkBzE,WAAW,cArEtC/E,6PCG/B,IAAMoT,GAAcpR,YAAO6I,IAAP7I,CAAH2c,KAEFxpB,EAAUsG,2BAA6B,KACpC,WAAa6X,WAASC,SAAW,MAAQC,SAAOC,UAC5D,SAAA7Q,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,0BAAA2B,OACiB1N,EAAUqG,oBAAsB,KADjD,+BAAAqH,OAEoB1N,EAAUsG,2BAA6B,KAF3D,6BAAAoH,OAGkB1N,EAAUqG,oBAAsB,KAHlD,8BAAAqH,OAImB1N,EAAUqG,oBAAsB,KAJnD,eAUAojB,GAAiB5c,YAAO6I,IAAP7I,CAAH6c,MA+BLC,oLAnBJ,IACCjd,EAAe1C,KAAKjD,MAApB2F,WACR,OACEuC,EAAAC,EAAAC,cAACya,GAAD,CAAa/X,WAAS,EACpBC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXtF,WAAYA,GAEZuC,EAAAC,EAAAC,cAACsa,GAAD,CAAgBjT,MAAI,EAAC9J,WAAYA,GAC/BuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CAAMuC,QAAS,KACbxC,EAAAC,EAAAC,cAAC0a,GAAD,CAAkBnd,WAAYA,cAjBjB5B,GC8DVgf,eAnEb,SAAAA,IAAc,IAAAhgB,EAAA,OAAA7J,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAA8f,IACZhgB,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAA6pB,GAAA3f,KAAAH,QAGKoG,YAActG,EAAKsG,YAAY/F,KAAjBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IAJPA,wEAYL,IAAA8E,EACyB5E,KAAKjD,MAA7B2F,EADDkC,EACClC,WAAY2D,EADbzB,EACayB,QACpB,OACEpB,EAAAC,EAAAC,cAAC6E,GAAD,CACEtH,WAAYA,EACZsC,MAAM,eACNH,aAAc,CAAC,MAAO,OACtBwB,QAASA,EACTtB,UAAW,CACT,CAACiB,MAAO,OAAQJ,WAAW,GAC3B,CAACI,MAAO,SAAUJ,WAAW,IAE/BQ,YAAapG,KAAKoG,YAClBtB,UAAW,CACT,CAACkB,MAAO,KAAMJ,WAAW,GACzB,CAACI,MAAO,mBAAoBJ,WAAW,4CAiBjC,IACJuF,EAAiBnL,KAAKjD,MAAtBoO,aACR,OAAIA,EACaA,EAAa9F,IAAI,SAAC+F,GAC/B,MAAO,CACLrE,OAAQqE,EAAYR,KACpBjD,MAAO,CACL,CACE3B,MAAO2E,GAAcS,EAAYR,MACjChF,WAAW,EACXE,KAAI,SAAApC,OAAW0H,EAAYR,OAE7B,CAAC5E,MAAOoF,EAAYE,OAAOC,QAAQ,GAAGC,WAAa,OAAQ5F,WAAW,EAAME,KAAM,UAOjF,UAnFwBjF,ySCDrC,IAgBekf,GAhBI7X,KAAH8X,sqBCQhB,IAAM/L,GAAcpR,YAAO6I,IAAP7I,CAAHod,KAEEjqB,EAAUsG,2BAA6B,KACpCtG,EAAUsG,2BAA6B,KACzCtG,EAAUsG,2BAA6B,KACtCtG,EAAUsG,2BAA6B,KAC1C,WAAa6X,WAASC,SAAW,MAAQC,SAAOC,UAC5D,SAAA7Q,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,0BAAA2B,OACiB1N,EAAUqG,oBAAsB,KADjD,+BAAAqH,OAEoB1N,EAAUqG,oBAAsB,KAFpD,6BAAAqH,OAGkB1N,EAAUqG,oBAAsB,KAHlD,8BAAAqH,OAImB1N,EAAUqG,oBAAsB,KAJnD,eAUAyY,GAAYjS,YAAO6I,IAAP7I,CAAHqd,MAMT7J,GAAoBxT,YAAOI,IAAPJ,CAAHsd,KAEJnqB,EAAUyD,aACZzD,EAAU6D,sBAEd,SAAAkD,GAAK,OAAIA,EAAMC,MAAMgB,eAC5B,SAAAgG,GAAA,OAAAA,EAAGtB,aACYZ,EAAYC,IAA3B,wBAAA2B,OACe1N,EAAU8D,sBADzB,sBAOAyc,GAAiB1T,YAAOI,IAAPJ,CAAHud,KAEDpqB,EAAUyD,aACZzD,EAAUkE,0BAEd,SAAA6C,GAAK,OAAIA,EAAMC,MAAMiB,mBAO5BoiB,oLAiBK,IACC3d,EAAe1C,KAAKjD,MAApB2F,WAEFuE,EAASqZ,SAAStgB,KAAKjD,MAAMwjB,MAAMC,OAAOvZ,OAAQ,IACxD,OACEhC,EAAAC,EAAAC,cAACsb,GAAD,CAAa5Y,WAAS,EACpBC,UAAU,SACVC,QAAQ,aACRC,WAAW,aACXtF,WAAYA,GAEZuC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACub,GAAD,CAAmBhe,WAAYA,GAA/B,kBAEFuC,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,MAAOqX,GAAYpX,UAAW,CAAE1B,WACpC,SAAA4N,GAA8B,IAA3B/L,EAA2B+L,EAA3B/L,QAASC,EAAkB8L,EAAlB9L,MAAOC,EAAW6L,EAAX7L,KAClB,GAAIF,EACF,OACE7D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACwb,GAAD,sBAGD,GAAI5X,EACP,OACE9D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACwb,GAAD,uBAGD,GAAI3X,EAAKW,MAAO,CACnB,IAAMO,EAAO,IAAIC,KAAKnB,EAAKW,MAAMS,WACjC,OACEnF,EAAAC,EAAAC,cAACgV,EAAA,SAAD,KACElV,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACwb,GAAD,gBACW3X,EAAKW,MAAM1C,OAAOoD,kBAE7BpF,EAAAC,EAAAC,cAACwb,GAAD,mBACczW,EAAKG,mBAGrBpF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyb,GAAD,CAAWpU,MAAI,GACbvH,EAAAC,EAAAC,cAAC0b,GAAD,CACEne,WAAYA,EACZ2D,QAAS,IACT8E,aAAcnC,EAAKW,MAAMwB,iBAOjC,OACElG,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACwb,GAAD,oCAvEa7f,GAAzBuf,GACGzN,UAAY,CAIjBlQ,WAAYmQ,IAAUC,OAAOC,WAI7BwN,MAAO1N,IAAUK,OAAOH,YAwEbsN,qjBC5If,IAsBeS,GAtBqB5Y,KAAH6Y,oPCAjC,IAUeC,GAVgB9Y,KAAH+Y,MC+EbC,eA/Db,SAAAA,IAAc,IAAAphB,EAAA,OAAA7J,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAAkhB,IACZphB,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAAirB,GAAA/gB,KAAAH,QAGKoG,YAActG,EAAKsG,YAAY/F,KAAjBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IAJPA,wEAYL,IACC4C,EAAe1C,KAAKjD,MAApB2F,WACR,OACEuC,EAAAC,EAAAC,cAACka,GAAD,CACE3c,WAAYA,EACZsC,MAAM,eACNH,aAAc,CAAC,MAAO,OACtBE,UAAW,CACT,CAACiB,MAAO,OAAQJ,WAAW,GAC3B,CAACI,MAAO,SAAUJ,WAAW,IAE/B8C,MAAOoY,GACP9D,WAAYgE,GACZjE,kBAAmB,SAAA/T,GAAI,OAAIA,EAAKmY,wBAChC/a,YAAapG,KAAKoG,kDAiBZ4C,GAeV,OAdeA,EAAKmY,uBAAuB3D,MAAMnY,IAAI,SAACka,GACpD,IAAMnU,EAAcmU,EAAK3V,KACzB,MAAO,CACL7C,OAAQqE,EAAYR,KACpBjD,MAAO,CACL,CACE3B,MAAO2E,GAAcS,EAAYR,MACjChF,WAAW,EACXE,KAAI,SAAApC,OAAW0H,EAAYR,OAE7B,CAAC5E,MAAOoF,EAAYE,OAAOC,QAAQ,GAAGC,WAAa,OAAQ5F,WAAW,cAlE3C/E,6PCErC,IAAMoT,GAAcpR,YAAO6I,IAAP7I,CAAHue,KAEFprB,EAAUsG,2BAA6B,KACpC,WAAa6X,WAASC,SAAW,MAAQC,SAAOC,UAC5D,SAAA7Q,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,0BAAA2B,OACiB1N,EAAUqG,oBAAsB,KADjD,+BAAAqH,OAEoB1N,EAAUsG,2BAA6B,KAF3D,6BAAAoH,OAGkB1N,EAAUqG,oBAAsB,KAHlD,8BAAAqH,OAImB1N,EAAUqG,oBAAsB,KAJnD,eAUAojB,GAAiB5c,YAAO6I,IAAP7I,CAAHwe,MA+BLC,oLAnBJ,IACC5e,EAAe1C,KAAKjD,MAApB2F,WACR,OACEuC,EAAAC,EAAAC,cAACoc,GAAD,CAAa1Z,WAAS,EACpBC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXtF,WAAYA,GAEZuC,EAAAC,EAAAC,cAACqc,GAAD,CAAgBhV,MAAI,EAAC9J,WAAYA,GAC/BuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CAAMuC,QAAS,KACbxC,EAAAC,EAAAC,cAACsc,GAAD,CAAwB/e,WAAYA,cAjBjB5B,uPC1B/B,IAce4gB,GAdUxZ,KAAHyZ,0vBCStB,IAAM1N,GAAcpR,YAAO6I,IAAP7I,CAAH+e,KAEE5rB,EAAUsG,2BAA6B,KACpCtG,EAAUsG,2BAA6B,KACzCtG,EAAUsG,2BAA6B,KACtCtG,EAAUsG,2BAA6B,KAC1C,WAAa6X,WAASC,SAAW,MAAQC,SAAOC,UAC5D,SAAA7Q,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,0BAAA2B,OACiB1N,EAAUqG,oBAAsB,KADjD,+BAAAqH,OAEoB1N,EAAUqG,oBAAsB,KAFpD,6BAAAqH,OAGkB1N,EAAUqG,oBAAsB,KAHlD,8BAAAqH,OAImB1N,EAAUqG,oBAAsB,KAJnD,eAUAga,GAAoBxT,YAAOI,IAAPJ,CAAHgf,KAEJ7rB,EAAUyD,aACZzD,EAAU6D,sBAEd,SAAAkD,GAAK,OAAIA,EAAMC,MAAMgB,eAC5B,SAAAgG,GAAA,OAAAA,EAAGtB,aACYZ,EAAYC,IAA3B,wBAAA2B,OACe1N,EAAU8D,sBADzB,sBAOAyc,GAAiB1T,YAAOI,IAAPJ,CAAHif,KAED9rB,EAAUyD,aACZzD,EAAUkE,0BAEd,SAAA6C,GAAK,OAAIA,EAAMC,MAAMiB,mBAI5BkG,GAAatB,YAAOuB,IAAPvB,CAAHkf,KAEH,SAAAhlB,GAAK,OAAIA,EAAMC,MAAMkB,oBAW5B8jB,oLAiBK,IACCtf,EAAe1C,KAAKjD,MAApB2F,WACAkI,EAAS5K,KAAKjD,MAAMwjB,MAAMC,OAA1B5V,KAEFqX,EAAgBvf,IAAeZ,EAAYC,IAAMW,IAAeZ,EAAYE,GAAK,GAAK,EAC5F,OACEiD,EAAAC,EAAAC,cAAC+c,GAAD,CAAara,WAAS,EACpBC,UAAU,SACVC,QAAQ,aACRC,WAAW,aACXtF,WAAYA,GAEZuC,EAAAC,EAAAC,cAACgd,GAAD,CAAmBzf,WAAYA,GAA/B,uBACAuC,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,MAAOgZ,GAAkB/Y,UAAW,CAAEiC,SAC1C,SAAAiK,GAA8B,IAA3B/L,EAA2B+L,EAA3B/L,QAASC,EAAkB8L,EAAlB9L,MAAOC,EAAW6L,EAAX7L,KAClB,OAAIF,EAEA7D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACid,GAAD,sBAGGrZ,EAEL9D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACid,GAAD,uBAGGpZ,EAAKoC,YAEVnG,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACid,GAAD,KACG,SACAzX,GAAc3B,EAAKoC,YAAYR,KAAMqX,IAExChd,EAAAC,EAAAC,cAACid,GAAD,KACG,WACApZ,EAAKoC,YAAYE,OAAOC,QAAQ,GAAGC,WACnC,QAEHvG,EAAAC,EAAAC,cAACid,GAAD,KACG,iBACDnd,EAAAC,EAAAC,cAACkd,GAAD,CAAYtc,GAAE,UAAArC,OAAYsF,EAAKoC,YAAYzB,MAAM1C,SAC9C+B,EAAKoC,YAAYzB,MAAM1C,OAAOoD,oBAOrCpF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACid,GAAD,0CAnEmBthB,GAA/BkhB,GACGpP,UAAY,CAIjBlQ,WAAYmQ,IAAUC,OAAOC,WAI7BwN,MAAO1N,IAAUK,OAAOH,YAoEbiP,2WC1If,IAAM3L,GAAoBxT,YAAOI,IAAPJ,CAAHyf,KAEJtsB,EAAUyD,aACZzD,EAAU6D,sBAEd,SAAAkD,GAAK,OAAIA,EAAMC,MAAMgB,eAC5B,SAAAyF,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,wBAAA2B,OACe1N,EAAU8D,sBADzB,sBAOAyc,GAAiB1T,YAAOI,IAAPJ,CAAH0f,KAEDvsB,EAAUyD,aACZzD,EAAUkE,0BAEd,SAAA6C,GAAK,OAAIA,EAAMC,MAAMiB,mBAgBnBukB,oLAXJ,IACC9f,EAAe1C,KAAKjD,MAApB2F,WACR,OACEuC,EAAAC,EAAAC,cAAA,OAAKmC,MAAO,CAAEoP,UAAW,OAAQC,WAAY,SAC3C1R,EAAAC,EAAAC,cAACsd,GAAD,CAAmB/f,WAAYA,GAA/B,aACAuC,EAAAC,EAAAC,cAACud,GAAD,4CANoB5hB,+ICxBb,SAAS6hB,GAAahP,EAAOE,GAC1C,OAAOzB,KAAKC,MCFC,SAAyBsB,EAAOE,GAC7C,OAAOzB,KAAKwQ,UAAY/O,EAAMF,GAASA,EDCrBkP,CAAgBlP,EAAOE,QE6uB5BiP,eAntBb,SAAAA,EAAY/lB,GAAO,IAAA+C,EAAA,OAAA7J,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAA8iB,IACjBhjB,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAA6sB,GAAA3iB,KAAAH,KAAMjD,KAGDgmB,YAAcjjB,EAAKijB,YAAY1iB,KAAjBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IACnBA,EAAKkjB,QAAUljB,EAAKkjB,QAAQ3iB,KAAbpK,OAAAqK,EAAA,EAAArK,CAAA6J,IACfA,EAAKmjB,UAAYnjB,EAAKmjB,UAAU5iB,KAAfpK,OAAAqK,EAAA,EAAArK,CAAA6J,IACjBA,EAAK2P,KAAO3P,EAAK2P,KAAKpP,KAAVpK,OAAAqK,EAAA,EAAArK,CAAA6J,IACZA,EAAKojB,OAASpjB,EAAKojB,OAAO7iB,KAAZpK,OAAAqK,EAAA,EAAArK,CAAA6J,IAWdA,EAAKqjB,MAAQ,KACbrjB,EAAKsjB,SAAW,KAChBtjB,EAAKujB,cAAgB,KAKrBvjB,EAAKwjB,gBAAkBxjB,EAAK/C,MAAMwmB,SAAW,IAAM,IACnDzjB,EAAK0jB,iBAAmB,IACxB1jB,EAAK2jB,sBAAwB,EAE7B3jB,EAAK4jB,QAAU5jB,EAAKwjB,gBAAkB,EACtCxjB,EAAK6jB,QAAU7jB,EAAK0jB,iBAAmB,EACvC1jB,EAAK8jB,cAAgB9jB,EAAKwjB,gBAAkB,EAAI,GAKhDxjB,EAAK+jB,eAAiB/jB,EAAK/C,MAAMwmB,SAAW,GAAK,GACjDzjB,EAAKgkB,YAAchkB,EAAK/C,MAAMwmB,SAAW,GAAK,EAC9CzjB,EAAKikB,SAAWjkB,EAAK+jB,eAAiB/jB,EAAKgkB,YAO3ChkB,EAAKkkB,iCAAmC,EACxClkB,EAAKmkB,oCAAsCnkB,EAAK/C,MAAMwmB,UAAY,MAAQ,EAI1EzjB,EAAKokB,aAAepkB,EAAK/C,MAAMwmB,SAAW,GAAK,GAG/CzjB,EAAKqkB,gBAAkB,EACvBrkB,EAAKskB,WAAa,IAClBtkB,EAAKukB,mBAAqBvkB,EAAK/C,MAAMwmB,SAAW,GAAK,IAGrDzjB,EAAKwkB,2BAA6B,CAAC,IAAK,IAAK,KAC7CxkB,EAAKykB,6BAA+B,CAAC,IAAK,IAAK,KAC/CzkB,EAAK0kB,YAAc,GACnB1kB,EAAK2kB,oBAAsB,IAC3B3kB,EAAK4kB,gBAAkB5kB,EAAK/C,MAAMwmB,SAAW,EAAI,EACjDzjB,EAAK6kB,mCAAqC7kB,EAAK/C,MAAMwmB,SAAW,IAAM,EAItEzjB,EAAK8kB,uBAAyB9kB,EAAK/C,MAAMwmB,SAAW,MAAQ,SAI5DzjB,EAAK+kB,aAAe/kB,EAAK+jB,eAAiB,EAAI,IAG9C/jB,EAAKglB,aAAe,KAGpBhlB,EAAKilB,aAAejlB,EAAK/C,MAAMwmB,SAAW,EAAI,MAG9CzjB,EAAKklB,mBAAqB,EAG1BllB,EAAKmlB,sBAAwB,KAC7BnlB,EAAKolB,uBAAyB,KAC9BplB,EAAKqlB,oBAAsB,IAC3BrlB,EAAKslB,qBAAuB,KAvFXtlB,mFAoGjBE,KAAKyjB,sBAAwBzjB,KAAKjD,MAAMuI,MAAQtF,KAAKjD,MAAMuI,MAAQtF,KAAKsjB,gBAAkB,EAG1FtjB,KAAKqlB,sDASLrlB,KAAKojB,SAASkC,UACdtlB,KAAKmjB,MAAMmC,uDAQQ,IAAApf,EAAAlG,KAEbyjB,EAAwBzjB,KAAKjD,MAAMuI,MAAQtF,KAAKjD,MAAMuI,MAAQtF,KAAKsjB,gBAAkB,EACvFtjB,KAAKyjB,wBAA0BA,IACjCzjB,KAAKyjB,sBAAwBA,EAG7BzjB,KAAKulB,qBAGDvlB,KAAKwlB,WACPxlB,KAAKwlB,UAAUC,QAAQ,SAAC7b,GAAW1D,EAAKwf,aAAa9b,uCAUlD,IAAAL,EAAAvJ,KACP,OAAOiF,EAAAC,EAAAC,cAAA,OAAKwgB,IAAK,SAACC,GAASrc,EAAKsc,QAAUD,oCAS1C5lB,KAAK8lB,WACL9lB,KAAK+lB,WAGL/lB,KAAKgmB,mBAGLhmB,KAAKimB,kDASL,GAAIjmB,KAAKilB,sBAAuB,CAC5B,IAAMrb,EAAO5J,KAAKwlB,UAAUxlB,KAAKglB,mBACjChlB,KAAK0lB,aAAa9b,GAItB5J,KAAKglB,kBAAoBrC,GAAa,EAAG3iB,KAAK+jB,SAAW,GACzD/jB,KAAKilB,sBAAwBjlB,KAAKklB,uBAAyB,IAAI/a,wCAW/DnK,KAAKwlB,UAAY,GACjB,IAAK,IAAIU,EAAI,EAAGA,EAAIlmB,KAAK6jB,eAAgBqC,IAAK,CAC5C,IAAMC,EAAMnmB,KAAKomB,gBAAgBF,GACjClmB,KAAKwlB,UAAUa,KAAK,CAClBC,GAAOH,EAAI,GACXI,GAAOJ,EAAI,GACXK,IAAQL,EAAI,GACZM,IAAQN,EAAI,GACZO,UAAc,IAIlB,IAAK,IAAIR,EAAIlmB,KAAK6jB,eAAgBqC,EAAIlmB,KAAK+jB,SAAUmC,IACnDlmB,KAAKwlB,UAAUa,KAAK,CAACK,UAAc,4CAUvBnhB,GACd,IAAMsV,EACJ,EAAIzI,KAAKuU,KAAOphB,EAAQvF,KAAK6kB,cAAgB7kB,KAAK6jB,gBAAkB7jB,KAAK6jB,eACrE+C,EAAQ5mB,KAAKjD,MAAM8pB,WAAa,GAAM,GAAK,EAAIzU,KAAK0U,IAAI,EAAIjM,IAOlE,MAAO,CANI7a,KAAK0jB,QAAUkD,EAAQxU,KAAK0U,IAAIjM,GAAK7a,KAAK4jB,cAEnD5jB,KAAK2jB,SACJ3jB,KAAKjD,MAAM8pB,WACVD,EAAQxU,KAAK2U,IAAIlM,GAAK7a,KAAK4jB,cAC3BgD,EAAQxU,KAAK2U,IAAI,EAAIlM,GAAK7a,KAAK4kB,uBAAyB,EAAI5kB,KAAK4jB,mDASrE5jB,KAAKgnB,UAAY,GACjB,IAAK,IAAId,EAAI,EAAGA,EAAIlmB,KAAK6jB,eAAgBqC,IAAK,CAE5C,IAAMe,EAAcf,EACdgB,GAAmBhB,EAAI,GAAKlmB,KAAK6jB,eACvC7jB,KAAKmnB,QAAQF,EAAaC,EAAiB,EAAG,GAG9C,IAAME,EAAiBpnB,KAAK8jB,YAAc,EACpCuD,EAAgBD,EAAiBpnB,KAAK6jB,eAAiBqC,EACvDoB,EACJF,EAAiBpnB,KAAK6jB,gBAAkBqC,EAAI,GAAKlmB,KAAK6jB,eACxD7jB,KAAKmnB,QAAQE,EAAeC,EAAmB,EAAG,GAOlD,IACMC,GADuBH,EAAiB,GACKpnB,KAAK6jB,eAAiBqC,EACzElmB,KAAKmnB,QAAQI,EAAqBN,EAAa,EAAG,GAElD,IAAK,IAAIO,EAAI,EAAGA,EAAIxnB,KAAK8jB,YAAa0D,IAAK,CAEzC,IAAMjiB,EAAQiiB,EAAIxnB,KAAK6jB,eAAiBqC,EAClCuB,GAAkBliB,EAAQvF,KAAK6jB,gBAAkB7jB,KAAK+jB,SAC5D/jB,KAAKmnB,QAAQ5hB,EAAOkiB,EAAgB,EAAG,IAIvC,IAAMC,GACHF,EAAI,GAAKxnB,KAAK8jB,YAAc9jB,KAAK6jB,gBAAkBqC,EAAI,GAAKlmB,KAAK6jB,eACpE7jB,KAAKmnB,QAAQ5hB,EAAOmiB,EAAiB,IAAM,IAC3C1nB,KAAKmnB,QAAQ5hB,EAAOmiB,EAAiB,IAAM,sCAazCC,EAAaC,EAAaC,EAAU3gB,GAC1ClH,KAAKgnB,UAAUX,KAAK,CAClByB,OAAUH,EAAYnc,WACtBuT,OAAU6I,EAAYpc,WACtBuc,UAAcF,EACd3gB,QAAYA,EACZ8gB,SAAa9gB,IACflH,KAAKwlB,UAAUmC,GAAajB,YAC5B1mB,KAAKwlB,UAAUoC,GAAalB,uDAQX,IAAA3c,EAAA/J,KAEjBA,KAAKioB,WAAaC,KAAmBloB,KAAKwlB,WAG1CxlB,KAAKioB,WACFE,MAAM,SAAUD,OACdL,SAAS,SAACpb,GACT,OAAOA,EAAElH,MAAQwE,EAAK8Z,eACpB9Z,EAAKia,iCAAmCja,EAAKka,uCAElDkE,MAAM,SAAUD,KAAeloB,KAAKsjB,gBAAkB,EAAGtjB,KAAKwjB,iBAAmB,IAIpF,IAAM4E,EAAcF,KAAaloB,KAAKgnB,WACnCa,SAAS,SAACpb,GACT,OAAOA,EAAEsb,UAAY,EACnBtb,EAAEsb,UACF,EAAI3V,KAAKwI,IAAInO,EAAEqb,OAAOpB,UAAWja,EAAEsS,OAAO2H,aAE7C2B,SAASroB,KAAKkkB,cACflkB,KAAKioB,WAAWE,MAAM,QAASC,GAGjCpoB,KAAKioB,WAAWK,GAAG,OAAQtoB,KAAKyP,MAGhCzP,KAAKioB,WAAWM,WAAW,GAGvBvoB,KAAK+kB,cACPmD,KAAYloB,KAAKkjB,OAAQljB,KAAK8kB,kDAOtB,IAAA0D,EAAAxoB,KAEVyoB,SAAWC,YAKX1oB,KAAKmjB,MAAQ,IAAIsF,aACjBzoB,KAAKojB,SAAWqF,sBACdzoB,KAAKsjB,gBAAkBtjB,KAAKyjB,sBAC5BzjB,KAAKwjB,iBAAmBxjB,KAAKyjB,sBAC7B,CAACkF,WAAW,EAAMC,aAAa,EAAMC,WAAY,IAEnD7oB,KAAKojB,SAAS0F,YAAa,EAC3B9oB,KAAKulB,qBACLvlB,KAAK6lB,QAAQkD,YAAY/oB,KAAKojB,SAAS4F,MAGvChpB,KAAKwlB,UAAUC,QAAQ,SAAC7b,GACtBA,EAAKqf,SAAW,IAAIR,YACpBD,EAAK9C,aAAa9b,GAClB4e,EAAKrF,MAAM+F,SAAStf,EAAKqf,YAI3Bf,KAAUloB,KAAKojB,SAAS4F,MACrB7oB,KAAK+nB,OACHrgB,UAAU7H,KAAKojB,SAAS4F,MACxBG,QAAQ,kBAAMX,EAAKP,WAAWmB,KAAKlB,KAASmB,EAAGnB,KAASoB,KACxDhB,GAAG,QAAStoB,KAAK+iB,aACjBuF,GAAG,OAAQtoB,KAAKgjB,SAChBsF,GAAG,MAAOtoB,KAAKijB,YAGpBjjB,KAAKqjB,cAAgB,IAAIoF,YACzBzoB,KAAKmjB,MAAM+F,SAASlpB,KAAKqjB,4DAQzBrjB,KAAKojB,SAASmG,OACZvpB,KAAKsjB,gBAAkBtjB,KAAKyjB,sBAC5BzjB,KAAKwjB,iBAAmBxjB,KAAKyjB,4DAQpB7Z,GAAM,IACXyf,EAAmBzf,EAAnByf,EAAGC,EAAgB1f,EAAhB0f,EAAgB1f,EAAbqf,SACHO,SACP,IAAIf,SAAWY,EAAIrpB,KAAKyjB,sBAAuB6F,EAAItpB,KAAKyjB,4DAW/C7Z,GAAiC,IACxC6f,EACAC,EACAlF,EACAJ,EAJauF,EAA2BC,UAAAvgB,OAAA,QAAAyB,IAAA8e,UAAA,GAAAA,UAAA,GAAH,EAKrCD,GAEFF,EAAkBzpB,KAAK6pB,mBACrB7pB,KAAK8pB,cACH9pB,KAAKukB,6BACLvkB,KAAK+pB,wBAAwBngB,GAC7B+f,IACJD,EAAgB1pB,KAAK6pB,mBACnB7pB,KAAK8pB,cACH9pB,KAAKskB,2BAELtkB,KAAK+pB,wBAAwBngB,GAE7B+f,IACJnF,EACExkB,KAAKwkB,aAAexkB,KAAKykB,oBAAsBzkB,KAAKwkB,aAAemF,EACrEvF,EACEpkB,KAAKokB,YAAcpkB,KAAKqkB,mBAAqBrkB,KAAKokB,YAAcuF,IAKlED,EAFAD,EAAkBzpB,KAAK6pB,mBAAmB7pB,KAAK+pB,wBAAwBngB,IAOvE4a,EAAcxkB,KAAKwkB,YACnBJ,EAAapkB,KAAKokB,YAGpBxa,EAAKqf,SAASe,QACdpgB,EAAKqf,SAASgB,UACZjqB,KAAKmkB,gBAAkBnkB,KAAKyjB,sBAC5BgG,EACAjF,GACF5a,EAAKqf,SAASiB,UAAUR,EAAelF,GAErC5a,EAAKqf,SAASkB,QADZR,EACsB,CACtB,IAAIQ,KACF,EACA,EAAIR,EACJ,EACAF,EACA,KAIoB,KAC1B7f,EAAKqf,SAASmB,WAAW,EAAG,EAAGhG,EAAapkB,KAAKyjB,4DAUtC3d,EAAMukB,GAAe,IAC1BvC,EAA4BhiB,EAA5BgiB,OAAQ/I,EAAoBjZ,EAApBiZ,OACRuL,EAD4BxkB,EAAZoB,QACQ,KAAQlH,KAAKjD,MAAMwmB,SAAW,EAAI8G,GAChErqB,KAAKqjB,cAAckH,MAAQD,EAC3BtqB,KAAKqjB,cAAc4G,WAChBjqB,KAAK0kB,gBAAkB1kB,KAAK2kB,mCAAqC0F,GAChErqB,KAAKyjB,sBACPzjB,KAAK6pB,mBAAmB7pB,KAAKwqB,cAAc1kB,EAAKP,MAAOvF,KAAKgnB,UAAU3d,UACtErJ,KAAKqjB,cAAcoH,OACjB3C,EAAOuB,EAAIrpB,KAAKyjB,sBAAuBqE,EAAOwB,EAAItpB,KAAKyjB,uBACzDzjB,KAAKqjB,cAAcqH,OACjB3L,EAAOsK,EAAIrpB,KAAKyjB,sBAAuB1E,EAAOuK,EAAItpB,KAAKyjB,6DAU/Cle,EAAOolB,GAEnB,IAAMC,EAAS,CAAC,GAAG,GAAG,KAChBC,EAAO,CAAC,IAAI,GAAG,KACfC,EAAa,CAAC,IAAI,GAAG,IACrBC,EAAc,CAAC,IAAI,IAAI,IACvBC,EAAO,CAAC,GAAG,IAAI,KAKfC,EAFyB,IAEAN,EACzBO,EAF2B,GAEAP,EAG3BQ,EAA+B,IAAbR,EAAoBO,EACtCE,EACJD,EAAkBD,EAAwC,IAAbP,EAAoBM,EAC7DI,EACJD,EAAgBH,EAAsC,IAAbN,EAAoBO,EACzDI,EACJD,EAAsBH,EAAwC,IAAbP,EAAoBM,EACjEM,EACJD,EAAuBL,EAAsC,GAAbN,EAAmBM,EAGrE,GAAI1lB,GAAS4lB,EACX,OAAOP,EACJ,GAAIrlB,GAAS4lB,EAAkBD,EACpC,CACE,IAAMM,GAAcjmB,EAAQ4lB,GAAmBD,EAC/C,OAAOlrB,KAAK8pB,cAAce,EAAMD,EAAQY,GAErC,GAAIjmB,GAAS6lB,EAChB,OAAOP,EACJ,GAAItlB,GAAS6lB,EAAgBH,EAClC,CACE,IAAMO,GAAcjmB,EAAQ6lB,GAAiBH,EAC7C,OAAOjrB,KAAK8pB,cAAcgB,EAAYD,EAAMW,GAEzC,GAAIjmB,GAAS8lB,EAChB,OAAOP,EACJ,GAAIvlB,GAAS8lB,EAAsBH,EACxC,CACE,IAAMM,GAAcjmB,EAAQ8lB,GAAuBH,EACnD,OAAOlrB,KAAK8pB,cAAciB,EAAaD,EAAYU,GAEhD,GAAIjmB,GAAS+lB,EAChB,OAAOP,EACJ,GAAIxlB,GAAS+lB,EAAuBL,EACzC,CACE,IAAMO,GAAcjmB,EAAQ+lB,GAAwBL,EACpD,OAAOjrB,KAAK8pB,cAAckB,EAAMD,EAAaS,GAE1C,GAAIjmB,GAASgmB,EAChB,OAAOP,EAGP,IAAMQ,GAAcjmB,EAAQgmB,GAAiBN,EAC7C,OAAOjrB,KAAK8pB,cAAcc,EAAQI,EAAMQ,yCAY9BC,EAAQC,EAAQC,GAC5B,IAAMC,EAAKD,EACLE,EAAK,EAAID,EAKf,MAJY,CACVxZ,KAAK0Z,MAAML,EAAO,GAAKG,EAAKF,EAAO,GAAKG,GACxCzZ,KAAK0Z,MAAML,EAAO,GAAKG,EAAKF,EAAO,GAAKG,GACxCzZ,KAAK0Z,MAAML,EAAO,GAAKG,EAAKF,EAAO,GAAKG,+CAUzB7Y,GACjB,IAAI9B,EAAQ,EAIZ,OAHA8B,EAAMyS,QAAQ,SAAAI,GACZ3U,GAASA,GAAS,GAAK2U,IAElBnT,OAAOxB,mDASQtH,GACtB,OAAO5J,KAAKwqB,cAAc5gB,EAAKrE,MAAQvF,KAAK6jB,eAAgB7jB,KAAK6jB,oDAQvDpX,GAEyB,IAA/BzM,KAAKyjB,wBAGoD,IAAjCzjB,KAAKioB,WAAWM,cAErCL,KAAS6D,QACZ/rB,KAAKioB,WAAW+D,YAAY,IAAKC,UAErC/D,KAASiB,QAAQ7C,GAAK4B,KAASiB,QAAQE,EACvCnB,KAASiB,QAAQ5C,GAAK2B,KAASiB,QAAQG,mCAQjC7c,GAE6B,IAA/BzM,KAAKyjB,wBAGTyE,KAASiB,QAAQ7C,GAAK4B,KAASmB,EAC/BnB,KAASiB,QAAQ5C,GAAK2B,KAASoB,qCAQvB7c,GAE2B,IAA/BzM,KAAKyjB,wBAGoD,IAAjCzjB,KAAKioB,WAAWM,cAErCL,KAAS6D,QACZ/rB,KAAKioB,WAAW+D,YAAY,GAEhC9D,KAASiB,QAAQ7C,GAAK4B,KAASiB,QAAQ3C,IACvC0B,KAASiB,QAAQ5C,GAAK2B,KAASiB,QAAQ1C,oCAOlC,IAAAyF,EAAAlsB,KAML,GAJAA,KAAKwlB,UAAUC,QAAQ,SAAC7b,GAAWsiB,EAAKC,aAAaviB,KAInB,MAA9B5J,KAAKilB,sBAA+B,CACtC,IAAMrb,EAAO5J,KAAKwlB,UAAUxlB,KAAKglB,mBAC3BoH,EAAY,IAAIjiB,KAASnK,KAAKilB,sBACpC,GAAImH,EAAYpsB,KAAKmlB,oBAEnBnlB,KAAK0lB,aAAa9b,GAGlB5J,KAAKilB,sBAAwB,SAE1B,CAEH,IAAM0E,GACHyC,GAAapsB,KAAKmlB,oBAAsB,EACvCiH,EACApsB,KAAKmlB,oBAAsBiH,IAC5BpsB,KAAKmlB,oBAAsB,GAG9BnlB,KAAK0lB,aAAa9b,EAAM+f,IAK5B,IAAIU,EAAgB,EACpB,GAAmC,MAA/BrqB,KAAKklB,uBAAgC,CACvC,IAAMkH,EAAY,IAAIjiB,KAASnK,KAAKklB,uBAChCkH,EAAYpsB,KAAKolB,qBAEnBplB,KAAKklB,uBAAyB,KAI9BmF,EACE+B,GAAapsB,KAAKolB,qBAAuB,EACvCgH,GAAapsB,KAAKolB,qBAAuB,IACxCplB,KAAKolB,qBAAuBgH,IACE,EAA5BpsB,KAAKolB,qBAA2B,GAK3CplB,KAAKqjB,cAAc2G,QACnBhqB,KAAKgnB,UAAUvB,QAAQ,SAAC3f,GACtBomB,EAAKG,aAAavmB,EAAMukB,KAE1BrqB,KAAKqjB,cAAciJ,UAEnBtsB,KAAKojB,SAASmJ,OAAOvsB,KAAKmjB,sCAQrBqJ,GAUL,IAAK,IAAItG,EAAI,EAAGA,EAAIlmB,KAAK6jB,eAAgBqC,IAAK,CAC5ClmB,KAAK6kB,cAAgB7kB,KAAK+kB,aAC1B,IAAMoB,EAAMnmB,KAAKomB,gBAAgBF,GACjClmB,KAAKwlB,UAAUU,GAAGI,GAAKtmB,KAAKwlB,UAAUU,GAAGM,IAAML,EAAI,GACnDnmB,KAAKwlB,UAAUU,GAAGK,GAAKvmB,KAAKwlB,UAAUU,GAAGO,IAAMN,EAAI,WAvuBlCtlB,aCiNR4rB,eA/Kb,SAAAA,IAAc,IAAA3sB,EAAA,OAAA7J,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAAysB,IACZ3sB,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAAw2B,GAAAtsB,KAAAH,QAEKqH,MAAQ,CAACqlB,OAAQ,GAAIC,UAAW,GAHzB7sB,mFAWZE,KAAK4sB,yEASYrrB,GAEjB,IAAIsrB,GAAkB,EACdC,EAAe9sB,KAAKjD,MAApB+vB,WACJA,EAAWzjB,SAAW9H,EAAUurB,WAAWzjB,OAC7CyjB,EAAWrH,QAAQ,SAACsH,EAAWxnB,GACzBwnB,EAAUC,MAAQzrB,EAAUurB,WAAWvnB,GAAOynB,KAC9CD,EAAU9lB,SAAW1F,EAAUurB,WAAWvnB,GAAO0B,SACnD4lB,GAAkB,KAItBA,GAAkB,EAIhBA,GACF7sB,KAAK4sB,+DAmCP,IA3BO,IAAAhoB,EAOH5E,KAAKjD,MALPsP,EAFKzH,EAELyH,UACAygB,EAHKloB,EAGLkoB,WACAG,EAJKroB,EAILqoB,WACAC,EALKtoB,EAKLsoB,kBACAC,EANKvoB,EAMLuoB,OAEMT,EAAW1sB,KAAKqH,MAAhBqlB,OAKFU,EAAkBptB,KAAKqH,MAAMslB,UAAY,EAY3CU,EAAgB,GAChBC,EAAiBC,MAAMJ,GAAQzd,KAAK,GAC/BwW,EAAI,EAAGA,EAAI4G,EAAWzjB,QAAS,CAGtC,IAFA,IAAImkB,EAAM,GACJC,EAAaX,EAAWzjB,OAAS6c,EAAIiH,EAClC3F,EAAI,EAAGA,EAAI2F,GAAUjH,EAAI4G,EAAWzjB,OAAQme,KAE9CiG,GAAcf,EAAOxG,KACxBoH,EAAe9F,GAAKpV,KAAKmH,IAAImT,EAAOxG,GAAIoH,EAAe9F,KACzDgG,EAAInH,KAAKyG,EAAW5G,MAEtBmH,EAAchH,KAAKmH,GAGrB,OACEvoB,EAAAC,EAAAC,cAAA,OAAKkH,UAAWA,GACbghB,EAAchoB,IAAI,SAACmoB,EAAK9lB,GACvB,IAAM+lB,EAAaD,EAAInkB,OAAS8jB,EAChC,OACEloB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EACbC,UAAU,MAEVC,QAAS0lB,EAAa,eAAkBR,GAAc,gBACtDjlB,WAAW,SACXxC,IAAKkC,EACLJ,MAAO,CAAEoP,UAAYhP,GAAYwlB,EAAqBA,EAAoB,IAEzEM,EAAInoB,IAAI,SAAC0nB,EAAWW,GACnB,IAAMnoB,EAAQmC,EAAWylB,EAASO,EAClC,OACEzoB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EACbC,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXxC,IAAKkoB,EAGLpmB,MAAO,CACLhC,MAAOmoB,EAAaf,EAAOnnB,GAAS+nB,EAAeI,GACnDzmB,OAAQmmB,IAGVnoB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAAA,KAAGwoB,KAAMZ,EAAUY,KAAM5O,OAAO,SAAS6O,IAAI,uBAC3C3oB,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CACE0J,QAAM,EACNmH,MAAe,GAARxQ,EACPkC,QAAS,KAETxC,EAAAC,EAAAC,cAAA,OACE6nB,IAAKD,EAAUC,IACf/lB,OAAQ8lB,EAAU9lB,OAClB4mB,IAAKd,EAAUc,sEAqBX,IAAA3nB,EAAAlG,KACpB8sB,EAAe9sB,KAAKjD,MAApB+vB,WACR9sB,KAAKoW,SAAS,CACZsW,OAAQa,MAAMT,EAAWzjB,QAAQqG,KAAK,GACtCid,UAAW,IAIbG,EAAWrH,QAAQ,SAACsH,EAAWxnB,GAC7B,IAAMuoB,EAAM,IAAIC,MAChBD,EAAIE,OAAS,SAAA/U,GAAS,IAAAgV,EACoBhV,EAAMiV,cAAtCC,EADYF,EACZE,aAAcC,EADFH,EACEG,cACtB,GAAIA,EAAe,CAEjB,IAAM9oB,EAAQynB,EAAU9lB,OAASmnB,EAAgBD,EACjDjoB,EAAKkQ,SAAS,SAAA0I,GAAS,MAAK,CAC1B4N,OAAM,GAAAhpB,OAAAzN,OAAA4T,EAAA,EAAA5T,CACD6oB,EAAU4N,OAAOhmB,MAAM,EAAGnB,IADzB,CAEJD,GAFIrP,OAAA4T,EAAA,EAAA5T,CAGD6oB,EAAU4N,OAAOhmB,MAAMnB,EAAQ,KAEpConB,UAAWva,KAAKmH,IAAIwT,EAAU9lB,OAAQ6X,EAAU6N,gBAMtDmB,EAAId,IAAMD,EAAUC,aA5MEnsB,85HC8B5B,IAAMwtB,GAAgBxrB,YAAOC,IAAPD,CAAHyrB,KAED,SAAAvxB,GAAK,OAAIA,EAAMC,MAAMC,sBAMjCsxB,GAAe1rB,YAAO6I,IAAP7I,CAAH2rB,KAGZ,SAAA/qB,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,4CAOA0sB,GAAqB5rB,YAAOI,IAAPJ,CAAH6rB,KAEL14B,EAAUyD,aACZzD,EAAU6D,sBAEd,SAAAkD,GAAK,OAAIA,EAAMC,MAAMM,sBAC5B,SAAA0G,GAAA,IAAGtB,EAAHsB,EAAGtB,WAAH,OACEA,IAAeZ,EAAYK,IAAMO,IAAeZ,EAAYI,KAA7D,2BAAAwB,OACiB1N,EAAUoG,qBAAuB,KADlD,8BAAAsH,OAEkB1N,EAAUoG,qBAAuB,KAFnD,cAIAsG,IAAeZ,EAAYG,IAA3B,2BAAAyB,OACiB1N,EAAUmG,qBAAuB,KADlD,8BAAAuH,OAEkB1N,EAAUmG,qBAAuB,KAFnD,cAIAuG,IAAeZ,EAAYE,IAA3B,2BAAA0B,OACiB1N,EAAUkG,qBAAuB,KADlD,8BAAAwH,OAEkB1N,EAAUkG,qBAAuB,KAFnD,cAIAwG,IAAeZ,EAAYC,IAA3B,2BAAA2B,OACiB1N,EAAUiG,qBAAuB,KADlD,8BAAAyH,OAEkB1N,EAAUiG,qBAAuB,KAFnD,0BAAAyH,OAGc1N,EAAU8D,sBAHxB,eASDma,GAAcpR,YAAO6I,IAAP7I,CAAH8rB,KAIC,WAAaxa,WAASC,SAAW,MAAQC,SAAOC,UAC5D,SAAAO,GAAA,IAAGnS,EAAHmS,EAAGnS,WAAH,OACEA,IAAeZ,EAAYK,IAAMO,IAAeZ,EAAYI,KAA7D,2BAAAwB,OACiB1N,EAAUoG,qBAAuB,KADlD,8BAAAsH,OAEkB1N,EAAUoG,qBAAuB,KAFnD,cAIAsG,IAAeZ,EAAYG,IAA3B,2BAAAyB,OACiB1N,EAAUmG,qBAAuB,KADlD,8BAAAuH,OAEkB1N,EAAUmG,qBAAuB,KAFnD,cAIAuG,IAAeZ,EAAYE,IAA3B,2BAAA0B,OACiB1N,EAAUkG,qBAAuB,KADlD,8BAAAwH,OAEkB1N,EAAUkG,qBAAuB,KAFnD,cAIAwG,IAAeZ,EAAYC,IAA3B,sFAAA2B,OAGiB1N,EAAUiG,qBAAuB,KAHlD,8BAAAyH,OAIkB1N,EAAUiG,qBAAuB,KAJnD,eAUD2yB,GAAqB/rB,YAAOoR,GAAPpR,CAAHgsB,KAEN,SAAA9xB,GAAK,OAAIA,EAAMC,MAAMI,8BAIjC0xB,GAAuBjsB,YAAOoR,GAAPpR,CAAHksB,KAER,SAAAhyB,GAAK,OAAIA,EAAMC,MAAMK,gCAIjC2xB,GAAWnsB,YAAO6I,IAAP7I,CAAHosB,KAER,SAAAja,GAAA,IAAGtS,EAAHsS,EAAGtS,WAAH,OACEA,IAAeZ,EAAYK,IAAMO,IAAeZ,EAAYI,KAA7D,+BAAAwB,OACqB1N,EAAUoG,qBAAqB,EAAI,KADxD,eAGAsG,IAAeZ,EAAYG,IAA3B,+BAAAyB,OACqB1N,EAAUmG,qBAAqB,EAAI,KADxD,gBAGCuG,IAAeZ,EAAYE,IAAMU,IAAeZ,EAAYC,KAA7D,mCAODmtB,GAAgBrsB,YAAOmsB,GAAPnsB,CAAHssB,MAMbC,GAAiBvsB,YAAOmsB,GAAPnsB,CAAHwsB,KAGd,SAAAtX,GAAA,IAAGrV,EAAHqV,EAAGrV,WAAH,OACCA,IAAeZ,EAAYE,IAAMU,IAAeZ,EAAYC,KAA7D,gCAOAutB,GAAiBzsB,YAAOqsB,GAAPrsB,CAAH0sB,KAEd,SAAAjX,GAAA,OAAAA,EAAG5V,aACYZ,EAAYC,IAA3B,6EAQAytB,GAAW3sB,YAAOmsB,GAAPnsB,CAAH4sB,KAER,SAAAC,GAAA,IAAGhtB,EAAHgtB,EAAGhtB,WAAH,OACDA,IAAeZ,EAAYE,IAAMU,IAAeZ,EAAYC,KAA7D,wCAOE4tB,GAAe9sB,YAAO2sB,GAAP3sB,CAAH+sB,KAGZ,SAAAC,GAAA,IAAGntB,EAAHmtB,EAAGntB,WAAH,OACCA,IAAeZ,EAAYE,IAAMU,IAAeZ,EAAYC,KAA7D,gCAOA+tB,GAAgBjtB,YAAO2sB,GAAP3sB,CAAHktB,KAGb,SAAAC,GAAA,IAAGttB,EAAHstB,EAAGttB,WAAH,OACCA,IAAeZ,EAAYE,IAAMU,IAAeZ,EAAYC,KAA7D,gCAOAsU,GAAoBxT,YAAOI,IAAPJ,CAAHotB,KAEJj6B,EAAUyD,aACZzD,EAAU6D,sBAEd,SAAAkD,GAAK,OAAIA,EAAMC,MAAMgB,eAC5B,SAAAkyB,GAAA,OAAAA,EAAGxtB,aACYZ,EAAYC,IAA3B,wBAAA2B,OACe1N,EAAU8D,sBADzB,sBASAyc,GAAiB1T,YAAOI,IAAPJ,CAAHstB,KAEDn6B,EAAUyD,aACZzD,EAAUkE,0BAEd,SAAA6C,GAAK,OAAIA,EAAMC,MAAMiB,mBAI5BmyB,GAAUvtB,IAAOqC,EAAVmrB,KAEA,SAAAtzB,GAAK,OAAIA,EAAMC,MAAMkB,oBAS5BoyB,GAAaztB,IAAOirB,IAAVyC,MAOVC,GAAkB3tB,YAAO4tB,IAAP5tB,CAAH6tB,KAOF16B,EAAUyD,aACZzD,EAAUoE,0BAGT,SAAA2C,GAAK,OAAIA,EAAMC,MAAMY,2BAC1B,SAAAb,GAAK,OAAIA,EAAMC,MAAMa,qBAEd,SAAAd,GAAK,OAAIA,EAAMC,MAAMc,gCAC1B,SAAAf,GAAK,OAAIA,EAAMC,MAAMe,2BAK9B4yB,GAAiB9tB,YAAO+tB,KAAP/tB,CAAHguB,MAMdC,GAAYjuB,IAAOkuB,KAAVC,KAEF,SAAAj0B,GAAK,OAAIA,EAAMC,MAAMkB,oBAI5B+yB,GAAepuB,YAAOquB,KAAPruB,CAAHsuB,KAQCn7B,EAAUyD,aACZzD,EAAUoE,0BAET,SAAA2C,GAAK,OAAIA,EAAMC,MAAMY,2BAC1B,SAAAb,GAAK,OAAIA,EAAMC,MAAMa,qBAGd,SAAAd,GAAK,OAAIA,EAAMC,MAAMc,gCAC1B,SAAAf,GAAK,OAAIA,EAAMC,MAAMe,2BAK9BqzB,GAAgBvuB,YAAOgJ,IAAPhJ,CAAHwuB,MAMbC,GAAezuB,YAAOC,IAAPD,CAAH0uB,KAEA,SAAAx0B,GAAK,OAAIA,EAAMC,MAAMO,6BACjC,SAAAi0B,GAAA,IAAG9uB,EAAH8uB,EAAG9uB,WAAH,OACCA,IAAeZ,EAAYE,IAAMU,IAAeZ,EAAYC,KAA7D,+DAQA0vB,GAAsB5uB,YAAO4pB,GAAP5pB,CAAH6uB,KAEP17B,EAAUyG,gCAAgC,EAAI,MAO1Dk1B,oLAsBF,OACE1sB,EAAAC,EAAAC,cAAA,WACGnF,KAAK4xB,YACL5xB,KAAK6xB,oBACL7xB,KAAK8xB,uBACL9xB,KAAK+xB,sBACL/xB,KAAKgyB,yBACLhyB,KAAKiyB,wDAWZ,IACUvvB,EAAe1C,KAAKjD,MAApB2F,WAER,OACEuC,EAAAC,EAAAC,cAACkpB,GAAD,CAAejpB,UAAW,GACxBH,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CAAMuC,QAAS,MACbxC,EAAAC,EAAAC,cAAC+sB,GAAA,SAAD,CAAUC,QAASC,KAAgBC,WAAW,SAASC,aAAc,CAAC5b,UAAW,UAAWmR,SAAU,KACpG5iB,EAAAC,EAAAC,cAACopB,GAAD,CAAc1mB,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,aAAatF,WAAYA,GAC9FuC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACspB,GAAD,CAAoB/rB,WAAYA,GAAhC,6FAiBd,IAAAkC,EACsC5E,KAAKjD,MAAjC2F,EADVkC,EACUlC,WAAY6vB,EADtB3tB,EACsB2tB,YAEpB,OACEttB,EAAAC,EAAAC,cAACypB,GAAD,CAAoB/mB,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,SAAStF,WAAYA,GACpGuC,EAAAC,EAAAC,cAACmqB,GAAD,CAAgB9iB,MAAI,EAAC9J,WAAYA,GAC/BuC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D/C,EAAAC,EAAAC,cAACqtB,GAAD,CACEltB,MAAOtF,KAAKyyB,mBACZF,YAAaA,EACb1L,YAAY,MAIlB5hB,EAAAC,EAAAC,cAAC2qB,GAAD,CAAetjB,MAAI,EAAC9J,WAAYA,GAC9BuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CAAM0J,QAAM,EAACnH,QAAS,KACpBxC,EAAAC,EAAAC,cAACutB,GAAD,CAAmBhwB,WAAYA,GAA/B,WAGAuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwtB,GAAD,KACG,sEACA,8DACA,mFACA,oFAcb,IACUjwB,EAAe1C,KAAKjD,MAApB2F,WAER,OACEuC,EAAAC,EAAAC,cAAC2pB,GAAD,CAAsBjnB,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,SAAStF,WAAYA,GACtGuC,EAAAC,EAAAC,cAACwqB,GAAD,CAAcnjB,MAAI,EAAC9J,WAAYA,GAC7BuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CAAM0J,QAAM,EAACnH,QAAS,KACpBxC,EAAAC,EAAAC,cAACutB,GAAD,CAAmBhwB,WAAYA,GAA/B,8BAGAuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwtB,GAAD,KACG,2DACD1tB,EAAAC,EAAAC,cAACirB,GAAD,CAASzC,KAAM33B,EAAUoB,uBAAwB2nB,OAAO,SAAS6O,IAAI,uBAArE,eACC,wDAEH3oB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwtB,GAAD,KACG,oFACA,mFACA,qEAIP1tB,EAAAC,EAAAC,cAACiqB,GAAD,CAAgB5iB,MAAI,EAAC9J,WAAYA,GAC/BuC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D/C,EAAAC,EAAAC,cAACytB,GAAA1tB,EAAD,CAAMwJ,OAAK,EAACjH,QAAS,KACnBxC,EAAAC,EAAAC,cAACmrB,GAAD,CACEtD,IAAK6F,KACLhF,IAAI,2DAelB,IAAA1nB,EACsCnG,KAAKjD,MAAjC2F,EADVyD,EACUzD,WAEF1F,EAHRmJ,EACsBosB,YAEQ,OAAS,QACrC,OACEttB,EAAAC,EAAAC,cAACypB,GAAD,CAAoB/mB,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,SAAStF,WAAYA,GACpGuC,EAAAC,EAAAC,cAAC+pB,GAAD,CAAe1iB,MAAI,EAAC9J,WAAYA,GAC9BuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CAAMuC,QAAS,KAEbxC,EAAAC,EAAAC,cAACmsB,GAAD,CAAclsB,UAAW,EAAG1C,WAAYA,GACtCuC,EAAAC,EAAAC,cAAC2tB,GAAA,EAAD,CACEC,WAAW,UACXC,WAAW,WACXh2B,MAAOA,EACPi2B,QAAS,CAAChsB,OAAQ,KAMlBzB,IAAKxI,EACLk2B,UAAQ,EACRtK,aAAW,OAKnB3jB,EAAAC,EAAAC,cAAC2qB,GAAD,CAAetjB,MAAI,EAAC9J,WAAYA,GAC9BuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CAAM0J,QAAM,EAACnH,QAAS,KACpBxC,EAAAC,EAAAC,cAACutB,GAAD,CAAmBhwB,WAAYA,GAA/B,aAGAuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwtB,GAAD,KACG,UACD1tB,EAAAC,EAAAC,cAACirB,GAAD,CAASzC,KAAM33B,EAAUsB,gCAAiCynB,OAAO,SAAS6O,IAAI,uBAA9E,aACC,uDAEH3oB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwtB,GAAD,KACG,mCACD1tB,EAAAC,EAAAC,cAACirB,GAAD,CAASzC,KAAM33B,EAAUiB,uCAAwC8nB,OAAO,SAAS6O,IAAI,uBAArF,UACC,eACD3oB,EAAAC,EAAAC,cAACirB,GAAD,CAASzC,KAAM33B,EAAUkB,oCAAqC6nB,OAAO,SAAS6O,IAAI,uBAAlF,QACC,KAEH3oB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwtB,GAAD,KACG,iFACA,yFAGH1tB,EAAAC,EAAAC,cAAA,QAAMguB,OAAO,wGAA4GC,OAAO,OAAOvkB,GAAG,6BAA6BwkB,KAAK,6BAA6BhnB,UAAU,WAAW0S,OAAO,SAAS6O,IAAI,sBAAsB0F,YAAU,GAEhRruB,EAAAC,EAAAC,cAAA,OAAKmC,MAAO,CAAEkiB,SAAU,WAAY7a,KAAM,WAAa4kB,cAAY,QACjEtuB,EAAAC,EAAAC,cAAA,SAAOmM,KAAK,OAAO+hB,KAAK,yCAAyCG,SAAS,KAAKC,aAAa,MAE9FxuB,EAAAC,EAAAC,cAAA,OAAKkH,UAAU,SACbpH,EAAAC,EAAAC,cAACqrB,GAAD,CAAiBlf,KAAK,UACpBrM,EAAAC,EAAAC,cAACwrB,GAAD,MADF,+EAmBd,IACUjuB,EAAe1C,KAAKjD,MAApB2F,WAER,OACEuC,EAAAC,EAAAC,cAAC2pB,GAAD,CAAsBjnB,WAAS,EAC7BC,UAAU,MACVC,QAAQ,gBACRC,WAAW,SACXtF,WAAYA,GAEZuC,EAAAC,EAAAC,cAACwqB,GAAD,CAAcnjB,MAAI,EAAC9J,WAAYA,GAC7BuC,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CAAM0J,QAAM,EAACnH,QAAS,KACpBxC,EAAAC,EAAAC,cAACutB,GAAD,CAAmBhwB,WAAYA,GAA/B,gBAGAuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwtB,GAAD,KACG,0DACD1tB,EAAAC,EAAAC,cAAC2rB,GAAD,eACC,OACD7rB,EAAAC,EAAAC,cAACirB,GAAD,CAASzC,KAAM33B,EAAUmB,iBAAkB4nB,OAAO,SAAS6O,IAAI,uBAA/D,aACC,KACD3oB,EAAAC,EAAAC,cAACirB,GAAD,CAASzC,KAAM33B,EAAUqB,gBAAiB0nB,OAAO,SAAS6O,IAAI,uBAA9D,iBACC,6BACD3oB,EAAAC,EAAAC,cAACirB,GAAD,CAASzC,KAAM33B,EAAUgB,wBAAyB+nB,OAAO,SAAS6O,IAAI,uBAAtE,gBACC,KAEH3oB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwtB,GAAD,KACG,mFACA,sCAEH1tB,EAAAC,EAAAC,cAAC8rB,GAAD,CAAcyC,WAAY19B,EAAU0G,sBAClCuI,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACC,UAAU,MAAMC,QAAQ,aAAaC,WAAW,UAC9D/C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACisB,GAAD,KACEnsB,EAAAC,EAAAC,cAAA,QAAMsH,EAAGzW,EAAUgG,0BAGvBiJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GAAV,0BAORvH,EAAAC,EAAAC,cAACiqB,GAAD,CAAgB5iB,MAAI,EAAC9J,WAAYA,GAC/BuC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D/C,EAAAC,EAAAC,cAACwuB,GAAAzuB,EAAD,CAAYwJ,OAAK,EAACjH,QAAS,KACzBxC,EAAAC,EAAAC,cAACmrB,GAAD,CACEtD,IAAK4G,KACL/F,IAAI,kEAcC,IAoEbgG,EApEa5pB,EAEmBjK,KAAKjD,MAAjC2F,EAFSuH,EAETvH,WAAY6vB,EAFHtoB,EAEGsoB,YAIduB,EAA0D,IAA5C99B,EAAUyG,gCACxBs3B,EAAqE,IAA5C/9B,EAAUyG,gCACnCu3B,EAAmBh+B,EAAUyG,gCAC7Bw3B,EAA2D,GAA5Cj+B,EAAUyG,gCACzBy3B,EAAel+B,EAAUyG,gCACzB03B,EAA4D,IAA5Cn+B,EAAUyG,gCAC1B23B,EAAep+B,EAAUyG,gCACzB43B,EAA0D,IAA5Cr+B,EAAUyG,gCAGxBqwB,EAAa,CACjB,CACEE,IAAKsH,KACLrtB,OAAQ6sB,EACRjG,IAAK,aACLF,KAAM33B,EAAUc,iBAElB,CACEk2B,IAAKuF,EAAcgC,KAA2BC,KAC9CvtB,OAAQ8sB,EACRlG,IAAK,yBACLF,KAAM33B,EAAUe,6BAElB,CACEi2B,IAAKyH,KACLxtB,OAAQ+sB,EACRnG,IAAK,mBACLF,KAAM33B,EAAUW,uBAElB,CACEq2B,IAAKuF,EAAcmC,KAAiBC,KACpC1tB,OAAQgtB,EACRpG,IAAK,cACLF,KAAM33B,EAAUQ,kBAElB,CACEw2B,IAAKuF,EAAcqC,KAAiBC,KACpC5tB,OAAQitB,EACRrG,IAAK,cACLF,KAAM33B,EAAUO,kBAElB,CACEy2B,IAAK8H,KACL7tB,OAAQktB,EACRtG,IAAK,eACLF,KAAM33B,EAAUS,mBAElB,CACEu2B,IAAKuF,EAAcwC,KAAiBC,KACpC/tB,OAAQmtB,EACRvG,IAAK,cACLF,KAAM33B,EAAUa,kBAElB,CACEm2B,IAAKiI,KACLhuB,OAAQotB,EACRxG,IAAK,aACLF,KAAM33B,EAAUY,mBAMpB,OAAQ8L,GACN,KAAKZ,EAAYC,GACf8xB,EAAe,EACf,MACF,KAAK/xB,EAAYE,GACf6xB,EAAe,EACf,MACF,QACEA,EAAe,EAInB,OACE5uB,EAAAC,EAAAC,cAACypB,GAAD,CAAoB/mB,WAAS,EAC3BC,UAAU,SACVC,QAAQ,aACRC,WAAW,UACXtF,WAAYA,GAEZuC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D/C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CAAM0J,QAAM,EAACnH,QAAS,KACpBxC,EAAAC,EAAAC,cAACutB,GAAD,CAAmBhwB,WAAYA,GAA/B,yBAINuC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACssB,GAAD,CACE3E,WAAYA,EACZK,OAAQ0G,EACR5G,WAAYvqB,IAAeZ,EAAYC,GAAK,SAAW,gBACvDmrB,kBAAmBl3B,EAAUyG,gCAAkC,iDAYtD,IAIb6I,EAJaqV,EAC2B3a,KAAKjD,MAAzC2F,EADSiY,EACTjY,WAAYL,EADHsY,EACGtY,oBACd6yB,EAAgBz0B,OAAO00B,YAAc9yB,EAAsBrM,EAAUoF,aAAe,GAG1F,OAAQsH,GACN,KAAKZ,EAAYC,GACfuD,EAAQ4vB,EAA8C,EAA/Bl/B,EAAUiG,qBACjC,MACF,KAAK6F,EAAYE,GACfsD,EAAQ4vB,EAA8C,EAA/Bl/B,EAAUkG,qBACjC,MACF,KAAK4F,EAAYG,GACfqD,EAAqB,GAAb4vB,EAAkD,EAA/Bl/B,EAAUmG,qBAAuB,EAG5DmJ,GAAS,IACT,MACF,QACEA,EAAqB,GAAb4vB,EAAkD,EAA/Bl/B,EAAUoG,qBAAuB,EAC5DkJ,GAAS,IAGb,OAAOA,SAzaaxE,GAAlB6wB,GACG/e,UAAY,CAIjBlQ,WAAYmQ,IAAUC,OAAOC,WAI7B1Q,oBAAqBwQ,IAAUI,KAAKF,WAIpCwf,YAAa1f,IAAUI,KAAKF,YAgajB4e,mMC7uBf,IAQeyD,GARYltB,KAAHmtB,uWCOxB,IAAMhf,GAAoBxT,YAAOI,IAAPJ,CAAHyyB,KAEJt/B,EAAUyD,aACZzD,EAAU6D,sBAEd,SAAAkD,GAAK,OAAIA,EAAMC,MAAMgB,eAC5B,SAAAyF,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,wBAAA2B,OACe1N,EAAU8D,sBADzB,sBAOAyc,GAAiB1T,YAAOI,IAAPJ,CAAH0yB,KAEDv/B,EAAUyD,aACZzD,EAAUkE,0BAEd,SAAA6C,GAAK,OAAIA,EAAMC,MAAMiB,mBAO5Bu3B,oLAaK,IACC9yB,EAAe1C,KAAKjD,MAApB2F,WACAgG,EAAU1I,KAAKjD,MAAMwjB,MAAMC,OAA3B9X,MACR,OACEzD,EAAAC,EAAAC,cAAA,OAAKmC,MAAO,CAAEoP,UAAW,OAAQC,WAAY,SAC3C1R,EAAAC,EAAAC,cAACswB,GAAD,CAAmB/yB,WAAYA,GAA/B,UACAuC,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,MAAO0sB,GAAoBzsB,UAAW,CAAED,UAC5C,SAAA1E,GAA8B,IAA3B8E,EAA2B9E,EAA3B8E,QAASC,EAAkB/E,EAAlB+E,MAAOC,EAAWhF,EAAXgF,KAClB,OAAIF,EAEA7D,EAAAC,EAAAC,cAACuwB,GAAD,qBAEK3sB,EAEL9D,EAAAC,EAAAC,cAACuwB,GAAD,sBAEiC,UAA5B1sB,EAAK2sB,cAAcrkB,KAExBrM,EAAAC,EAAAC,cAACywB,GAAA,EAAD,CAAU7vB,GAAI,CAAE3E,SAAQ,UAAAsC,OAAYgF,MAEH,gBAA5BM,EAAK2sB,cAAcrkB,KAExBrM,EAAAC,EAAAC,cAACywB,GAAA,EAAD,CAAU7vB,GAAI,CAAE3E,SAAQ,OAAAsC,OAASgF,MAIjCzD,EAAAC,EAAAC,cAACuwB,GAAD,2DAvCS50B,GAAnB00B,GACG5iB,UAAY,CAIjB2N,MAAO1N,IAAUK,OAAOH,YA2CbyiB,4ZCjFf,IAQeK,GARiB3tB,KAAH4tB,kwICyC7B,IAAMC,GAAelzB,YAAOmzB,IAAPnzB,CAAHozB,KAEA,SAAAl5B,GAAK,OAAIA,EAAMC,MAAMQ,uBAExB8d,KAAO4a,OAAS,GAIzBC,GAAetzB,YAAOmzB,IAAPnzB,CAAHuzB,KAIH9a,KAAO4a,OAAS,GAIzBrf,GAAgBhU,YAAOiU,IAAPjU,CAAHwzB,KAIb,SAAA5yB,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,sEAQAu0B,GAAgBzzB,YAAOiU,IAAPjU,CAAH0zB,KAMb,SAAAvyB,GAAA,OAAAA,EAAGtB,aACYZ,EAAYC,IAA3B,+HAUAy0B,GAAiB3zB,IAAOirB,IAAV2I,KAGd,SAAA5hB,GAAA,OAAAA,EAAGnS,aACYZ,EAAYC,IAA3B,wCASA20B,GAAoB7zB,YAAOI,IAAPJ,CAAH8zB,KAMjB,SAAA3hB,GAAA,OAAAA,EAAGtS,aACYZ,EAAYC,IAA3B,uCAOA60B,GAAkB/zB,YAAO6zB,GAAP7zB,CAAHg0B,KAIR,SAAA95B,GAAK,OAAIA,EAAMC,MAAMU,qBAC5B,SAAAqa,GAAA,OAAAA,EAAGrV,aACYZ,EAAYC,IAA3B,0EAaA+0B,GAAmBj0B,IAAOuY,IAAV2b,KAIF,SAAAh6B,GAAK,MAAI,aAAeA,EAAMC,MAAMU,qBAClD,SAAA4a,GAAA,OAAAA,EAAG5V,aACYZ,EAAYC,IAA3B,sCAOAi1B,GAAqBn0B,YAAO6zB,GAAP7zB,CAAHo0B,KAIX,SAAAl6B,GAAK,OAAIA,EAAMC,MAAMW,yBAC5B,SAAA+xB,GAAA,OAAAA,EAAGhtB,aACYZ,EAAYC,IAA3B,2EAQAm1B,GAAcr0B,YAAOs0B,IAAPt0B,CAAHu0B,KAQJ,SAAAr6B,GAAK,OAAIA,EAAMC,MAAMwC,iBACfxJ,EAAUyD,aACZzD,EAAU+D,sBACrB,SAAA81B,GAAA,IAAGntB,EAAHmtB,EAAGntB,WAAH,OACCA,IAAeZ,EAAYE,IAA3B,2KAAA0B,OAIc1N,EAAUmE,0BAJxB,cAMAuI,IAAeZ,EAAYC,IAA3B,4CAUDs1B,GAAax0B,YAAOy0B,IAAPz0B,CAAH00B,KAKGvhC,EAAUyD,aACZzD,EAAUkE,0BACb,SAAA6C,GAAK,OAAIA,EAAMC,MAAMwC,iBAC7B,SAAAwwB,GAAA,IAAGttB,EAAHstB,EAAGttB,WAAH,OACCA,IAAeZ,EAAYE,IAA3B,wBAAA0B,OACc1N,EAAUmE,0BADxB,cAGAuI,IAAeZ,EAAYC,IAA3B,mlBAmBDy1B,GAAiB30B,YAAO40B,IAAP50B,CAAH60B,KAGF,SAAA36B,GAAK,OAAIA,EAAM46B,YAAc3hC,EAAUwD,oBAAsB,YAOzEo+B,GAAuB/0B,YAAOg1B,KAAPh1B,CAAHi1B,KAEb,SAAA/6B,GAAK,OAAIA,EAAMC,MAAMyC,iBAErBzJ,EAAUkE,0BACTlE,EAAUkE,0BAMlB,SAAAg2B,GAAA,IAAGxtB,EAAHwtB,EAAGxtB,WAAH,OACCA,IAAeZ,EAAYE,IAA3B,oBAAA0B,OACU1N,EAAUmE,0BADpB,uBAAAuJ,OAEW1N,EAAUmE,0BAFrB,cAIAuI,IAAeZ,EAAYC,IAA3B,4JAUDoW,GAAmBtV,YAAOuV,IAAPvV,CAAHk1B,KAET,SAAAh7B,GAAK,OAAIA,EAAMC,MAAMS,uBAGd,SAAAV,GAAK,OAAIwb,gBAAKxb,EAAMC,MAAMkC,qBAAsBnC,EAAMC,MAAM2C,qBACjE,SAAA5C,GAAK,OAAIA,EAAMC,MAAMkC,sBAInB,SAAAnC,GAAK,OAAIA,EAAMC,MAAMS,wBAMhCu6B,GAAiBn1B,YAAOo1B,KAAPp1B,CAAHq1B,MAOdC,GAAmBt1B,YAAOg1B,KAAPh1B,CAAHu1B,KAIhB,SAAA5G,GAAA,OAAAA,EAAG9uB,aACYZ,EAAYC,IAA3B,0DAQAs2B,GAAkBx1B,YAAOy1B,KAAPz1B,CAAH01B,KAIf,SAAAC,GAAA,OAAAA,EAAG91B,aACYZ,EAAYC,IAA3B,0DAQA02B,GAAwB51B,YAAO,SAAA61B,GAAA,IAAMnhB,EAANthB,OAAAuhB,GAAA,QAAAvhB,CAAA,GAAAyiC,GAAA,OACnCzzB,EAAAC,EAAAC,cAACM,EAAA,EAADxP,OAAAwhB,OAAA,GAAqBF,EAArB,CAA4BG,QAAS,CAAEihB,MAAO,aADlB91B,CAAH+1B,KAId5iC,EAAUoF,aAAe,KACpB,SAAA2B,GAAK,OAAIA,EAAMC,MAAMsB,wBAIjCu6B,GAAeh2B,YAAO,SAAAi2B,GAAA,IAAMvhB,EAANthB,OAAAuhB,GAAA,QAAAvhB,CAAA,GAAA6iC,GAAA,OAC1B7zB,EAAAC,EAAAC,cAACM,EAAA,EAADxP,OAAAwhB,OAAA,GAAYF,EAAZ,CAAmBG,QAAS,CAAEihB,MAAO,aADlB91B,CAAHk2B,KAIL/iC,EAAUoF,aAAe,KACpB,SAAA2B,GAAK,OAAIA,EAAMC,MAAMsB,uBAE/B,SAAAvB,GAAK,OAAIA,EAAMC,MAAMG,OAAZ,aAAAuG,OAAkC3G,EAAMC,MAAMC,qBAAwB,QAIjF+7B,GAAgBn2B,YAAOo2B,IAAPp2B,CAAHq2B,KAED,SAAAn8B,GAAK,OAAIA,EAAMC,MAAMuB,qBAIjC46B,GAAqBt2B,YAAOu2B,IAAPv2B,CAAHw2B,MAElBC,GAAqBz2B,YAAO,SAAA02B,GAAA,IAAMhiB,EAANthB,OAAAuhB,GAAA,QAAAvhB,CAAA,GAAAsjC,GAAA,OAChCt0B,EAAAC,EAAAC,cAACM,EAAA,EAADxP,OAAAwhB,OAAA,GAAkBF,EAAlB,CAAyBG,QAAS,CAAE8hB,QAAS,eADpB32B,CAAH42B,MAIlBC,GAAiB72B,YAAO40B,IAAP50B,CAAH82B,KAIdR,GAGE,SAAAp8B,GAAK,OAAIA,EAAM68B,SACb78B,EAAMC,MAAMyB,4BACZ1B,EAAMC,MAAMwB,iBAGhB86B,GAGiBtjC,EAAUyD,aACZzD,EAAUoE,0BACR,SAAA2C,GAAK,OAAIA,EAAM68B,SAAW,IAAM,KAE7C,SAAA78B,GAAK,OAAIA,EAAM68B,SACb78B,EAAMC,MAAMyB,4BACZ1B,EAAMC,MAAM0B,kBAoClBm7B,eAoCJ,SAAAA,IAAc,IAAA/5B,EAAA,OAAA7J,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAA65B,IACZ/5B,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAA4jC,GAAA15B,KAAAH,QAEKqH,MAAQ,CACXyyB,YAAY,EACZC,YAAa,IAGfj6B,EAAKk6B,cAAgBC,IAAMC,YAE3Bp6B,EAAKq6B,2BAA6B,EAGlCr6B,EAAKs6B,kBAAoBt6B,EAAKs6B,kBAAkB/5B,KAAvBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IACzBA,EAAKu6B,iBAAmBv6B,EAAKu6B,iBAAiBh6B,KAAtBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IACxBA,EAAKw6B,2BAA6Bx6B,EAAKw6B,2BAA2Bj6B,KAAhCpK,OAAAqK,EAAA,EAAArK,CAAA6J,IAClCA,EAAKy6B,sBAAwBz6B,EAAKy6B,sBAAsBl6B,KAA3BpK,OAAAqK,EAAA,EAAArK,CAAA6J,IAC7BA,EAAK06B,mBAAqB16B,EAAK06B,mBAAmBn6B,KAAxBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IAC1BA,EAAK26B,cAAgB36B,EAAK26B,cAAcp6B,KAAnBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IAlBTA,wEA0BL,IACCg6B,EAAe95B,KAAKqH,MAApByyB,WACR,OACE70B,EAAAC,EAAAC,cAACgV,EAAA,SAAD,KAEElV,EAAAC,EAAAC,cAAA,OAAKwgB,IAAK3lB,KAAKg6B,eACb/0B,EAAAC,EAAAC,cAACM,EAAA,EAAD,OAEFR,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+B,GAAIsyB,EAAYryB,QAAS,IAAKwW,cAAY,EAACC,eAAa,GAC5DjZ,EAAAC,EAAAC,cAACgxB,GAAD,CAAc/wB,UAAW,GACtBpF,KAAK06B,4BAGVz1B,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+B,IAAKsyB,EAAYryB,QAAS,IAAKwW,cAAY,EAACC,eAAa,GAC7DjZ,EAAAC,EAAAC,cAAC4wB,GAAD,CAAc3wB,UAAW,GACtBpF,KAAK26B,6BAGT36B,KAAK46B,yDAUV3kC,OAAA8K,EAAA,EAAA9K,QAAAiK,EAAA,EAAAjK,CAAA4jC,EAAA74B,WAAA,oBAAAhB,MAAAG,KAAAH,MAGIA,KAAKjD,MAAM89B,oBACb76B,KAAKjD,MAAM89B,mBAAmB76B,KAAKg6B,cAAcc,QAAQC,2DAQ3D9kC,OAAA8K,EAAA,EAAA9K,QAAAiK,EAAA,EAAAjK,CAAA4jC,EAAA74B,WAAA,qBAAAhB,MAAAG,KAAAH,MAGIA,KAAKjD,MAAM89B,oBACb76B,KAAKjD,MAAM89B,mBAAmB76B,KAAKg6B,cAAcc,QAAQC,cAIvDt4B,KAAyBzC,KAAKjD,MAAMi+B,oBACtCh7B,KAAKjD,MAAMk+B,gFAQW,IAAA/0B,EAAAlG,KAClB0C,EAAaN,IACnB,OACE6C,EAAAC,EAAAC,cAACmxB,GAAD,CAAe4E,QAAQ,QAAQx4B,WAAYA,GACzCuC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,aAAauE,KAAK,UACnFtH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,EAAClF,MAAO,CAAE6zB,SAAU,MAC5Bl2B,EAAAC,EAAAC,cAACi2B,GAAA,EAAD,CACEC,cAAer7B,KAAKs6B,2BACpBjgB,SAAUra,KAAKu6B,sBACfe,aAAct7B,KAAKqH,MAAM0yB,aAExB,SAAAwB,GAAA,IACCC,EADDD,EACCC,cACAC,EAFDF,EAECE,aACAC,EAHDH,EAGCG,aACAC,EAJDJ,EAICI,OACAC,EALDL,EAKCK,WACAC,EANDN,EAMCM,iBAND,OAQC52B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAM22B,SAAU51B,EAAKs0B,oBACnBv1B,EAAAC,EAAAC,cAAC+xB,GAADjhC,OAAAwhB,OAAA,GACM+jB,EAAc,CAChBO,WAAW,EACXC,kBAAkB,EAClBC,WAAW,EACXC,YAAa,8CALjB,CAOEx5B,WAAYA,MAGhBuC,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACEC,MAAOmtB,GACPltB,UAAW,CAAED,MAAOkzB,EAAYhzB,MAAO1C,EAAKi0B,6BAE3C,SAAAgC,GAA8B,IAA3BrzB,EAA2BqzB,EAA3BrzB,QAASC,EAAkBozB,EAAlBpzB,MAAOC,EAAWmzB,EAAXnzB,KAClB,OAAIF,GAAWC,IAAUC,EAAKozB,qBAAuBT,EAC5C12B,EAAAC,EAAAC,cAACkyB,GAAD,CAAY30B,WAAYA,IAE/BuC,EAAAC,EAAAC,cAACkyB,GAADphC,OAAAwhB,OAAA,GAAgBikB,IAAhB,CAAgCh5B,WAAYA,IACzCsG,EAAKozB,mBAAmBx1B,MAAMvB,IAAI,SAACmH,EAAMjH,GAAP,OACjCN,EAAAC,EAAAC,cAACqyB,GAADvhC,OAAAwhB,OAAA,CACE4kB,gBAAc,EAGd1E,YAAakE,IAAqBt2B,EAAQ,EAAI,GAC1Ck2B,EAAa,CACfj2B,IAAKgH,EACLjH,QACAiH,UAGFvH,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACyyB,GAAD,CAAsBl1B,WAAYA,KAEnC8J,YAWrBvH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+B,IAAI,EAAMC,QAAS,KACvBxC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYuT,QAAShZ,KAAKq6B,kBACxBp1B,EAAAC,EAAAC,cAACkzB,GAAD,CAAiB31B,WAAYA,4DAezC,IAAMA,EAAaN,IACnB,OACE6C,EAAAC,EAAAC,cAACm3B,GAAD,CAAe55B,WAAYA,GACzBuC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACG,WAAW,SAASuE,KAAK,UACvCtH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACPxM,KAAKu8B,iBAEPv8B,KAAKw8B,cACNv3B,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACG,WAAW,SAASD,QAAQ,WAAWwE,KAAK,UAC1DtH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACPxM,KAAKy8B,8DAaF,IAAA73B,EACwD5E,KAAKjD,MAAnEk+B,EADMr2B,EACNq2B,4BAA6ByB,EADvB93B,EACuB83B,6BACrC,OACEz3B,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+B,IAAI,EAAMC,QAAS,KACvBxC,EAAAC,EAAAC,cAACw3B,GAAD,CACE3jB,QACEvW,IAAwBi6B,EAA+BzB,GAGzDh2B,EAAAC,EAAAC,cAAC6yB,GAAD,8CAYN,IAAMt1B,EAAaN,IACnB,OACE6C,EAAAC,EAAAC,cAACf,EAAA,EAAD,CACEkD,MAAO,CAAEs1B,eAAgB,QACzB72B,GAAG,KAEHd,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoC,WAAS,EAACG,WAAW,SAASD,QAAQ,aAAawE,KAAK,UAC5DtH,EAAAC,EAAAC,cAAC2Q,EAAA5Q,EAAD,CAAYuC,QAAS,KACnBxC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACqxB,GAAD,CACExJ,IAAK6F,KACL5rB,OAAQjH,KAAK68B,uBACbhP,IAAI,OACJnrB,WAAYA,KAIhBuC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACyxB,GAAD,CAAiBl0B,WAAYA,GAA7B,UAEFuC,EAAAC,EAAAC,cAAC23B,GAAA53B,EAAD,CAAYuC,QAAS,KACnBxC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAAC2xB,GAAD,CAAkBp0B,WAAYA,MAGlCuC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAAC6xB,GAAD,CAAoBt0B,WAAYA,GAAhC,+DAcV,OhDtmBG,SAAmCA,GACxC,OAAQA,GACN,KAAKZ,EAAYC,GACf,OAAOtB,OAAO8B,WAAW,eAAiBvM,EAAU2E,kBAAoB,OAAO6H,QACjF,KAAKV,EAAYE,GACf,OAAOvB,OAAO8B,WAAW,eAAiBvM,EAAU6E,kBAAoB,OAAO2H,QACjF,KAAKV,EAAYG,GACf,OAAOxB,OAAO8B,WAAW,eAAiBvM,EAAU+E,kBAAoB,OAAOyH,QACjF,KAAKV,EAAYI,GACf,OAAOzB,OAAO8B,WAAW,eAAiBvM,EAAUiF,kBAAoB,OAAOuH,QACjF,KAAKV,EAAYK,GACjB,QACE,OAAO1B,OAAO8B,WAAW,eAAiBvM,EAAU+mC,kBAAoB,OAAOv6B,SgD0lB7Ew6B,CAA0Bl7B,EAAYC,IACjC,KAEA,uCAYT,OAAIU,IAEAwC,EAAAC,EAAAC,cAAC0zB,GAAD,CAAcqC,QAAQ,aAAa+B,KAAMj9B,KAAKjD,MAAMsF,qBACjDrC,KAAKk9B,oBAMRj4B,EAAAC,EAAAC,cAACszB,GAAD,CACEwE,KAAMj9B,KAAKjD,MAAMi+B,mBACjBmC,OAAQn9B,KAAKjD,MAAMk+B,4BACnBmC,QAASp9B,KAAKjD,MAAMk+B,6BAEpBh2B,EAAAC,EAAAC,cAAA,OAAK6T,QAAShZ,KAAKjD,MAAMk+B,6BACtBj7B,KAAKk9B,gEAcd,OACEj4B,EAAAC,EAAAC,cAACgV,EAAA,SAAD,KAEElV,EAAAC,EAAAC,cAACM,EAAA,EAAD,MACAR,EAAAC,EAAAC,cAACM,EAAA,EAAD,KAKER,EAAAC,EAAAC,cAACu0B,GAAD,CAAgB2D,QAAM,EAACC,UAAWl5B,IAAM2B,GAAG,IAAI6zB,SAAU55B,KAAKy6B,cAAc,MAC1Ex1B,EAAAC,EAAAC,cAACg0B,GAAD,KACEl0B,EAAAC,EAAAC,cAACo4B,GAAAr4B,EAAD,OAEFD,EAAAC,EAAAC,cAACm0B,GAAD,CAAoBE,QAAQ,OAAOI,SAAU55B,KAAKy6B,cAAc,QAElEx1B,EAAAC,EAAAC,cAAC6zB,GAAD,MACA/zB,EAAAC,EAAAC,cAACu0B,GAAD,CAAgB2D,QAAM,EAACC,UAAWl5B,IAAM2B,GAAG,UAAU6zB,SAAU55B,KAAKy6B,cAAc,YAChFx1B,EAAAC,EAAAC,cAACg0B,GAAD,KACEl0B,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAAA,QAAMsH,EAAGzW,EAAU2F,wBAGvBsJ,EAAAC,EAAAC,cAACm0B,GAAD,CAAoBE,QAAQ,SAASI,SAAU55B,KAAKy6B,cAAc,cAEpEx1B,EAAAC,EAAAC,cAACu0B,GAAD,CAAgB2D,QAAM,EAACC,UAAWl5B,IAAM2B,GAAG,OAAO6zB,SAAU55B,KAAKy6B,cAAc,SAC7Ex1B,EAAAC,EAAAC,cAACg0B,GAAD,KACEl0B,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAAA,QAAMsH,EAAGzW,EAAUwF,sBAGvByJ,EAAAC,EAAAC,cAACm0B,GAAD,CAAoBE,QAAQ,kBAE9Bv0B,EAAAC,EAAAC,cAACu0B,GAAD,CAAgB2D,QAAM,EAACC,UAAWl5B,IAAM2B,GAAG,YAAY6zB,SAAU55B,KAAKy6B,cAAc,cAClFx1B,EAAAC,EAAAC,cAACg0B,GAAD,KACEl0B,EAAAC,EAAAC,cAACq4B,GAAAt4B,EAAD,OAEFD,EAAAC,EAAAC,cAACm0B,GAAD,CAAoBE,QAAQ,cAE9Bv0B,EAAAC,EAAAC,cAACu0B,GAAD,CAAgB2D,QAAM,EAACC,UAAWl5B,IAAM2B,GAAG,aAAa6zB,SAAU55B,KAAKy6B,cAAc,eACnFx1B,EAAAC,EAAAC,cAACg0B,GAAD,KACEl0B,EAAAC,EAAAC,cAACs4B,GAAAv4B,EAAD,OAEFD,EAAAC,EAAAC,cAACm0B,GAAD,CAAoBE,QAAQ,eAE9Bv0B,EAAAC,EAAAC,cAAC6zB,GAAD,MACA/zB,EAAAC,EAAAC,cAACu0B,GAAD,CAAgB2D,QAAM,EAACC,UAAWl5B,IAAM2B,GAAG,SAAS6zB,SAAU55B,KAAKy6B,cAAc,WAC/Ex1B,EAAAC,EAAAC,cAACg0B,GAAD,KACEl0B,EAAAC,EAAAC,cAACu4B,GAAAx4B,EAAD,OAEFD,EAAAC,EAAAC,cAACm0B,GAAD,CAAoBE,QAAQ,uDAapC,IAAM92B,EAAaN,IACnB,OACE6C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+B,IAAI,EAAMC,QAAS,KACvBxC,EAAAC,EAAAC,cAACw3B,GAAD,CAAkB3jB,QAAShZ,KAAKo6B,mBAC9Bn1B,EAAAC,EAAAC,cAACgzB,GAAD,CAAkBz1B,WAAYA,kDAWpC1C,KAAKoW,SAAS,CACZ0jB,YAAY,+CASd95B,KAAKoW,SAAS,CACZ0jB,YAAY,uDASW6D,GAAS,IAC1B/B,EAAe+B,EAAf/B,WACJA,GACF57B,KAAKoW,SAAS,CACZ2jB,YAAa6B,kDAUGN,GACpBt7B,KAAK49B,cAActC,8CAQFriB,GACjBA,EAAM4kB,iBACN79B,KAAK49B,cAAc59B,KAAKqH,MAAM0yB,mDAQlBA,GACZ/5B,KAAKoW,SAAS,CACZ0jB,YAAY,EACZC,YAAa,KAEX/5B,KAAKjD,MAAM+gC,WACb99B,KAAKjD,MAAM+gC,UAAUC,QAAQ1X,KAA7B,WAAA3iB,OAA6Cq2B,0CASnCiE,GACZ,OAAOh+B,KAAKjD,MAAMoE,SAASC,WAAa48B,SA7drBn+B,GAAjBg6B,GACGjnB,UAAY,CAIjBioB,mBAAoBhoB,IAAUorB,KAI9BvB,6BAA8B7pB,IAAUorB,KAAKlrB,WAI7CkoB,4BAA6BpoB,IAAUorB,KAAKlrB,WAI5C1Q,oBAAqBwQ,IAAUI,KAAKF,WAIpCioB,mBAAoBnoB,IAAUI,KAAKF,WAInC5R,SAAU0R,IAAUK,OAAOH,WAI3B+qB,UAAWjrB,IAAUK,QAocVgrB,oBAAWrE,i1DC71B1B,IAAMsE,GAAgBt7B,YAAOiU,IAAPjU,CAAHu7B,KAKLpoC,EAAUqF,cAAgB,KAItB,SAAA0B,GAAK,OAAIA,EAAMC,MAAMsC,uBAC1B,SAAAvC,GAAK,OAAIA,EAAMC,MAAMuC,sBAI5B8+B,GAAex7B,YAAO6I,IAAP7I,CAAHy7B,MAMZC,GAAgB17B,YAAOw7B,GAAPx7B,CAAH27B,KAEAxoC,EAAUuF,wBAA0B,KACjD,SAAAkI,GAAA,OAAAA,EAAGf,aACYZ,EAAYC,IAA3B,0BAAA2B,OACiB1N,EAAUsF,iBAAmB,KAD9C,eAOAmjC,GAAiB57B,YAAOw7B,GAAPx7B,CAAH67B,KAEA1oC,EAAUuF,wBAA0B,KAClD,SAAAyI,GAAA,OAAAA,EAAGtB,aACYZ,EAAYC,IAA3B,2BAAA2B,OACkB1N,EAAUsF,iBAAmB,KAD/C,eAOAqjC,GAAmB97B,YAAOI,IAAPJ,CAAH+7B,KAEH5oC,EAAUyD,cAKvBolC,GAAUh8B,IAAOqC,EAAV45B,KAEA,SAAA/hC,GAAK,OAAIA,EAAMC,MAAMuC,sBAQ5Bw/B,GAAwBl8B,YAAO6I,IAAP7I,CAAHm8B,KAGrB,SAAAnqB,GAAA,OAAAA,EAAGnS,aACYZ,EAAYC,IAA3B,uCAOAk9B,GAAoBp8B,YAAOuV,IAAPvV,CAAHq8B,KAGH,SAAAniC,GAAK,OAAIwb,gBAAKxb,EAAMC,MAAMkC,qBAAsBnC,EAAMC,MAAM2C,qBACjE,SAAA5C,GAAK,OAAIA,EAAMC,MAAMkC,uBAU9BigC,GAAct8B,YAAOu8B,IAAPv8B,CAAHw8B,MAMXC,GAAgBz8B,YAAO08B,IAAP18B,CAAH28B,KAEN,SAAAziC,GAAK,OAAIA,EAAMC,MAAMuC,qBAEd,SAAAxC,GAAK,OAAIwb,gBAAKxb,EAAMC,MAAMkC,qBAAsBnC,EAAMC,MAAM2C,qBACjE,SAAA5C,GAAK,OAAIA,EAAMC,MAAMkC,sBAInB,SAAAnC,GAAK,OAAIA,EAAMC,MAAMuC,sBAMhCkgC,GAAe58B,YAAOgJ,IAAPhJ,CAAH68B,MAUZC,+LAqBF1pC,OAAA8K,EAAA,EAAA9K,QAAAiK,EAAA,EAAAjK,CAAA0pC,EAAA3+B,WAAA,oBAAAhB,MAAAG,KAAAH,MAEA4/B,kBAAQ5pC,EAAUK,qBAAsBmQ,SAASq5B,cAAc,0DAS/D,IAAMn9B,EAAaN,IACnB,OACE6C,EAAAC,EAAAC,cAACg5B,GAAD,KACEl5B,EAAAC,EAAAC,cAACo5B,GAAD,CACE12B,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,SACXtF,WAAYA,GAEZuC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACw5B,GAAD,CAAkBztB,MAAM,WACrBlR,KAAK8/B,sBAIZ76B,EAAAC,EAAAC,cAACk5B,GAAD,CAAcx2B,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,UACrE/C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACw5B,GAAD,CAAkBztB,MAAM,WACrBlR,KAAK+/B,qBAGyB,MAAjC//B,KAAKjD,MAAMoE,SAASC,UACpB6D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM+G,MAAI,GACRvH,EAAAC,EAAAC,cAACw5B,GAAD,CAAkBztB,MAAM,WACrB,IACAlR,KAAKggC,2BACN/6B,EAAAC,EAAAC,cAAC05B,GAAD,CAASlR,KAAM33B,EAAUQ,iBAAkBuoB,OAAO,SAAS6O,IAAI,uBAC5D5tB,KAAKigC,qBAEP,OAKTh7B,EAAAC,EAAAC,cAACs5B,GAAD,CACE52B,WAAS,EAACC,UAAU,MACpBC,QAAQ,WACRC,WAAW,SACXuE,KAAK,SACL7J,WAAYA,GAEZuC,EAAAC,EAAAC,cAAC45B,GAAD,CAAuBvyB,MAAI,EAAC9J,WAAYA,GACtCuC,EAAAC,EAAAC,cAAC85B,GAAD,CACE/tB,MAAM,UACNyc,KAAM33B,EAAUsB,gCAChBynB,OAAO,SACP6O,IAAI,uBAEJ3oB,EAAAC,EAAAC,cAACg6B,GAAD,CAAa9yB,UAAU,oBAG3BpH,EAAAC,EAAAC,cAAC45B,GAAD,CAAuBvyB,MAAI,EAAC9J,WAAYA,GACtCuC,EAAAC,EAAAC,cAAC85B,GAAD,CACE/tB,MAAM,UACNyc,KAAM33B,EAAUiB,uCAChB8nB,OAAO,SACP6O,IAAI,uBAEJ3oB,EAAAC,EAAAC,cAACg6B,GAAD,CAAa9yB,UAAU,mBAG3BpH,EAAAC,EAAAC,cAAC45B,GAAD,CAAuBvyB,MAAI,EAAC9J,WAAYA,GACtCuC,EAAAC,EAAAC,cAACm6B,GAAD,CACEpuB,MAAM,UACNgvB,QAASlgC,KAAKjD,MAAMw1B,YACpB5a,KACE1S,EAAAC,EAAAC,cAACs6B,GAAD,KACEx6B,EAAAC,EAAAC,cAAA,QAAMsH,EAAGzW,EAAU8F,6BAGvBqkC,YACEl7B,EAAAC,EAAAC,cAACs6B,GAAD,KACEx6B,EAAAC,EAAAC,cAAA,QAAMsH,EAAGzW,EAAU+F,4BAGvBse,SAAUra,KAAKjD,MAAMqjC,kEAe/B,OADmBh+B,KAEjB,KAAKN,EAAYC,GACf,MAAO,8BACT,KAAKD,EAAYE,GACf,MAAO,2CACT,QACE,MAAO,6GAWX,OADmBI,KAEjB,KAAKN,EAAYC,GACf,MAAO,mBACT,KAAKD,EAAYE,GACf,MAAO,sBACT,QACE,MAAO,kFAWX,OADmBI,KAEjB,KAAKN,EAAYC,GACf,MAAO,yBACT,QACE,MAAO,0FAWX,OADmBK,KAEjB,KAAKN,EAAYC,GACf,MAAO,aACT,QACE,MAAO,yCAhLMlC,GAAf8/B,GACG/sB,UAAY,CAIjB2f,YAAa1f,IAAUI,KAAKF,WAI5BqtB,kBAAmBvtB,IAAUorB,KAAKlrB,WAIlC5R,SAAU0R,IAAUK,OAAOH,YAwKhBmrB,oBAAWyB,sVCxR1B,IAAMU,GAAW,IAAIC,IAAS,CAC5BC,IAAKvqC,EAAUG,kBAIXqqC,GAAS,IAAIC,IAAc,CAC/BF,IAAKvqC,EAAUI,uBACf68B,QAAS,CACPyN,WAAW,KAMT56B,GAAO66B,YAEX,SAAAl9B,GAAe,IAAZiF,EAAYjF,EAAZiF,MAAYk4B,EACeC,YAAkBn4B,GAAtCo4B,EADKF,EACLE,KAAMC,EADDH,EACCG,UACd,MAAgB,wBAATD,GAAgD,iBAAdC,GAE3CP,GACAH,IAIIW,GAAe,IAAIC,IAAa,CACpCn7B,KAAMA,GACNo7B,MAAO,IAAIC,IAAc,CAKvBC,iBAAkB,SAAAluB,GAAM,OAAIA,EAAOrE,IAAM,MAKzCwyB,aAAa,MASjB3/B,IAAQ4/B,WAAWtrC,EAAU2G,8BAC7B+E,IAAQC,IAAI,CAAE4/B,aAAa,IAE3B,IAAMC,GAAa3+B,IAAOuY,IAAVqmB,KAEG,SAAA1kC,GAAK,OAAIA,EAAMsF,oBAAsBrM,EAAUoF,aAAe,KAAO,OACtE,SAAA2B,GAAK,MACjB,gBACCA,EAAMsF,oBAAsB8R,WAASutB,eAAiBvtB,WAASwtB,eAChE,MACAttB,SAAOC,YAIPstB,GAAc/+B,YAAO6I,IAAP7I,CAAHg/B,KAGc,SAAA9kC,GAAK,OAAIA,EAAM+kC,aAAe,OA0N9CC,eA/Mb,SAAAA,EAAYhlC,GAAO,IAAA+C,EAAA,OAAA7J,OAAA8J,EAAA,EAAA9J,CAAA+J,KAAA+hC,IACjBjiC,EAAA7J,OAAAgK,EAAA,EAAAhK,CAAA+J,KAAA/J,OAAAiK,EAAA,EAAAjK,CAAA8rC,GAAA5hC,KAAAH,KAAMjD,KACDsK,MAAQ,CACXy2B,UAAW,KACXkE,aAAc,EACdC,wBAAwB,EACxBjH,oBAAoB,EACpBzI,aAAa,GAIfzyB,EAAKoiC,aAAepiC,EAAKoiC,aAAa7hC,KAAlBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IACpBA,EAAK+6B,mBAAqB/6B,EAAK+6B,mBAAmBx6B,KAAxBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IAC1BA,EAAK48B,6BAA+B58B,EAAK48B,6BAA6Br8B,KAAlCpK,OAAAqK,EAAA,EAAArK,CAAA6J,IACpCA,EAAKm7B,4BAA8Bn7B,EAAKm7B,4BAA4B56B,KAAjCpK,OAAAqK,EAAA,EAAArK,CAAA6J,IACnCA,EAAKsgC,kBAAoBtgC,EAAKsgC,kBAAkB//B,KAAvBpK,OAAAqK,EAAA,EAAArK,CAAA6J,IAfRA,mFAwBjB8/B,kBACE5pC,EAAUM,qBACVkQ,SAASq5B,cAAc,0DASlB,IAAA5iB,EAOHjd,KAAKqH,MALP26B,EAFK/kB,EAEL+kB,aACAC,EAHKhlB,EAGLglB,uBACAjH,EAJK/d,EAIL+d,mBACAzI,EALKtV,EAKLsV,YACAuL,EANK7gB,EAML6gB,UAGIz7B,EAAsB4/B,GAA0Bx/B,IAChDC,EAAaN,EAAcC,GAEjC,OACE4C,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAgB05B,OAAQnB,IACtB/7B,EAAAC,EAAAC,cAACvI,EAAD,CAAaI,MAAOgD,KAAKoiC,aACzBn9B,EAAAC,EAAAC,cAACk9B,EAAA,EAAD,CAAerlC,MAAOgD,KAAKoiC,YACzBn9B,EAAAC,EAAAC,cAACm9B,EAAA,EAAD,CAAY3c,IAAK3lB,KAAKkiC,cACpBj9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACo9B,GAAD,CACE1H,mBAAoB76B,KAAK66B,mBACzB6B,6BAA8B18B,KAAK08B,6BACnCzB,4BAA6Bj7B,KAAKi7B,4BAClC54B,oBAAqBA,EACrB24B,mBAAoBA,EACpB8C,UAAWA,IAEb74B,EAAAC,EAAAC,cAACq8B,GAAD,CACEn/B,oBAAqBA,EACrB24B,mBAAoBA,EAIpBwH,gBAAiB,kBAAM/hC,OAAOgiC,cAAc,IAAIC,MAAM,aAEtDz9B,EAAAC,EAAAC,cAACy8B,GAAD,CACE/5B,WAAS,EACTC,UAAU,SACVC,QAAQ,gBACR+5B,aAAcE,GAEd/8B,EAAAC,EAAAC,cAACw9B,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,IACXtW,OAAQ,SAACxvB,GAAD,OACNkI,EAAAC,EAAAC,cAAC29B,GAAD7sC,OAAAwhB,OAAA,GACM1a,EADN,CAEE2F,WAAYA,QAIlBuC,EAAAC,EAAAC,cAACw9B,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,UACXtW,OAAQ,SAACxvB,GAAD,OACNkI,EAAAC,EAAAC,cAAC49B,GAAD9sC,OAAAwhB,OAAA,GACM1a,EADN,CAEE2F,WAAYA,QAIlBuC,EAAAC,EAAAC,cAACw9B,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,OACXtW,OAAQ,SAACxvB,GAAD,OACNkI,EAAAC,EAAAC,cAAC69B,GAAD/sC,OAAAwhB,OAAA,GACM1a,EADN,CAEE2F,WAAYA,QAIlBuC,EAAAC,EAAAC,cAACw9B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYvF,UAAW7mB,KACzCxR,EAAAC,EAAAC,cAACw9B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAavF,UAAW9a,KAC1Cvd,EAAAC,EAAAC,cAACw9B,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,SACXtW,OAAQ,SAACxvB,GAAD,OACNkI,EAAAC,EAAAC,cAAC89B,GAADhtC,OAAAwhB,OAAA,GACM1a,EADN,CAEE2F,WAAYA,EACZL,oBAAqBA,EACrBkwB,YAAaA,QAInBttB,EAAAC,EAAAC,cAACw9B,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,iBACXtW,OAAQ,SAACxvB,GAAD,OACNkI,EAAAC,EAAAC,cAAC+9B,GAADjtC,OAAAwhB,OAAA,GACM1a,EADN,CAEE2F,WAAYA,QAIlBuC,EAAAC,EAAAC,cAACw9B,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,YACXtW,OAAQ,SAACxvB,GAAD,OACNkI,EAAAC,EAAAC,cAACg+B,GAADltC,OAAAwhB,OAAA,GACM1a,EADN,CAEE2F,WAAYA,QAIlBuC,EAAAC,EAAAC,cAACw9B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBvF,UAAW9H,KAC9CvwB,EAAAC,EAAAC,cAACi+B,GAAD,CACEhD,kBAAmBpgC,KAAKogC,kBACxB7N,YAAaA,+CAelB1M,GACX7lB,KAAKoW,SAAS,CAAE0nB,UAAWjY,+CAOV5e,GACjBjH,KAAKoW,SAAS,CACZ4rB,aAAc/6B,yDAQWo8B,GAC3BrjC,KAAKoW,SAAS,CACZ6rB,wBAAyBjiC,KAAKqH,MAAM46B,6EAQZoB,GAC1BrjC,KAAKoW,SAAS,CACZ4kB,oBAAqBh7B,KAAKqH,MAAM2zB,+DAUlB/hB,EAAOinB,GACvBlgC,KAAKoW,SAAS,CACZmc,YAAa2N,uCAUf,OAAOlgC,KAAKqH,MAAMkrB,YAAc3yB,EAAY1C,SAhN9B2D,aCpGlByiC,IAAS/W,OACLtnB,EAAAC,EAAAC,cAACo+B,GAAD,MACJ/8B,SAASg9B,eAAe","file":"static/js/main.76f54c21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner-x-horizon.78a73653.png\";","module.exports = __webpack_public_path__ + \"static/media/open-block-explorer-logo-large.b8da814f.png\";","module.exports = __webpack_public_path__ + \"static/media/apollo-logo-dark-mode.ff872a8a.png\";","module.exports = __webpack_public_path__ + \"static/media/apollo-logo-light-mode.d4f0ec1b.png\";","module.exports = __webpack_public_path__ + \"static/media/github-octocat.c833384a.png\";","module.exports = __webpack_public_path__ + \"static/media/graphql-logo.8d2ae7fd.png\";","module.exports = __webpack_public_path__ + \"static/media/material-ui-logo.1d6a085f.png\";","module.exports = __webpack_public_path__ + \"static/media/mysql-logo.8135feff.png\";","module.exports = __webpack_public_path__ + \"static/media/nomics-logo-dark-mode.a32c7cc9.png\";","module.exports = __webpack_public_path__ + \"static/media/nomics-logo-light-mode.6f5390ee.png\";","module.exports = __webpack_public_path__ + \"static/media/prisma-logo-dark-mode.590aa2e2.png\";","module.exports = __webpack_public_path__ + \"static/media/prisma-logo-light-mode.9d9ad809.png\";","module.exports = __webpack_public_path__ + \"static/media/react-logo-text.24432c06.png\";","module.exports = __webpack_public_path__ + \"static/media/styled-components-logo-dark-mode.3b3add6f.png\";","module.exports = __webpack_public_path__ + \"static/media/styled-components-logo-light-mode.33f922e4.png\";","module.exports = __webpack_public_path__ + \"static/media/open-block-explorer-logo.2b07dcdf.png\";","/**\n * @file constants\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nconst Constants = Object.freeze({\n  // Development server URIs\n  //URI_SERVER_HTTP: 'http://localhost:4000',\n  //URI_SERVER_WEB_SOCKETS: 'ws://localhost:4000',\n  // Production server URIs\n  URI_SERVER_HTTP: 'https://openblockexplorer-server.herokuapp.com/',\n  URI_SERVER_WEB_SOCKETS: 'wss://openblockexplorer-server.herokuapp.com/',\n  URI_CDN_FONT_AWESOME:\n    'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css',\n  // Remove any fonts that aren't used!!!\n  URI_CDN_GOOGLE_FONTS:\n    'https://fonts.googleapis.com/css?family=Istok+Web:400|Muli:200,300,400,500',\n  URI_ABOUT_APOLLO: 'https://www.apollographql.com/',\n  URI_ABOUT_NOMICS: 'https://p.nomics.com/cryptocurrency-bitcoin-api',\n  URI_ABOUT_GRAPHQL: 'https://graphql.org/',\n  URI_ABOUT_GRAPHQL_YOGA: 'https://github.com/prisma/graphql-yoga',\n  URI_ABOUT_MATERIAL_UI: 'https://material-ui.com/',\n  URI_ABOUT_MY_SQL: 'https://www.mysql.com/',\n  URI_ABOUT_PRISMA: 'https://www.prisma.io/',\n  URI_ABOUT_REACT: 'https://reactjs.org/',\n  URI_ABOUT_STYLED_COMPONENTS: 'https://www.styled-components.com/',\n  URI_GITHUB_CONTRIBUTORS: 'https://github.com/orgs/openblockexplorer/people',\n  URI_GITHUB_OPEN_BLOCK_EXPLORER_PROJECT: 'https://github.com/openblockexplorer/openblockexplorer',\n  URI_GITHUB_OPEN_BLOCK_EXPLORER_WIKI: 'https://github.com/openblockexplorer/openblockexplorer/wiki',\n  URI_GITHUB_DYLAN: 'https://github.com/dylancm4',\n  URI_GITHUB_MIT_LICENSE: 'https://github.com/openblockexplorer/openblockexplorer/blob/master/LICENSE',\n  URI_GITHUB_TODD: 'https://github.com/toddkitchens',\n  URI_TWITTER_OPEN_BLOCK_EXPLORER: 'https://twitter.com/dylancm4',\n  // Remove colors that are not used!!!\n  COLOR_DFINITY_BLACK: 'rgb(41, 42, 46)', // from dfinity.org/press\n  COLOR_DFINITY_BLACK_LIGHTER: 'rgb(73, 75, 82)', //  COLOR_DFINITY_BLACK scaled lighter\n  COLOR_DFINITY_BLACK_DARKER: 'rgb(27, 28, 31)', // COLOR_DFINITY_BLACK scaled darker\n  COLOR_DFINITY_LIGHT_ORANGE: 'rgb(251, 176, 59)', // from dfinity.org style guide\n  COLOR_DFINITY_DARK_ORANGE: 'rgb(241, 90, 36)', // from dfinity.org style guide\n  COLOR_DFINITY_BLUE_400: '#29ABE2', // DFINITY logo blue\n  COLOR_DFINITY_BLUE_500: '#009DDD',\n  COLOR_DFINITY_BLUE_600: '#0090CF',\n  COLOR_DFINITY_BLUE_700: '#007DBC',\n  COLOR_DFINITY_BLUE_800: '#006DA8',\n  COLOR_DFINITY_BLUE_900: '#004E88',\n  COLOR_TEXT_LIGHT: '#FFFFFF', // This should be removed, replaced with COLOR_DARK_TEXT!!!\n  COLOR_DARK_TEXT: '#FFFFFF',\n  COLOR_DARK_TEXT_FADED: 'rgb(190, 191, 192)', // rgba(255, 255, 255, 0.7) on COLOR_DFINITY_BLACK, matches Material-UI Tab opacity\n  COLOR_TEXT_DARKER: 'rgb(148, 149, 151)', // rgba(255, 255, 255, 0.5) on COLOR_DFINITY_BLACK\n  COLOR_TEXT_DARKEST: 'rgb(106, 106, 109)', // rgba(255, 255, 255, 0.3) on COLOR_DFINITY_BLACK\n  COLOR_LIGHT_TEXT_FADED: 'rgb(77, 77, 77)', // rgba(0, 0, 0, 0.7) on white, matches Material-UI Tab opacity\n  COLOR_DARK_BODY_DARKER_MAC_OS: '#1B1B1B', // Calendar, Finder, iTunes, Messages\n  COLOR_DARK_BODY_LIGHTER_MAC_OS: '#262626', // Finder\n  COLOR_DARK_DRAWER_DIVIDER_MAC_OS: '#4B4B4B', // Calendar, Messages\n  COLOR_DARK_DRAWER_DIVIDER_YOUTUBE: '#333333',\n  COLOR_DARK_FOOTER_TEXT_ICON_NETFLIX: '#808080',\n  COLOR_DARK_TEXT_MAC_OS: '#DCDCDC', // Calendar, iTunes\n  COLOR_LIGHT_BODY_TEXT_GOOGLE: '#202124', // About, Account, News, Gmail, Contacts, Docs, Keep, Material\n  COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE: '#5F6368', // About, Account, Contacts, Docs, Drive, Gmail, Material\n  COLOR_LIGHT_CHART_GOOGLE: '#9E9E9E', // Analytics, Firebase\n  COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE: '#E3E3E3', // Docs, Sheets\n  COLOR_LIGHT_DRAWER_ICON_GOOGLE: '#5F6368', // Account, Docs, Drive, Calendar, Keep, Photos, Sheets\n  COLOR_LIGHT_DRAWER_TEXT_GOOGLE: '#3C4043', // Account, Docs, Calendar, News, Photos, Sheets\n  COLOR_TWITTER_BLUE: 'rgb(100, 164, 224)',\n  COLOR_TWITTER_GREEN: 'rgb(131, 175, 97)',\n  COLOR_TWITTER_ORANGE: 'rgb(244, 174, 78)',\n  COLOR_TWITTER_PURPLE: 'rgb(165, 144, 211)',\n  COLOR_GRAY_ON_WHITE: 'rgb(235, 235, 235)', // matches Material-UI IconButton hover\n  FONT_PRIMARY: '\\'Muli\\', sans-serif',\n  MATERIAL_FONT_SIZE_H1: '6rem', // 96px\n  MATERIAL_FONT_SIZE_H2: '3.75rem', // 60px\n  MATERIAL_FONT_SIZE_H3: '3rem', // 48px\n  MATERIAL_FONT_SIZE_H4: '2.125rem', // 34px\n  MATERIAL_FONT_SIZE_H5: '1.5rem', // 24px\n  MATERIAL_FONT_SIZE_H6: '1.25rem', // 20px\n  MATERIAL_FONT_SIZE_SUBTITLE_1: '1rem', // 16px\n  MATERIAL_FONT_SIZE_SUBTITLE_2: '0.875rem', // 14px\n  MATERIAL_FONT_SIZE_BODY_1: '1rem', // 16px\n  MATERIAL_FONT_SIZE_BODY_2: '0.875rem', // 14px\n  MATERIAL_FONT_SIZE_BUTTON: '0.875rem', // 14px\n  MATERIAL_FONT_SIZE_CAPTION: '0.75rem', // 12px\n  MATERIAL_FONT_SIZE_OVERLINE: '0.625rem', // 10px\n  MATERIAL_CIRCULAR_INDICATOR_SIZE: 48,\n  MATERIAL_UI_ICON_BUTTON_FONT_SIZE: 24,\n  FONT_SIZE_TABLE_XS: '0.6875rem', // 11px\n  BREAKPOINT_MIN_XS: 0,\n  BREAKPOINT_MAX_XS: 599,\n  BREAKPOINT_MIN_SM: 600,\n  BREAKPOINT_MAX_SM: 959,\n  BREAKPOINT_MIN_MD: 960,\n  BREAKPOINT_MAX_MD: 1279,\n  BREAKPOINT_MIN_LG: 1280,\n  BREAKPOINT_MAX_LG: 1919,\n  BREAKPOINT_MIN_XL: 1920,\n  BREAKPOINT_LG_MAX_WIDTH: 1140, // from Bootstrap\n  DRAWER_WIDTH: 256,\n  FOOTER_HEIGHT: 96,\n  FOOTER_MARGIN_XS: 8,\n  FOOTER_MARGIN_SM_AND_UP: 32,\n  ICON_SVG_PATH_TPS: 'M16 8V4l8 8-8 8v-4h-5V8h5zM9 8H7v8h2V8zM4.986 8H3v8h1.986V8zM1 8H0v8h1V8z',\n  ICON_SVG_PATH_VOLUME: 'M24 14.182h-6.545v7.636H24zm-8.727-12H8.727v19.636h6.546zM6.545 21.818H0v-12h6.545z',\n  ICON_SVG_PATH_MARKET_CAP: 'M24 3.621l-7.21 1.467 2.062 2.053-6.43 6.438-3.606-3.607L0 18.675l1.694 1.703 7.117-7.01 3.594 3.597 8.149-8.126 2.003 1.995z',\n  ICON_SVG_PATH_BLOCK: 'M12 0L1 6v12.131L12 24l11-5.869V6.065L12 0zm7.91 6.646l-7.905 4.218L4.133 6.57l7.862-4.289 7.915 4.365zM3 8.23l8 4.363V21.2l-8-4.268V8.23zM13 21.2v-8.6l8-4.269v8.6L13 21.2z',\n  ICON_SVG_PATH_PRICE: 'M19 16.166c0-4.289-4.465-5.483-7.887-7.091-2.079-1.079-1.816-3.658 1.162-3.832 1.652-.1 3.351.39 4.886.929l.724-3.295c-1.814-.551-3.437-.803-4.885-.841V0h-2v2.134c-3.89.535-5.968 2.975-5.968 5.7 0 4.876 5.693 5.62 7.556 6.487 2.54 1.136 2.07 3.5-.229 4.021-1.993.451-4.538-.337-6.45-1.079L5 20.551c1.787.923 3.931 1.417 6 1.453V24h2v-2.105c3.313-.464 6.005-2.293 6-5.729z',\n  ICON_SVG_PATH_BLOCK_TIME: 'M13 12l-.688-4h-.609L11 12a1.99 1.99 0 0 0-1 1.723 2 2 0 0 0 4 0A1.99 1.99 0 0 0 13 12zm-1-8C6.478 4 2 8.477 2 14s4.478 10 10 10 10-4.477 10-10S17.522 4 12 4zm0 18c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8-3.589 8-8 8zM10 2.181V0h4v2.181c-1.438-.243-2.592-.238-4 0zm9.179 2.226L20.586 3 22 4.414l-1.321 1.321a12.134 12.134 0 0 0-1.5-1.328z',\n  ICON_SVG_PATH_THEME_LIGHT: 'M.307 13.306a11.99 11.99 0 0 0 4.489 8.072 11.999 11.999 0 0 0 11.637 1.883 12.038 12.038 0 0 0 5.316-3.839 12.04 12.04 0 0 0 1.895-3.402.67.67 0 0 0-1.018-.775 9.122 9.122 0 0 1-2.15 1.124 9.114 9.114 0 0 1-8.842-1.43 9.11 9.11 0 0 1-3.412-6.136 9.11 9.11 0 0 1 1.926-6.751c.245-.308.52-.61.818-.9a.67.67 0 0 0-.572-1.144A12.044 12.044 0 0 0 2.84 4.425a11.987 11.987 0 0 0-2.533 8.88zm3.584-8.047a10.7 10.7 0 0 1 4.723-3.41l.027-.01a10.433 10.433 0 0 0-1.752 7.118 10.444 10.444 0 0 0 3.912 7.033 10.448 10.448 0 0 0 10.135 1.64c.196-.072.39-.15.583-.232A10.697 10.697 0 0 1 15.975 22 10.665 10.665 0 0 1 5.63 20.327a10.656 10.656 0 0 1-3.99-7.174A10.653 10.653 0 0 1 3.89 5.259z',\n  ICON_SVG_PATH_THEME_DARK: 'M.307 13.306a11.99 11.99 0 0 0 4.489 8.072 11.999 11.999 0 0 0 11.637 1.883 12.038 12.038 0 0 0 5.316-3.839 12.04 12.04 0 0 0 1.895-3.402.67.67 0 0 0-1.018-.775 9.122 9.122 0 0 1-2.15 1.124 9.114 9.114 0 0 1-8.842-1.43 9.11 9.11 0 0 1-3.412-6.136 9.11 9.11 0 0 1 1.926-6.751c.245-.308.52-.61.818-.9a.67.67 0 0 0-.572-1.144A12.044 12.044 0 0 0 2.84 4.425a11.987 11.987 0 0 0-2.533 8.88z',\n  ICON_SVG_PATH_BITCOIN: 'M21.018 9.648c.377-2.521-1.543-3.877-4.168-4.781l.852-3.416-2.08-.519-.829 3.326a86.982 86.982 0 0 0-1.666-.392l.835-3.348L11.884 0l-.852 3.415a69.57 69.57 0 0 1-1.328-.312l.002-.01-2.867-.717-.554 2.221s1.543.354 1.51.376c.843.21.995.767.97 1.21l-.97 3.89c.058.016.133.037.216.07l-.22-.054-1.36 5.451c-.103.256-.364.64-.953.494.02.03-1.511-.377-1.511-.377l-1.033 2.38 2.706.675c.504.126.997.258 1.483.382l-.86 3.455 2.076.519.853-3.419c.567.154 1.118.296 1.657.43l-.85 3.403 2.08.518.86-3.449c3.546.671 6.212.4 7.335-2.807.904-2.582-.045-4.071-1.91-5.042 1.358-.314 2.381-1.207 2.654-3.054zm-4.75 6.663c-.643 2.582-4.991 1.186-6.4.836l1.141-4.578c1.41.352 5.93 1.049 5.258 3.742zm.642-6.7c-.586 2.349-4.205 1.156-5.378.863l1.035-4.152c1.174.293 4.954.84 4.343 3.29z',\n  ABOUT_PAGE_MARGIN_XS: 8,\n  ABOUT_PAGE_MARGIN_SM: 48,\n  ABOUT_PAGE_MARGIN_MD: 64,\n  ABOUT_PAGE_MARGIN_LG: 128,\n  HOME_PAGE_MARGIN_XS: 8,\n  HOME_PAGE_MARGIN_SM_AND_UP: 32,\n  // Care must be taken if these table heights are changed, to avoid a glitch that occurs with\n  // certain heights where the row slide in has a 1px stutter following the animation.\n  TABLE_ROW_HEIGHT_XS: 38,\n  TABLE_ROW_HEIGHT_SM_AND_UP: 48,\n  ABOUT_PAGE_PROJECT_ICONS_HEIGHT: 55,\n  COINBASE_CHECKOUT_ID: '0d82d9e4-06c8-44b5-8f81-ef296be643e6',\n  GOOGLE_ANALYTICS_TRACKING_ID: 'UA-138212575-1'\n});\n\nexport default Constants;\n","/**\n * @file globalStyle\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport { createGlobalStyle } from 'styled-components';\nimport Constants from '../constants';\n\n/**\n * StyledComponent that handles global styles.\n */\nexport const GlobalStyle = createGlobalStyle`\n   body {\n    margin: 0;\n    padding: 0;\n    background: ${props => props.theme.colorBodyBackground};\n   }\n`;\n\n/**\n * The styled-components ThemeProvider light theme.\n */\nexport const themeLight = {\n  // Should use constants for all!!!\n  isDark: false,\n  colorAboutBackgroundPrimary: '#FFFFFF',\n  colorAboutBackgroundSecondary: '#F8F9FA', // Google Analytics (verified), Wikipedia (verified)\n  colorAboutHeaderText: '#FFFFFF',\n  colorAboutTwitterBackground: '#FFFFFF',\n  colorAppBarBackground: '#FFFFFF',\n  colorAppBarTextButton: Constants.COLOR_LIGHT_TEXT_FADED, // (#4D4D4D)\n  colorAppBarOpenText: Constants.COLOR_LIGHT_BODY_TEXT_GOOGLE,\n  colorAppBarExplorerText: Constants.COLOR_DFINITY_BLUE_700,\n  colorBodyBackground: '#F8F9FA', // Wikipedia (verified)\n  colorBodyButtonBackground: Constants.COLOR_DFINITY_BLUE_700,\n  colorBodyButtonText: Constants.COLOR_TEXT_LIGHT,\n  colorBodyButtonHoverBackground: Constants.COLOR_DFINITY_BLUE_500,\n  colorBodyButtonHoverText: Constants.COLOR_TEXT_LIGHT,\n  colorBodyText: Constants.COLOR_LIGHT_BODY_TEXT_GOOGLE,\n  colorBodyTextDim: Constants.COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE,\n  colorBodyTextLink: Constants.COLOR_DFINITY_BLUE_700,\n  colorDashCardBackground: '#FFFFFF',\n  colorDashCardIcon: [Constants.COLOR_DFINITY_BLUE_700, '#9440A6', '#DA005E', '#F79308'], // Ori's purple and orange\n  colorDashCardIconOpacity: 1.0,\n  colorDrawerBackground: '#FFFFFF',\n  colorDrawerDivider: Constants.COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE,\n  colorDrawerIcon: Constants.COLOR_LIGHT_DRAWER_ICON_GOOGLE,\n  colorDrawerIconTextSelected: Constants.COLOR_DFINITY_BLUE_700,\n  colorDrawerText: Constants.COLOR_LIGHT_DRAWER_TEXT_GOOGLE,\n  colorChartBackground: '#FFFFFF',\n  colorChartTooltipBackground: 'rgba(255, 255, 255, 0.96)',\n  colorChartAxes: Constants.COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE,\n  colorChartGrid: Constants.COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE,\n  colorChartText: Constants.COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE,\n  colorChartLine: Constants.COLOR_DFINITY_BLUE_700,\n  colorChartActiveDotStroke: '#FFFFFF',\n  colorIconButtonHover: '#000000',\n  colorTableBackgroundPrimary: '#FFFFFF',\n  colorTableRowBorder: Constants.COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE,\n  colorTableTextDim: '#909090', // YouTube, footer text dim (verified)\n  colorFooterBackground: '#F5F5F5',\n  colorFooterTextIcon: '#909090', // YouTube (verified)\n  colorSearchText: Constants.COLOR_LIGHT_BODY_TEXT_GOOGLE,\n  colorSearchIcon: '#9E9E9E', //  Material Design icon(verified)\n  opacityActionDisabled: 0.26, // Material-UI createPalette.js theme.palette.action.disabled light theme\n  opacityActionHover: 0.08 // Material-UI createPalette.js theme.palette.action.hoverOpacity light theme\n}\n\n/**\n * The styled-components ThemeProvider dark theme.\n */\nexport const themeDark = {\n  isDark: true,\n  colorAboutBackgroundPrimary: Constants.COLOR_DARK_BODY_DARKER_MAC_OS,\n  colorAboutBackgroundSecondary: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorAboutHeaderText: '#FFFFFF',\n  colorAboutTwitterBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorAppBarBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorAppBarTextButton: Constants.COLOR_DARK_TEXT_FADED,\n  colorAppBarOpenText: Constants.COLOR_DARK_TEXT,\n  colorAppBarExplorerText: Constants.COLOR_DFINITY_LIGHT_ORANGE,\n  colorBodyBackground: Constants.COLOR_DARK_BODY_DARKER_MAC_OS,\n  colorBodyButtonBackground: Constants.COLOR_DFINITY_BLUE_700,\n  colorBodyButtonText: Constants.COLOR_DARK_TEXT_MAC_OS,\n  colorBodyButtonHoverBackground: Constants.COLOR_DFINITY_BLUE_500,\n  colorBodyButtonHoverText: Constants.COLOR_TEXT_LIGHT,\n  colorBodyText: Constants.COLOR_DARK_TEXT_MAC_OS,\n  colorBodyTextDim: Constants.COLOR_DARK_TEXT_MAC_OS,\n  colorBodyTextLink: Constants.COLOR_DFINITY_BLUE_600,\n  colorDashCardBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorDashCardIcon: ['#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF'],\n  colorDashCardIconOpacity: 0.5,\n  colorDrawerBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorDrawerDivider: Constants.COLOR_DARK_DRAWER_DIVIDER_YOUTUBE,\n  colorDrawerIcon: Constants.COLOR_DARK_TEXT_FADED,\n  colorDrawerIconTextSelected: '#FFFFFF',\n  colorDrawerText: Constants.COLOR_DARK_TEXT_FADED,\n  colorChartBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorChartTooltipBackground: 'rgba(38, 38, 38, 0.96)',\n  colorChartAxes: Constants.COLOR_DARK_FOOTER_TEXT_ICON_NETFLIX,\n  colorChartGrid: Constants.COLOR_DARK_DRAWER_DIVIDER_MAC_OS,\n  colorChartText: Constants.COLOR_DARK_TEXT_FADED,\n  colorChartLine: Constants.COLOR_DFINITY_BLUE_600,\n  colorChartActiveDotStroke: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorIconButtonHover: Constants.COLOR_DARK_TEXT,\n  colorTableBackgroundPrimary: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorTableRowBorder: Constants.COLOR_DARK_DRAWER_DIVIDER_YOUTUBE,\n  colorTableTextDim: '#717171', // YouTube (Dark), footer text dim (verified)\n  colorFooterBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorFooterTextIcon: Constants.COLOR_DARK_FOOTER_TEXT_ICON_NETFLIX,\n  colorSearchText: Constants.COLOR_LIGHT_BODY_TEXT_GOOGLE,\n  colorSearchIcon: '#9E9E9E', //  Material Design icon (verified)\n  opacityActionDisabled: 0.3, // Material-UI createPalette.js theme.palette.action.disabled dark theme\n  opacityActionHover: 0.1 // Material-UI createPalette.js theme.palette.action.hoverOpacity dark theme\n}\n","/**\n * @file ResponsiveComponent\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport { Component } from 'react';\nimport { throttle } from 'throttle-debounce';\n\n/**\n * Base class component which re-renders when the window is resized.\n */\nclass ResponsiveComponent extends Component {\n  /**\n   * Create a ResponsiveComponent object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n\n    // Throttle the calls to handleWindowResize() so that we're not constantly re-rendering.\n    this.throttledHandleWindowResize = throttle(200, true, this.handleWindowResize);\n  }\n  \n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree).\n   * @public\n   */\n  componentDidMount() {\n    window.addEventListener('resize', this.throttledHandleWindowResize);\n  }\n\n  /**\n   * Invoked by React immediately before a component is unmounted and destroyed.\n   * @public\n   */\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.throttledHandleWindowResize);\n  }\n\n  /**\n   * Force the component to re-render when the window is resized.\n   * @private\n   */\n  handleWindowResize() {\n    this.forceUpdate();\n  }\n};\n\nexport default ResponsiveComponent;\n","/**\n * @file TrackablePage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport ReactGA from 'react-ga';\nimport ResponsiveComponent from '../ResponsiveComponent/ResponsiveComponent';\n\n/**\n * Base class component for a page which is trackable by react-ga.\n */\nclass TrackablePage extends ResponsiveComponent {\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    super.componentDidMount();\n\n    // Scroll to the top on every page change.\n    window.scrollTo(0, 0);\n\n    const pathName = this.props.location.pathname + this.props.location.search;\n    this.trackPage(pathName);\n}\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @param {Object} prevProps The previous props.\n   * @public\n   */\n  componentDidUpdate(prevProps) {\n    const currentPathName = prevProps.location.pathname + prevProps.location.search;\n    const nextPathName = this.props.location.pathname + this.props.location.search;\n\n    if (currentPathName !== nextPathName)\n      this.trackPage(nextPathName);\n  }\n\n  /**\n   * Track the page using react-ga.\n   * @param {String} pathName The path name of the page.\n   * @private\n   */\n  trackPage(pathName) {\n    // Track production build, but not development build.\n    if (process.env.NODE_ENV === 'production') {\n      ReactGA.set({ page: pathName });\n      ReactGA.pageview(pathName);\n    }\n  }\n}\n\nexport default TrackablePage;\n","/**\n * @file breakpoint\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport Constants from '../constants';\n\nexport const Breakpoints = Object.freeze({\n  XS: 0,\n  SM: 1,\n  MD: 2,\n  LG: 3,\n  XL: 4\n});\n\n/**\n * Return the current breakpoint.\n * @param {Boolean} isDesktopDrawerOpen True if the desktop drawer (large screens) is open and\n *  caller wants the breakpoint to be calculated based on the non-drawer width of the window.\n * @return {Number} The current breakpoint.\n * @private\n */\nexport function getBreakpoint(isDesktopDrawerOpen) {\n  const drawerWidth =  isDesktopDrawerOpen ? Constants.DRAWER_WIDTH : 0;\n  if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_XS + drawerWidth) + 'px)').matches)\n    return Breakpoints.XS;\n  else if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_SM + drawerWidth) + 'px)').matches)\n    return Breakpoints.SM;\n  else if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_MD  + drawerWidth) + 'px)').matches)\n    return Breakpoints.MD;\n  else if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_LG + drawerWidth) + 'px)').matches)\n    return Breakpoints.LG;\n  else\n    return Breakpoints.XL;\n}\n\n/**\n * Return true if the current breakpoint is greater than or equal to the specified breakpoint.\n * @param {Number} breakpoint The breakpoint to compare to the current breakpoint.\n * @return {Boolean} True if the current breakpoint is greater than or equal to the specified\n *  breakpoint.\n * @private\n */\nexport function isBreakpointGreaterOrEqualTo(breakpoint) {\n  switch (breakpoint) {\n    case Breakpoints.XS:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_XS + 'px)').matches;\n    case Breakpoints.SM:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_SM + 'px)').matches;\n    case Breakpoints.MD:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_MD + 'px)').matches;\n    case Breakpoints.LG:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_LG + 'px)').matches;\n    case Breakpoints.XL:\n    default:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_XL + 'px)').matches;\n  }\n}\n\n/**\n * Return true if the current breakpoint is greater than or equal to the smallest \"desktop\"\n * breakpoint.\n * @return {Boolean} True if the current breakpoint is greater than or equal to the smallest\n * \"desktop\" breakpoint.\n * @private\n */\nexport function isBreakpointDesktop() {\n  return isBreakpointGreaterOrEqualTo(Breakpoints.MD);\n}\n\n/**\n * Return true if the current breakpoint is less than or equal to the specified breakpoint.\n * @param {Number} breakpoint The breakpoint to compare to the current breakpoint.\n * @return {Boolean} True if the current breakpoint is less than or equal to the specified\n *  breakpoint.\n * @private\n */\nexport function isBreakpointLessOrEqualTo(breakpoint) {\n  switch (breakpoint) {\n    case Breakpoints.XS:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_XS + 'px)').matches;\n    case Breakpoints.SM:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_SM + 'px)').matches;\n    case Breakpoints.MD:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_MD + 'px)').matches;\n    case Breakpoints.LG:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_LG + 'px)').matches;\n    case Breakpoints.XL:\n    default:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_XL + 'px)').matches;\n  }\n}\n","/**\n * @file DynamicTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  Fade,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { Transition } from 'react-spring/renderprops';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst StyledPaper = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorTableBackgroundPrimary};\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    color: ${props => props.theme.colorBodyText};\n    padding-top: 8px;\n    padding-bottom: 4px;\n    padding-left: 11px;\n    text-align: left;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    font-weight: 300;\n  }\n`;\n\nconst StyledTable = styled(Table)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    /* Needed for footer border-top to work. */\n    border-collapse: separate;\n  }\n`;\n\nconst TableRowHeader = styled(TableRow)`\n  && {\n    height: ${Constants.TABLE_ROW_HEIGHT_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        height: ${Constants.TABLE_ROW_HEIGHT_XS + 'px'};\n      `\n    }\n  }\n`;\n\n// The height for the table body rows is set dynamically, so that we can perform expand/collapse\n// animations.\nconst TableRowBody = styled(TableRow)`\n  && {\n    height: auto;\n  }\n`;\n\nconst StyledTableCell = styled(TableCell)`\n  && {\n    border-color: ${props => props.theme.colorTableRowBorder};\n    color: ${props => props.theme.colorBodyText};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n    white-space: nowrap;\n    /* Reducing the font size for narrow page widths seems sufficient for resizing the table when\n       Grid spacing is 0 and padding='checkbox'. Other settings, such as 'overflow: hidden' and\n       'max-width: 0px', were also helpful in improving the table at narrow page widths, but do\n       not seem to be necessary with the current settings. Another useful setting is\n       'text-overflow: ellipsis', though we reduce the font size rather than using ellipsis. */\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.FONT_SIZE_TABLE_XS};\n      `\n    }\n  }\n`;\n\nconst TableCellHeader = styled(StyledTableCell)`\n  && {\n    border-bottom-style: solid;\n    border-bottom-width: 2px;\n    color: ${props => props.theme.colorBodyTextDim};\n    font-weight: 500;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst TableRowFooter = styled(TableRow)`\n  && {\n    height: 20px;\n  }\n`;\n\nconst TableCellFooter = styled(StyledTableCell)`\n  && {\n    border-top-style: solid;\n    border-top-width: 1px;\n    color: ${props => props.theme.colorTableTextDim};\n    font-size: 9px;\n  }\n`;\n\n/**\n * Class that implements a table component where new rows either slide in or fade in.\n */\nclass DynamicTable extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * An array that specifies the column widths of the table.\n     */    \n    columnWidths: PropTypes.array.isRequired,\n    /**\n     * Return an array of objects that describe the body rows, where each object contains:\n     *  mapKey: A unique key that identifies the row.\n     *  cells: An array of objects that describe the cells of the row, where each object contains:\n     *    value: String containing the value of the cell.\n     *    isNumeric: True if the cell contains a numeric value, false otherwise.\n     *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n     *      for no link.\n     * @return {Array} An array of objects that describe the body rows.\n     */\n    getBodyRows: PropTypes.func.isRequired,\n    /**\n     * An array of objects that describe the cells of the footer row, where each object contains:\n     *  value: String containing the value of the cell.\n     *  isNumeric: True if the cell contains a numeric value, false otherwise.\n     *  link: Optional string which provides a link for the cell (to= prop of Link). Set to null for\n     *    no link.\n     */\n    footerRow: PropTypes.array.isRequired,\n    /**\n     * An array of objects that describe the cells of the header row, where each object contains:\n     *  value: String containing the value of the cell.\n     *  isNumeric: True if the cell contains a numeric value, false otherwise.\n     *  link: Optional string which provides a link for the cell (to= prop of Link). Set to null for\n     *    no link.\n     */\n    headerRow: PropTypes.array.isRequired,\n    /**\n     * Indicates whether new rows should slide in rather than fade in, expanding when they are\n     * created and collapsing when they are destroyed.\n     */\n    slide: PropTypes.bool,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * The title of the table.\n     */\n    title: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Create a DynamicTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.rows = [];\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    // BUG: On Chrome, screen scrolls when collapsing row is on screen but expanding row is off screen!!!\n    const { breakpoint, columnWidths, footerRow, headerRow, title } = this.props;\n    return (\n      <StyledPaper elevation={1}>\n        <TypographyTitle>{title}</TypographyTitle>\n        <StyledTable>\n          <colgroup>\n            {columnWidths.map((width, index) => {\n              // The column width settings seem to be ignored in many cases, depending on cell\n              // length. That is, when cell lengths are long, the widths are ignored.\n              return (\n                <col key={index} width={width} />\n              );\n            })}\n          </colgroup>\n          <TableHead>\n            <TableRowHeader breakpoint={breakpoint}>\n              {headerRow.map((cell, index) => {\n                return (\n                  // Using index as the key is fine here and for cells in other rows, since we never\n                  // add, remove, reorder, or filter items in the cell arrays.\n                  <TableCellHeader\n                    breakpoint={breakpoint}\n                    key={index}\n                    align={cell.isNumeric ? 'right' : 'inherit'}\n                    padding='checkbox'\n                  >\n                  {cell.link != null ?\n                    <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                    cell.value\n                  }\n                  </TableCellHeader>\n                );\n              })}\n            </TableRowHeader>\n          </TableHead>\n          <TableBody>\n            {this.getBodyRowElements()}\n          </TableBody>\n          <TableFooter>\n            <TableRowFooter>\n              {footerRow.map((cell, index) => {\n                return (\n                  <TableCellFooter\n                    breakpoint={breakpoint}\n                    key={index}\n                    align={cell.isNumeric ? 'right' : 'inherit'}\n                    padding='checkbox'\n                  >\n                  {cell.link != null ?\n                    <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                    cell.value\n                  }\n                  </TableCellFooter>\n                );\n              })}\n            </TableRowFooter>\n          </TableFooter>\n        </StyledTable>\n      </StyledPaper>\n    );\n  }\n\n  /**\n   * Return the elements for all of the body rows.\n   * @return {Object} The elements for all of the body rows.\n   * @private\n   */\n  getBodyRowElements() {\n    const { breakpoint, getBodyRows, maxRows, slide } = this.props;\n    const rowHeight = breakpoint === Breakpoints.XS ?\n      Constants.TABLE_ROW_HEIGHT_XS : Constants.TABLE_ROW_HEIGHT_SM_AND_UP;\n\n    // Only get new body rows when the Document (web app) is visible. If we do not do this, then the\n    // Transition component can buffer hundreds of row animations if we switch to another browser\n    // tab for an extended period of time, then when our browser tab regains focus, these animations\n    // are run and the web app can become frozen for several minutes.\n    if (document.visibilityState === \"visible\")\n      this.rows = getBodyRows().slice(0, maxRows);\n    \n    if (slide) {\n      // Use a Transition element to expand (and fade in) entering rows and collapse (and fade out)\n      // leaving rows.\n      // BUG: On windows resize to/from XS, row heights are not changed on existing rows!!!\n      return (\n        <Transition\n          items={this.rows}\n          keys={bodyRow => bodyRow.mapKey}\n          from={{ height: 0, opacity: 0 }}\n          enter={{ height: rowHeight, opacity: 1 }}\n          leave={{ height: 0, opacity: 0 }}\n        >\n          {/* Function signature: (item, state, index) => props => ReactNode */}\n          {(bodyRow, state, index) => style => this.getBodyRowElement(bodyRow, state, index, style)}\n        </Transition>\n      );\n    }\n    else {\n      return this.rows.map((bodyRow, index) => {\n        // When not expanding/collapsing rows, use a Fade element to fade in and fade out.\n        return (\n          <Fade\n            key={bodyRow.mapKey}\n            in={true}\n            timeout={500}\n          >\n            {this.getBodyRowElement(bodyRow, 'update', index, { height: rowHeight })}\n          </Fade>\n        );\n      });  \n    }\n  }\n\n  /**\n   * Return the element for the specified body row.\n   * @param {Object} bodyRow Object that describes the body row.\n   * @param {String} state The item's transition state: enter, leave, or update.\n   * @param {Number} rowIndex The item's row index. \n   * @param {Object} style The style to apply to the table cell Grid, specifying the height.\n   * @return {Object} The element for the specified body row.\n   * @private\n   */\n  getBodyRowElement(bodyRow, state, rowIndex, style) {\n    const { breakpoint } = this.props;\n    return (\n      <TableRowBody>\n        {bodyRow.cells.map((cell, index) => {\n          return (\n            <StyledTableCell\n              breakpoint={breakpoint}\n              key={index}\n              padding='checkbox'\n              // Hide the border on rows that are leaving, so that table height remains consistent.\n              style={state === 'leave' ? {borderBottomStyle: 'hidden'} : null}\n            >\n              <Grid container\n                direction='row'\n                justify={cell.isNumeric ? 'flex-end' : 'flex-start'}\n                alignItems='center'\n                style={style}\n              >\n                {cell.link != null ?\n                  <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                  cell.value\n                }\n              </Grid>\n            </StyledTableCell>\n          );\n        })}\n      </TableRowBody>\n    );\n  }\n}\n\nexport default DynamicTable;\n","/**\n * @file queryBlocks\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get blocks.\n * @return {Array} The array of Block objects.\n */\nconst queryBlocks = gql`\n  query Blocks($first: Int) {\n    blocks(first: $first, orderBy: height_DESC) {\n      id\n      height\n      timestamp\n      numTransactions\n    }\n  }\n`;\n\nexport default queryBlocks;\n","/**\n * @file subscriptionBlock\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL subscription to receive a new block.\n * @return {Object} The new Block object.\n */\nconst subscriptionBlock = gql`\n  subscription {\n    block {\n      node {\n        id\n        height\n        timestamp\n        numTransactions\n      }\n    }\n  }\n`;\n\nexport default subscriptionBlock;\n","/**\n * @file BlocksSlideTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DynamicTable from '../DynamicTable/DynamicTable';\nimport queryBlocks from '../../graphql/queryBlocks';\nimport subscriptionBlock from '../../graphql/subscriptionBlock';\n\n/**\n * This component displays a table of Block objects with data retrieved via GraphQL.\n */\nclass BlocksSlideTableWithData extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Callback fired when a new block is added.\n     */\n    handleAddNewBlock: PropTypes.func,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a BlocksSlideTableWithData object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.firstBlockAdded = false;\n\n    // Bind to make 'this' work in callbacks.\n    this.handleQueryCompleted = this.handleQueryCompleted.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {breakpoint, maxRows} = this.props;\n    return (\n      <Query\n        query={queryBlocks}\n        variables={{ first: maxRows }}\n        onCompleted={this.handleQueryCompleted}\n      >\n        {({ loading, error, data, subscribeToMore }) => {\n          const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n          if (loading)\n            return (\n              <BlocksSlideTable\n                blocks={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n                loading\n              />\n            );\n          else if (error)\n            return (\n              <BlocksSlideTable\n                blocks={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n                error\n              />\n            );\n          else {\n            return (\n              <BlocksSlideTable\n                blocks={data.blocks}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Callback fired when the Query is completed.\n   * @param {Object} data The query data.\n   * @private\n   */\n  handleQueryCompleted(data) {\n    if (!this.firstBlockAdded && data.blocks.length) {\n      this.firstBlockAdded = true;\n\n      // Add a new block to the parent.\n      if (this.props.handleAddNewBlock)\n        this.props.handleAddNewBlock(data.blocks[0]);\n    }\n  }\n\n  /**\n   * Subscribe to receive new objects of the body of the table using subscribeToMore and update the\n   * query's store by merging the subscription data with the previous data.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionBlock,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n\n        // Add a new block to the parent.\n        if (this.props.handleAddNewBlock)\n          this.props.handleAddNewBlock(subscriptionData.data.block.node);\n\n        // Add the new block to the front of the blocks[] array, keeping at most this.props.maxRows\n        // blocks.\n        return {\n          blocks: [\n            subscriptionData.data.block.node,\n            ...(prev != null ? prev.blocks : []) // check if prev is undefined\n          ].slice(0, this.props.maxRows)\n        };\n      }\n    });\n\n  }\n}\n\n/**\n * This component displays a table of Block objects where new blocks slide in.\n */\nclass BlocksSlideTable extends Component {\n  static propTypes = {\n    /**\n     * Array of block objects.\n     */\n    blocks: PropTypes.array.isRequired,\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * Function to subscribe to receive new objects of the body of the table.\n     */\n    subscribeToNewObjects: PropTypes.func\n  };\n  \n  /**\n   * Create a BlocksSlideTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Subscribe to receive new objects of the body of the table.\n    if (this.props.subscribeToNewObjects)\n      this.props.subscribeToNewObjects();\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, error, loading, maxRows } = this.props;\n    return (\n      <DynamicTable\n        breakpoint={breakpoint}\n        title='Blocks'\n        columnWidths={['30%', '40%', '30%']}\n        maxRows={maxRows}\n        headerRow={[\n          {value: 'Height', isNumeric: false},\n          {value: 'Timestamp', isNumeric: false},\n          {value: 'Transactions', isNumeric: true}\n        ]}\n        getBodyRows={this.getBodyRows}\n        footerRow={[\n          {value: null, isNumeric: false},\n          {value: null, isNumeric: false},\n          {value: '(simulated data)', isNumeric: true}\n        ]}\n        slide={!loading && !error}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows() {\n    const { blocks, loading, error } = this.props;\n    if (loading)\n      return [{mapKey: 'LOADING', cells: [{value: 'Loading...', isNumeric: false, link: null}]}];\n    else if (error)\n      return [{mapKey: 'ERROR', cells: [{value: 'Network error', isNumeric: false, link: null}]}];\n    else {\n      let bodyRows = blocks.map((block) => {\n        const date = new Date(block.timestamp);\n        return {\n          mapKey: block.height,\n          cells: [\n            {\n              value: block.height.toLocaleString(),\n              isNumeric: false,\n              link: `/block/${block.height}`\n            },\n            {value: date.toLocaleString(), isNumeric: false, link: null},\n            {value: block.numTransactions.toLocaleString(), isNumeric: true, link: null}\n          ]\n        };\n      });\n      return bodyRows;\n    }\n  }\n}\n\nexport default BlocksSlideTableWithData;\n","/**\n * @file queryTransactions\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get transactions.\n * @return {Array} The array of Transaction objects.\n */\nconst queryTransactions = gql`\n  query Transactions($first: Int) {\n    transactions(first: $first, orderBy: createdAt_DESC) {\n      id\n      hash\n      amount\n    }\n  }\n`;\n\nexport default queryTransactions;\n","/**\n * @file subscriptionTransaction\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL subscription to receive a new transaction.\n * @return {Object} The new Transaction object.\n */\nconst subscriptionTransaction = gql`\n  subscription {\n    transaction {\n      node {\n        id\n        hash\n        amount\n      }\n    }\n  }\n`;\n\nexport default subscriptionTransaction;\n","/**\n * @file getHashString\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\n/**\n * Return a string containing the hash which has been modified for display.\n * @param {String} hash The hash to modify for display.\n * @param {Number} maxLength The maximum length of the hash string.\n * @return {Array} A string containing the hash which has been modified for display.\n * @protected\n */\nexport default function getHashString(hash, maxLength) {\n  if (maxLength === undefined)\n    maxLength = 22;\n  hash = \"0x\" + hash;\n  if (maxLength !== 0 && hash.length > maxLength) {\n    const first = hash.substring(0, maxLength - 4);\n    const last = hash.substr(hash.length - 4);\n    return first + \"...\" + last;\n  }\n  else\n    return hash;\n}\n\n","/**\n * @file TransactionsFadeTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DynamicTable from '../DynamicTable/DynamicTable';\nimport queryTransactions from '../../graphql/queryTransactions';\nimport subscriptionTransaction from '../../graphql/subscriptionTransaction';\nimport getHashString from '../../utils/getHashString';\n\n/**\n * This component displays a table of Transaction objects with data retrieved via GraphQL.\n */\nclass TransactionsFadeTableWithData extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {breakpoint, maxRows} = this.props;\n    return (\n      <Query query={queryTransactions} variables={{ first: maxRows }}>\n        {({ loading, error, data, subscribeToMore }) => {\n          const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n          if (loading)\n            return (\n              <TransactionsFadeTable\n                transactions={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n                loading\n              />\n            );\n          else if (error)\n            return (\n              <TransactionsFadeTable\n                transactions={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n                error\n              />\n            );\n          else {\n            return (\n              <TransactionsFadeTable\n                transactions={data.transactions}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new objects of the body of the table using subscribeToMore and update the\n   * query's store by merging the subscription data with the previous data.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionTransaction,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n\n        // Add the new transaction to the front of the transactions[] array, keeping at most\n        // this.props.maxRows transactions.\n        return {\n          transactions: [\n            subscriptionData.data.transaction.node,\n            ...(prev != null ? prev.transactions : []) // check if prev is undefined\n          ].slice(0, this.props.maxRows)\n        };\n      }\n    });\n  }\n}\n\n/**\n * This component displays a table of Transaction objects where new transacations fade in.\n */\nclass TransactionsFadeTable extends Component { \n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * Function to subscribe to receive new objects of the body of the table.\n     */\n    subscribeToNewObjects: PropTypes.func,\n    /**\n     * Array of transaction objects.\n     */\n    transactions: PropTypes.array.isRequired\n  };\n  \n  /**\n   * Create a TransactionsFadeTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Subscribe to receive new objects of the body of the table.\n    if (this.props.subscribeToNewObjects)\n      this.props.subscribeToNewObjects();\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, maxRows } = this.props;\n    return (\n      <DynamicTable\n        breakpoint={breakpoint}\n        title='Transactions'\n        columnWidths={['60%', '40%']}\n        maxRows={maxRows}\n        headerRow={[\n          {value: 'Hash', isNumeric: false},\n          {value: 'Amount', isNumeric: true}\n        ]}\n        getBodyRows={this.getBodyRows}\n        footerRow={[\n          {value: null, isNumeric: false},\n          {value: '(simulated data)', isNumeric: true}\n        ]}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows() {\n    const { transactions, loading, error } = this.props;\n    if (loading)\n      return [{mapKey: 'LOADING', cells: [{value: 'Loading...', isNumeric: false, link: null}]}];\n    else if (error)\n      return [{mapKey: 'ERROR', cells: [{value: 'Network error', isNumeric: false, link: null}]}];\n    else {\n      let bodyRows = transactions.map((transaction) => {\n        return {\n          mapKey: transaction.hash,\n          cells: [\n            {\n              value: getHashString(transaction.hash),\n              isNumeric: false,\n              link: `/tx/0x${transaction.hash}`\n            },\n            {value: transaction.amount.toFixed(8).toString() + ' DFN', isNumeric: true, link: null}\n          ]\n        };\n      });\n      return bodyRows;\n    }\n  }\n}\n\nexport default TransactionsFadeTableWithData;\n","/**\n * @file DashCard\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Paper,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport Constants from '../../constants';\n\nconst GridNoWrap = styled(Grid)`\n  && {\n    /* Setting min-width to 0px allows the Grid to narrow past the implied width of its children. */\n    min-width: 0px;\n  }\n`;\n\nconst SvgIconCard = styled(SvgIcon)`\n  && {\n    /* The combination of margin, padding, and font-size explicitly set the height of the card. */\n    margin: 30px;\n    font-size: 42px;\n    opacity: ${props => props.theme.colorDashCardIconOpacity};\n    color: ${props => props.theme.colorDashCardIcon[props.cardindex]};\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-weight: 300;\n    font-size: 14px;\n  }\n`;\n\nconst TypographyValue = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-weight: 200;\n    font-size: 28px;\n  }\n`;\n\n/**\n * This component displays a dashboard card.\n */\nclass DashCard extends Component { \n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string,\n    /**\n     * The d attribute of the SvgIcon path.\n     */\n    svgIconPath: PropTypes.string.isRequired,\n    /**\n     * Function to subscribe to receive new objects of the card using GraphQL.\n     */\n    subscribeToNewObjects: PropTypes.func,\n    /**\n     * The title string of the card.\n     */\n    title: PropTypes.string.isRequired,\n    /**\n     * The value string of the card.\n     */\n    value: PropTypes.string.isRequired\n  };\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Subscribe to receive new objects of the card using GraphQL.\n    if (this.props.subscribeToNewObjects)\n      this.props.subscribeToNewObjects();\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let {\n      cardIndex,\n      className,\n      svgIconPath,\n      title,\n      value\n    } = this.props;\n\n    return (\n      <Paper className={className} elevation={1}>\n        <Grid container direction='row' justify='flex-start' alignItems='center' wrap='nowrap'>\n          <Grid item>\n            <SvgIconCard cardindex={cardIndex}>\n              <path d={svgIconPath} />\n            </SvgIconCard>\n          </Grid>\n          <GridNoWrap container direction='column' justify='center' alignItems='flex-start'>\n            {/* The usage of Grid elements here is required to get Typography noWrap to work. */}\n            <Grid container direction='row' justify='flex-start' alignItems='center'>\n              <GridNoWrap item>\n                <TypographyTitle className={className} noWrap>\n                  {title}\n                </TypographyTitle>\n              </GridNoWrap>\n            </Grid>\n            <Grid container direction='row' justify='flex-start' alignItems='center'>\n              <GridNoWrap item>\n                <TypographyValue className={className} noWrap>\n                  {value}\n                </TypographyValue>\n              </GridNoWrap>\n            </Grid>\n          </GridNoWrap>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default DashCard;\n","/**\n * @file queryNetworkStats\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get the current NetworkStats object.\n * @return {Number} The current NetworkStats object.\n */\nconst queryNetworkStats = gql`\n  {\n    networkStats {\n      id\n      secondsPerBlock\n      transactionsPerSecond\n    }\n  }\n`;\n\nexport default queryNetworkStats;\n","/**\n * @file subscriptionNetworkStats\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL subscription to receive a NetworkStats updates.\n * @return {Object} The updated NetworkStats object.\n */\nconst subscriptionNetworkStats = gql`\n  subscription {\n    networkStats {\n      node {\n        id\n        secondsPerBlock\n        transactionsPerSecond\n      }\n    }\n  }\n`;\n\nexport default subscriptionNetworkStats;\n","/**\n * @file BlockTimeCard\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DashCard from '../DashCard/DashCard';\nimport queryNetworkStats from '../../graphql/queryNetworkStats';\nimport subscriptionNetworkStats from '../../graphql/subscriptionNetworkStats';\nimport Constants from '../../constants';\n\n/**\n * This component displays a dashboard card with seconds per block retrieved via GraphQL.\n */\nclass BlockTimeCard extends Component {\n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let { cardIndex, className } = this.props;\n    \n    return (\n      <Query query={queryNetworkStats}>\n      {({ loading, error, data, subscribeToMore }) => {\n        const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n        let secondsPerBlock;\n        if (loading)\n          secondsPerBlock = 'Loading...';\n        else if (error)\n          secondsPerBlock = 'Network error';\n        else\n          secondsPerBlock = data.networkStats.secondsPerBlock.toFixed(1) + ' s';\n        return (\n          <DashCard\n            className={className}\n            cardIndex={cardIndex}\n            title='Avg Block Time'\n            value={secondsPerBlock}\n            svgIconPath={Constants.ICON_SVG_PATH_BLOCK_TIME}\n            subscribeToNewObjects={subscribeToNewObjects}\n          />\n        );\n      }}\n    </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new NetworkStats objects using subscribeToMore, and update the query's\n   * store by replacing the previous NetworkStats Object with the new NetworkStats object.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionNetworkStats,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n        return {networkStats: subscriptionData.data.networkStats.node};\n      }\n    });\n  }\n}\n\nexport default BlockTimeCard;\n","/**\n * @file TransactionsCard\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DashCard from '../DashCard/DashCard';\nimport queryNetworkStats from '../../graphql/queryNetworkStats';\nimport subscriptionNetworkStats from '../../graphql/subscriptionNetworkStats';\nimport Constants from '../../constants';\n\n/**\n * This component displays a dashboard card with transactions per second retrieved via GraphQL.\n */\nclass TransactionsCard extends Component {\n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let { cardIndex, className } = this.props;\n    \n    return (\n      <Query query={queryNetworkStats}>\n      {({ loading, error, data, subscribeToMore }) => {\n        const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n        let transactionsPerSecond;\n        if (loading)\n          transactionsPerSecond = 'Loading...';\n        else if (error)\n          transactionsPerSecond = 'Network error';\n        else\n          transactionsPerSecond = data.networkStats.transactionsPerSecond.toFixed(1) + ' tps';\n        return (\n          <DashCard\n            className={className}\n            cardIndex={cardIndex}\n            title='Avg Transactions'\n            value={transactionsPerSecond}\n            svgIconPath={Constants.ICON_SVG_PATH_TPS}\n            subscribeToNewObjects={subscribeToNewObjects}\n          />\n        );\n      }}\n    </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new NetworkStats objects using subscribeToMore, and update the query's\n   * store by replacing the previous NetworkStats Object with the new NetworkStats object.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionNetworkStats,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n        return {networkStats: subscriptionData.data.networkStats.node};\n      }\n    });\n  }\n}\n\nexport default TransactionsCard;\n","/**\n * @file queryPrice\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get the the current price.\n * @return {Object} The current Price object.\n */\nconst queryPrice = gql`\n  {\n    price {\n      id\n      price\n    }\n  }\n`;\n\nexport default queryPrice;\n","/**\n * @file subscriptionPrice\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL subscription to receive price updates.\n * @return {Object} The updated Price object.\n */\nconst subscriptionPrice = gql`\n  subscription {\n    price {\n      node {\n        id\n        price\n      }\n    }\n  }\n`;\n\nexport default subscriptionPrice;\n","/**\n * @file PriceCard\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DashCard from '../DashCard/DashCard';\nimport queryPrice from '../../graphql/queryPrice';\nimport subscriptionPrice from '../../graphql/subscriptionPrice';\nimport Constants from '../../constants';\n\n/**\n * This component displays a dashboard card with price data retrieved via GraphQL.\n */\nclass PriceCard extends Component {\n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let { cardIndex, className } = this.props;\n    \n    return (\n      <Query query={queryPrice}>\n        {({ loading, error, data, subscribeToMore }) => {\n          const subscribeToNewObjects = () => this.subscribeToNewObjects(subscribeToMore);\n          let price;\n          if (loading)\n            price = 'Loading...';\n          else if (error)\n            price = 'Network error';\n          else\n            price = '$' + data.price.price.toFixed(2);\n          return (\n            <DashCard\n              className={className}\n              cardIndex={cardIndex}\n              title='Price'\n              value={price}\n              svgIconPath={Constants.ICON_SVG_PATH_PRICE}\n              subscribeToNewObjects={subscribeToNewObjects}\n            />\n          );\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new Price objects using subscribeToMore, and update the query's store by\n   * replacing the previous Price Object with the new Price object.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionPrice,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n        return {price: subscriptionData.data.price.node};\n      }\n    });\n  }\n}\n\nexport default PriceCard;\n","/**\n * @file AreaChart\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Paper,\n  Typography\n} from '@material-ui/core';\nimport shadows from '@material-ui/core/styles/shadows';\nimport {\n  Area,\n  AreaChart as RechartsAreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis\n} from 'recharts';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst StyledPaper = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorChartBackground};\n    padding-right: 16px;\n    padding-bottom: 16px;\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    color: ${props => props.theme.colorBodyText};\n    padding-top: 8px;\n    padding-bottom: 8px;\n    padding-left: 11px;\n    text-align: left;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    font-weight: 300;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n      `\n    }\n  }\n`;\n\nconst StyledAreaChart = styled(RechartsAreaChart)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_CAPTION};\n    font-weight: 400;\n  }\n`;\n\n/**\n * Base class that implements an area chart component.\n */\nclass AreaChart extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, chartHeight, theme } = this.props;\n    const data = this.getData();\n    const tooltipElevation = 2;\n    return (\n      <StyledPaper elevation={1}>\n        <TypographyTitle breakpoint={breakpoint}>{this.getTitle()}</TypographyTitle>\n        { data.length > 0 &&\n          <ResponsiveContainer width='100%' height={chartHeight}>\n            <StyledAreaChart\n              data={data}\n              margin={{ top: 0, right: 0, left: 4, bottom: 0 }}\n              // Setting width to 0 here is a workaround for a problem where ResponsiveContainer\n              // does not resize correctly from large to small.\n              // https://github.com/recharts/recharts/issues/172\n              style={{width: 0}}\n            >\n              <defs>\n                <linearGradient id='colorY' x1='0' y1='0' x2='0' y2='1'>\n                  <stop offset='5%' stopColor={theme.colorChartLine} stopOpacity={0.2}/>\n                  <stop offset='95%' stopColor={theme.colorChartLine} stopOpacity={0.1}/>\n                </linearGradient>\n              </defs>\n              <CartesianGrid\n                stroke={theme.colorChartGrid}\n                vertical={false}\n              />\n              <XAxis\n                dataKey={this.getDataKeyX()}\n                stroke={theme.colorChartAxes}\n                tick={{ fill: theme.colorChartText }}\n                tickFormatter={(tick) => this.getGetTickX(tick)}\n                tickMargin={8}\n                tickSize={6}\n              />\n              <YAxis\n                domain={[\n                  dataMin => this.getDomainMinY(dataMin),\n                  dataMax => this.getDomainMaxY(dataMax)\n                ]}\n                stroke={theme.colorChartAxes}\n                tick={{ fill: theme.colorChartText }}\n                tickFormatter={(tick) => this.getGetTickY(tick)}\n                tickLine={false}\n              />\n              <Tooltip\n                labelFormatter={(value) => this.getGetTooltipX(value)}\n                formatter={(value) => [this.getGetTooltipY(value)]}\n                contentStyle={{\n                  background: theme.colorChartTooltipBackground,\n                  border: null,\n                  borderRadius: 4,\n                  fontSize: Constants.MATERIAL_FONT_SIZE_BODY_2,\n                  boxShadow: shadows[tooltipElevation]\n                }}\n                itemStyle={{ color: theme.colorChartLine }}\n                labelStyle={{ color: theme.colorBodyText }}\n                cursor={{ stroke: theme.colorChartGrid }}\n                animationDuration={300}\n              />\n              <Area\n                type='monotone'\n                dataKey={this.getDataKeyY()}\n                stroke={theme.colorChartLine}\n                strokeWidth={2}\n                fillOpacity={1}\n                fill='url(#colorY)'\n                activeDot={{ stroke: theme.colorChartActiveDotStroke, r: 5 }}\n                animationDuration={1000}\n              />\n            </StyledAreaChart>\n          </ResponsiveContainer>\n        }\n      </StyledPaper>\n    );\n  }\n\n  /**\n   * Return the title of the chart.\n   * @return {String} The title of the chart.\n   * @protected\n   */\n  getTitle() {\n    throw new Error('AreaChart.getTitle() not implemented.');\n  }\n\n  /**\n   * Return an array of objects that describe the chart data.\n   * @return {Array} An array of objects that describe the chart data.\n   * @protected\n   */\n  getData() {\n    throw new Error('AreaChart.getData() not implemented.');\n  }\n\n  /**\n   * Return the key of the data to be displayed in the x-axis.\n   * @return {String} The key of the data to be displayed in the x-axis.\n   * @protected\n   */\n  getDataKeyX() {\n    throw new Error('AreaChart.getDataKeyX() not implemented.');\n  }\n\n  /**\n   * Return the key of the data to be displayed in the y-axis.\n   * @return {String} The key of the data to be displayed in the y-axis.\n   * @protected\n   */\n  getDataKeyY() {\n    throw new Error('AreaChart.getDataKeyY() not implemented.');\n  }\n\n  /**\n   * Return the minimum value of the domain for the Y-axis.\n   * @param {dataMin} value The minumum value of the data.\n   * @return {String} The minimum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMinY(dataMin) {\n    throw new Error('AreaChart.getDomainMinY() not implemented.');\n  }\n\n  /**\n   * Return the maximum value of the domain for the Y-axis.\n   * @param {dataMax} value The maximum value of the data.\n   * @return {String} The maximum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMaxY(dataMax) {\n    throw new Error('AreaChart.getDomainMaxY() not implemented.');\n  }\n\n  /**\n   * Return a string for the x-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tick label.\n   * @protected\n   */\n  getGetTickX(value) {\n    throw new Error('AreaChart.getGetTickX() not implemented.');\n  }\n\n  /**\n   * Return a string for the y-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tick label.\n   * @protected\n   */\n  getGetTickY(value) {\n    throw new Error('AreaChart.getGetTickY() not implemented.');\n  }\n\n  /**\n   * Return a string for the x-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipX(value) {\n    throw new Error('AreaChart.getGetTooltipX() not implemented.');\n  }\n\n  /**\n   * Return a string for the y-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipY(value) {\n    throw new Error('AreaChart.getGetTooltipY() not implemented.');\n  }\n}\n\nexport default AreaChart;\n","/**\n * @file queryDailyNetworkStatses\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get daily network stats for the specified number of days.\n * @return {Array} The array of DailyNetworkStats objects.\n */\nconst queryDailyNetworkStatses = gql`\n  query DailyNetworkStatses($last: Int, $skip: Int) {\n    dailyNetworkStatses(last: $last, skip: $skip, orderBy: date_ASC) {\n      id\n      date\n      numBlocks\n      numTransactions\n    }\n  }\n`;\n\nexport default queryDailyNetworkStatses;\n","/**\n * @file TransactionsChart\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { Query } from \"react-apollo\";\nimport AreaChart from '../AreaChart/AreaChart';\nimport queryDailyNetworkStatses from '../../graphql/queryDailyNetworkStatses';\n\n/**\n * This component displays a number of transactions chart with data retrieved via GraphQL.\n */\nclass TransactionsChartWithData extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, chartHeight, theme } = this.props;\n    return (\n      <Query\n        query={queryDailyNetworkStatses}\n        // Get the last 14 days.\n        variables={{ last: 14 }}\n      >\n        {({ loading, error, data }) => {\n          if (loading) {\n            return (\n              <TransactionsChart\n                dailyNetworkStatses={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                loading\n                breakpoint={breakpoint}\n              />\n            );\n          }\n          else if (error) {\n            return (\n              <TransactionsChart\n                dailyNetworkStatses={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                error\n                breakpoint={breakpoint}\n              />\n            );\n          }\n          else {\n            return (\n              <TransactionsChart\n                dailyNetworkStatses={data.dailyNetworkStatses}\n                chartHeight={chartHeight}\n                theme={theme}\n                breakpoint={breakpoint}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n}\n\n/**\n * This component displays a table of Transaction objects.\n */\nclass TransactionsChart extends AreaChart { \n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * Array of DailyNetworkStatses objects.\n     */\n    dailyNetworkStatses: PropTypes.array.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n  \n  /**\n   * Return the title of the chart.\n   * @return {String} The title of the chart.\n   * @protected\n   */\n  getTitle() {\n    const { error } = this.props;\n    let title = 'Transaction History';\n    if (error)\n      title += ' - Network Error'\n    return title;\n  }\n\n  /**\n   * Return an array of objects that describe the chart data.\n   * @return {Array} An array of objects that describe the chart data.\n   * @protected\n   */\n  getData() {\n    const { dailyNetworkStatses } = this.props;\n    return dailyNetworkStatses;\n  }\n\n  /**\n   * Return the key of the data to be displayed in the x-axis.\n   * @return {String} The key of the data to be displayed in the x-axis.\n   * @protected\n   */\n  getDataKeyX() {\n    return 'date';\n  }\n\n  /**\n   * Return the key of the data to be displayed in the y-axis.\n   * @return {String} The key of the data to be displayed in the y-axis.\n   * @protected\n   */\n  getDataKeyY() {\n    return 'numTransactions';\n  }\n\n  /**\n   * Return the minimum value of the domain for the Y-axis.\n   * @param {dataMin} value The minumum value of the data.\n   * @return {String} The minimum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMinY(dataMin) {\n    return Math.floor(dataMin / 10000) * 10000;\n  }\n\n  /**\n   * Return the maximum value of the domain for the Y-axis.\n   * @param {dataMax} value The maximum value of the data.\n   * @return {String} The maximum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMaxY(dataMax) {\n    return Math.ceil(dataMax / 10000) * 10000;\n  }\n\n  /**\n   * Return a string for the x-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tick label.\n   * @protected\n   */\n  getGetTickX(value) {\n    return new Date(value).toLocaleDateString('default', { timeZone: 'UTC' });\n  }\n\n  /**\n   * Return a string for the y-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tick label.\n   * @protected\n   */\n  getGetTickY(value) {\n    if (value >= 1000) {\n      const k = value / 1000;\n      return k.toFixed(Number.isInteger(k) ? 0 : 1) + 'k';\n    }\n    else\n      return value;\n  }\n\n  /**\n   * Return a string for the x-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipX(value) {\n    return new Date(value).toLocaleDateString('default', { timeZone: 'UTC' });\n  }\n\n  /**\n   * Return a string for the y-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipY(value) {\n    return `Transactions: ${value.toLocaleString()}`;\n  }\n}\n\n// Use the withTheme HOC so that we can use the current theme outside styled components.\nexport default withTheme(TransactionsChartWithData);\n","/**\n * @file queryCandles\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get DFN OHLCV candles for the specified date range.\n * @return {Array} The array of Candle objects.\n */\nconst queryCandles = gql`\n  query Candles($start: DateTime!, $end: DateTime!) {\n    candles(start: $start, end: $end) {\n      timestamp\n      open\n      high\n      low\n      close\n      volume\n    }\n  }\n`;\n\nexport default queryCandles;\n","/**\n * @file PriceChart\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { Query } from \"react-apollo\";\nimport AreaChart from '../AreaChart/AreaChart';\nimport queryCandles from '../../graphql/queryCandles';\n\n/**\n * This component displays a chart of Candle objects with data retrieved via GraphQL.\n */\nclass PriceChartWithData extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Create a PriceChartWithData object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n \n    this.startDate = new Date();\n    this.startDate.setDate(this.startDate.getDate() - 14);\n    this.endDate = new Date();\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, chartHeight, theme } = this.props;\n    return (\n      <Query\n        query={queryCandles}\n        variables={{ start: this.startDate.toISOString(), end: this.endDate.toISOString() }}\n      >\n        {({ loading, error, data }) => {\n          if (loading) {\n            return (\n              <PriceChart\n                candles={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                loading\n                breakpoint={breakpoint}\n              />\n            );\n          }\n          else if (error) {\n            return (\n              <PriceChart\n                candles={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                error\n                breakpoint={breakpoint}\n              />\n            );\n          }\n          else {\n            return (\n              <PriceChart\n                candles={data.candles}\n                chartHeight={chartHeight}\n                theme={theme}\n                breakpoint={breakpoint}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n}\n\n/**\n * This component displays a table of Transaction objects.\n */\nclass PriceChart extends AreaChart { \n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Array of Candle objects.\n     */\n    candles: PropTypes.array.isRequired,\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n  \n  /**\n   * Return the title of the chart.\n   * @return {String} The title of the chart.\n   * @protected\n   */\n  getTitle() {\n    const { error } = this.props;\n    let title = 'Price History';\n    if (error)\n      title += ' - Network Error'\n    return title;\n  }\n\n  /**\n   * Return an array of objects that describe the chart data.\n   * @return {Array} An array of objects that describe the chart data.\n   * @protected\n   */\n  getData() {\n    const { candles } = this.props;\n    return candles;\n  }\n\n  /**\n   * Return the key of the data to be displayed in the x-axis.\n   * @return {String} The key of the data to be displayed in the x-axis.\n   * @protected\n   */\n  getDataKeyX() {\n    return 'timestamp';\n  }\n\n  /**\n   * Return the key of the data to be displayed in the y-axis.\n   * @return {String} The key of the data to be displayed in the y-axis.\n   * @protected\n   */\n  getDataKeyY() {\n    return 'close';\n  }\n\n  /**\n   * Return the minimum value of the domain for the Y-axis.\n   * @param {dataMin} value The minumum value of the data.\n   * @return {String} The minimum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMinY(dataMin) {\n    return Math.floor(dataMin);\n  }\n\n  /**\n   * Return the maximum value of the domain for the Y-axis.\n   * @param {dataMax} value The maximum value of the data.\n   * @return {String} The maximum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMaxY(dataMax) {\n    return Math.ceil(dataMax);\n  }\n\n  /**\n   * Return a string for the x-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tick label.\n   * @protected\n   */\n  getGetTickX(value) {\n    return new Date(value).toLocaleDateString('default', { timeZone: 'UTC' });\n  }\n\n  /**\n   * Return a string for the y-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tick label.\n   * @protected\n   */\n  getGetTickY(value) {\n    return `$${value.toFixed(2)}`;\n  }\n\n  /**\n   * Return a string for the x-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipX(value) {\n    return new Date(value).toLocaleDateString('default', { timeZone: 'UTC' });\n  }\n\n  /**\n   * Return a string for the y-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipY(value) {\n    return `DFN [IOU] Price: $${value.toFixed(2)}`;\n  }\n}\n\n// Use the withTheme HOC so that we can use the current theme outside styled components.\nexport default withTheme(PriceChartWithData);\n","/**\n * @file HomePage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport Fade from 'react-reveal/Fade';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport BlocksSlideTable from '../BlocksSlideTable/BlocksSlideTable';\nimport TransactionsFadeTable from '../TransactionsFadeTable/TransactionsFadeTable';\nimport DashCard from '../DashCard/DashCard';\nimport BlockTimeCard from '../BlockTimeCard/BlockTimeCard';\nimport TransactionsCard from '../TransactionsCard/TransactionsCard';\nimport PriceCard from '../PriceCard/PriceCard';\nimport TransactionsChart from '../TransactionsChart/TransactionsChart';\nimport PriceChart from '../PriceChart/PriceChart';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-left: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-right: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridSectionTables = styled(GridSection)`\n  && {\n    padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n  }\n`;\n\nconst GridCard = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        width: calc(25% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP*3/4 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.MD || breakpoint === Breakpoints.SM) && `\n        width: calc(50% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP/2 + 'px'});\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst GridChart = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG || breakpoint === Breakpoints.MD) && `\n        width: calc(50% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP/2 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst GridTable = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG || breakpoint === Breakpoints.MD) && `\n        width: calc(50% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP/2 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst CardBlocks = styled(DashCard)`\n  && {\n    background: ${props => props.theme.colorDashCardBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst CardBlockTime = styled(BlockTimeCard)`\n  && {\n    background: ${props => props.theme.colorDashCardBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst CardTransactions = styled(TransactionsCard)`\n  && {\n    background: ${props => props.theme.colorDashCardBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst CardPrice = styled(PriceCard)`\n  && {\n    background: ${props => props.theme.colorDashCardBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\n/**\n * Component for the home page.\n */\nclass HomePage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a HomePage object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      blockHeight: 0\n    };\n\n    // Bind to make 'this' work in callbacks.\n    this.handleAddNewBlock = this.handleAddNewBlock.bind(this);\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        {this.getSectionCards()}\n        {this.getSectionCharts()}\n        {this.getSectionTables()}\n      </div>\n    );\n  }\n\n  /**\n   * Return the elements for the Cards section based on the current breakpoint.\n   * @return {Object} The elements for the Cards section based on the current breakpoint.\n   * @private\n   */\n  getSectionCards()\n  {\n    const { breakpoint } = this.props;\n    const { blockHeight } = this.state;\n\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            timeout={500}\n          >\n            <CardBlocks\n              cardIndex={0}\n              title='Blocks'\n              value={blockHeight ? blockHeight.toLocaleString() : 'Loading...'}\n              svgIconPath={Constants.ICON_SVG_PATH_BLOCK}\n            />\n          </Fade>\n        </GridCard>\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            delay={50}\n            timeout={500}\n          >\n            <CardBlockTime cardIndex={1} />\n          </Fade>\n        </GridCard>\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            delay={100}\n            timeout={500}\n          >\n            <CardTransactions cardIndex={2} />\n          </Fade>\n        </GridCard>\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            delay={150}\n            timeout={500}\n          >\n            <CardPrice cardIndex={3} />\n          </Fade>\n        </GridCard>\n      </GridSection>\n    );\n  }\n\n  /**\n   * Return the elements for the Charts section based on the current breakpoint.\n   * @return {Object} The elements for the Charts section based on the current breakpoint.\n   * @private\n   */\n  getSectionCharts()\n  {\n    const { breakpoint } = this.props;\n\n    const chartHeight = 352;\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridChart item breakpoint={breakpoint}>\n          <Fade\n            timeout={500}\n          >\n            <TransactionsChart chartHeight={chartHeight} breakpoint={breakpoint} />\n          </Fade>\n        </GridChart>\n        <GridChart item breakpoint={breakpoint}>\n          <Fade\n            delay={50}\n            timeout={500}\n          >\n            <PriceChart chartHeight={chartHeight} breakpoint={breakpoint} />\n          </Fade>\n        </GridChart>\n      </GridSection>\n    );\n  }\n\n  /**\n   * Return the elements for the Tables section based on the current breakpoint.\n   * @return {Object} The elements for the Tables section based on the current breakpoint.\n   * @private\n   */\n  getSectionTables()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <GridSectionTables container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridTable item breakpoint={breakpoint}>\n          <Fade\n            timeout={500}\n          >\n            <BlocksSlideTable\n              breakpoint={breakpoint}\n              maxRows={8}\n              handleAddNewBlock={this.handleAddNewBlock}\n            />\n          </Fade>\n        </GridTable>\n        <GridTable item breakpoint={breakpoint}>\n          <Fade\n            delay={50}\n            timeout={500}\n          >\n            <TransactionsFadeTable breakpoint={breakpoint} maxRows={8} />\n          </Fade>\n        </GridTable>\n      </GridSectionTables>\n    );\n  }\n\n  /**\n   * Callback fired when a block is added.\n   * @param {Object} block The block object being added.\n   * @private\n   */\n  handleAddNewBlock(block) {\n    this.setState({\n      blockHeight: block.height\n    });\n  }\n}\n\nexport default HomePage;\n","/**\n * @file AccountsPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller, Todd Kitchens, and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport styled from 'styled-components';\nimport {\n  Typography\n} from '@material-ui/core';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nclass AccountsPage extends TrackablePage {\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <div style={{ marginTop: '32px', marginLeft: '32px' }}>\n        <TypographyHeading breakpoint={breakpoint}>Accounts</TypographyHeading>\n        <TypographyBody>Accounts page coming soon.</TypographyBody>\n      </div>\n    );\n  }\n}\n\nexport default AccountsPage;\n","/**\n * @file TablePager\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { withTheme } from 'styled-components';\nimport {\n  Grid,\n  IconButton,\n  InputBase,\n  MenuItem,\n  Select,\n  TableCell,\n  Toolbar,\n  Typography\n} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst StyledTableCell = styled(TableCell)`\n  && {\n    &:last-child {\n      padding: 0px;\n    }\n  }\n`;\n\nconst StyledToolbar = styled(Toolbar)`\n  && {\n    color: ${props => props.theme.colorBodyTextDim};\n    min-height: auto;\n    padding-left: 2px;\n    padding-right: 2px;\n  }\n`;\n\nconst TypographyCaption = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_CAPTION};\n    /* Padding to align rows text and count text with rows per page number for non-XS breakpoints. */\n    padding-bottom: 1px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-bottom: 0px;\n      `\n    }\n  }\n`;\n\nconst TypographyRows = styled(TypographyCaption)`\n  && {\n    margin-left: 6px;\n    margin-right: 14px;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        margin-right: 7px;\n      `\n    }\n  }\n`;\n\nconst TypographyCount = styled(TypographyCaption)`\n  && {\n    margin-left: 41px;\n    margin-right: 2px;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM && `\n        margin-left: 20px;\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        margin-left: 20px;\n        margin-right: 6px;\n      `)\n    }\n  }\n`;\n\nconst StyledSelect = styled(({ ...other }) => (\n    <Select\n      classes={{\n        icon: 'icon',\n        root: 'root',\n        selectMenu: 'selectMenu'\n      }}\n      {...other}\n    />\n  ))`\n  && {\n    color: ${props => props.theme.colorBodyTextDim};\n    padding-left: 4px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_CAPTION};\n    & .icon {\n      color: ${props => props.theme.colorBodyTextDim};\n      /* Move icon up for non-XS breakpoints. */\n      ${({ breakpoint }) =>\n        breakpoint !== Breakpoints.XS && `\n          top: 0px;\n        `\n      }\n    }\n    & .root {\n      /**\n       * Used to move the rows per page number and the down arrow closer together. Note that this\n       * causes problems (number abbreviated with ellipses) for a rows per page number with more\n       * than two digits, so if support is desired for more than 99 rows per page, we need to figure\n       * out how to move the arrow closer in a different way, or we could simply remove the line\n       * below and not move it closer.\n       */\n      margin-right: -6px;\n    }\n    & .selectMenu {\n      /* Vertically center rows per page number. Not sure why it is not already centered. */\n      vertical-align: middle;\n      display: table-cell;\n    }\n  }\n`;\n\nconst StyledMenuItem = styled(MenuItem)`\n  && {\n    color: ${props => props.theme.colorBodyTextDim};\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n  }\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  && {\n    padding: ${\n      ((Constants.TABLE_ROW_HEIGHT_SM_AND_UP - Constants.MATERIAL_UI_ICON_BUTTON_FONT_SIZE) / 2) + 'px'\n    };\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding: ${\n          ((Constants.TABLE_ROW_HEIGHT_XS - Constants.MATERIAL_UI_ICON_BUTTON_FONT_SIZE) / 2) + 'px'\n        };\n      `\n    }\n    &:disabled {\n      color: ${props => fade(props.theme.colorBodyTextDim, props.theme.opacityActionDisabled)};\n    }\n    &:hover {\n      background: ${props => fade(props.theme.colorIconButtonHover, props.theme.opacityActionHover)};\n      color: ${props => props.theme.colorIconButtonHover};\n      /* Reset on touch devices. */\n      @media (hover: none) {\n        background: inherit;\n        color: inherit;\n      }\n    }\n  }\n`;\n\nconst StyledIconButtonNotLast = styled(StyledIconButton)`\n  && {\n    margin-right: 4px;\n  }\n`;\n\n/**\n * Component that provides table pagination actions. The Material-UI TablePaginationActions\n * component is basic (e.g., no first and last buttons) and does not provide enough access for\n * styling (e.g., IconButton cannot by styled).\n */\nclass TablePagerActions extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The total number of rows.\n     */\n    count: PropTypes.number.isRequired,\n    /**\n     * Callback fired when the page is changed.\n     *\n     * @param {object} event The event source of the callback.\n     * @param {number} page The selected page.\n     */\n    onChangePage: PropTypes.func.isRequired,\n    /**\n     * The zero-based index of the current page.\n     */\n    page: PropTypes.number.isRequired,\n    /**\n     * The number of rows per page.\n     */\n    rowsPerPage: PropTypes.number.isRequired\n  };\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {\n      breakpoint,\n      count,\n      onChangePage,\n      page,\n      rowsPerPage,\n      ...other\n    } = this.props;\n\n    const lastPage = Math.ceil(count / rowsPerPage) - 1;\n    return (\n      <div {...other}>\n        <StyledIconButtonNotLast\n          breakpoint={breakpoint}\n          color='inherit'\n          onClick={event => onChangePage(event, 0)}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          <FirstPageIcon />\n        </StyledIconButtonNotLast>\n        <StyledIconButtonNotLast\n          breakpoint={breakpoint}\n          color='inherit'\n          onClick={event => onChangePage(event, page - 1)}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          <KeyboardArrowLeft />\n        </StyledIconButtonNotLast>\n        <StyledIconButtonNotLast\n          breakpoint={breakpoint}\n          color='inherit'\n          onClick={event => onChangePage(event, page + 1)}\n          disabled={page >= lastPage}\n          aria-label=\"Next Page\"\n        >\n          <KeyboardArrowRight />\n        </StyledIconButtonNotLast>\n        <StyledIconButton\n          breakpoint={breakpoint}\n          color='inherit'\n          onClick={event => onChangePage(event, Math.max(0, lastPage))}\n          disabled={page >= lastPage}\n          aria-label=\"Last Page\"\n        >\n          <LastPageIcon />\n        </StyledIconButton>\n      </div>\n    );\n  }\n}\n\n/**\n * A TableCell-based component for placing inside a TableFooter for pagination. The Material-UI\n * TablePagination component does not provide enough access for styling (e.g., its pop-up menu\n * cannot be fully styled at this time), so we implement our own Material Design pagination\n * component.\n * \n * Spacing is styled to match table at console.firebase.google.com/.../authentication/users\n * \n */\nclass TablePager extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The total number of rows.\n     */\n    count: PropTypes.number.isRequired,\n    /**\n     * Callback fired when the page is changed.\n     *\n     * @param {object} event The event source of the callback.\n     * @param {number} page The selected page.\n     */\n    onChangePage: PropTypes.func.isRequired,\n    /**\n     * Callback fired when the number of rows per page is changed.\n     *\n     * @param {object} event The event source of the callback.\n     */\n    onChangeRowsPerPage: PropTypes.func,\n    /**\n     * The zero-based index of the current page.\n     */\n    page: PropTypes.number.isRequired,\n    /**\n     * The number of rows per page.\n     */\n    rowsPerPage: PropTypes.number.isRequired,\n    /**\n     * Customizes the options of the rows per page select field. If less than two options are\n     * available, no select field will be displayed.\n     */\n    rowsPerPageOptions: PropTypes.array.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @public\n   */\n  componentDidUpdate() {\n    const { count, onChangePage, page, rowsPerPage } = this.props;\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page > newLastPage) {\n      onChangePage(null, newLastPage);\n    }\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const colSpan = 1000; // span all table columns\n    return (\n      <StyledTableCell colSpan={colSpan} padding='checkbox'>\n        {this.getToolbar()}\n      </StyledTableCell>\n    );\n  }\n\n  /**\n   * Return the elements for the Toolbar component.\n   * @return {Object} The elements for the Toolbar component.\n   * @private\n   */\n  getToolbar() {\n    const { breakpoint } = this.props;\n    return (\n      breakpoint === Breakpoints.XS ?\n        // For XS, put the actions buttons on a second row, and center both rows.\n        <StyledToolbar>\n          <Grid container direction='column' justify='flex-start' alignItems='center'>\n            <Grid container direction='row' justify='center' alignItems='center' wrap='nowrap'>\n              {this.getRowsSelectCount()}\n            </Grid>\n            <Grid container direction='row' justify='center' alignItems='center' wrap='nowrap'>\n              {this.getActions()}\n            </Grid>\n          </Grid>\n        </StyledToolbar>\n      :\n        <StyledToolbar>\n          <Grid container direction='row' justify='flex-end' alignItems='center' wrap='nowrap'>\n            {this.getRowsSelectCount()}\n            {this.getActions()}\n          </Grid>\n        </StyledToolbar>\n    );\n  }\n\n  /**\n   * Return the elements for the rows text, the Select component, and the count text.\n   * @return {Object} The elements for the rows text, the Select component, and the count text.\n   * @private\n   */\n  getRowsSelectCount() {\n    const {\n      breakpoint,\n      onChangeRowsPerPage,\n      rowsPerPage,\n      rowsPerPageOptions,\n      theme\n    } = this.props;\n    const rowsText = (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) ?\n      'Rows:' : 'Rows per page:';\n    return (\n      <Fragment>  \n        {rowsPerPageOptions.length > 1 && (\n          <Fragment>\n            <TypographyRows breakpoint={breakpoint} color='inherit'>\n              {rowsText}\n            </TypographyRows>\n            <StyledSelect\n              breakpoint={breakpoint}\n              input={<InputBase />}\n              value={rowsPerPage}\n              onChange={onChangeRowsPerPage}\n              // Unable to style the Menu background using styled-components.\n              MenuProps={{\n                PaperProps: {style: {background: theme.colorTableBackgroundPrimary}}\n              }}\n            >\n              {rowsPerPageOptions.map(rowsPerPageOption => (\n                <StyledMenuItem\n                  key={rowsPerPageOption}\n                  value={rowsPerPageOption}\n                >\n                  {rowsPerPageOption}\n                </StyledMenuItem>\n              ))}\n            </StyledSelect>\n          </Fragment>\n        )}\n        <TypographyCount breakpoint={breakpoint} color='inherit'>\n          {this.getCountText()}\n        </TypographyCount>\n      </Fragment>\n    );\n  }\n\n  /**\n   * Return the text for the count (e.g., 1-10 of 120).\n   * @return {Object} The text for the count.\n   * @private\n   */\n  getCountText() {\n    const {\n      breakpoint,\n      count,\n      page,\n      rowsPerPage\n    } = this.props;\n\n    const from = count === 0 ? 0 : page * rowsPerPage + 1;\n    const to = Math.min(count, (page + 1) * rowsPerPage);\n\n    let total;\n    if (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) {\n      if (count >= 1000000000) {\n        const t = count / 1000000000;\n        total = t.toFixed(Number.isInteger(t) ? 0 : 1) + 'T';\n      }\n      else if (count >= 1000000) {\n        const m = count / 1000000;\n        total = m.toFixed(Number.isInteger(m) ? 0 : 1) + 'M';\n      }\n      else if (count >= 1000) {\n        const k = count / 1000;\n        total = k.toFixed(Number.isInteger(k) ? 0 : 1) + 'k';\n      }\n      else\n      total = count.toFixed(0);\n    }\n    else\n      total = count.toLocaleString();\n\n    return `${from.toLocaleString()}-${to.toLocaleString()} of ${total}`;\n  }\n\n  /**\n   * Return the elements for the TablePagerActions component.\n   * @return {Object} The elements for the TablePagerActions component.\n   * @private\n   */\n  getActions() {\n    const {\n      breakpoint,\n      count,\n      onChangePage,\n      page,\n      rowsPerPage\n    } = this.props;\n    return (\n      <TablePagerActions\n        breakpoint={breakpoint}\n        count={count}\n        onChangePage={onChangePage}\n        page={page}\n        rowsPerPage={rowsPerPage}\n      />\n    );\n  }\n}\n\n// Use the withTheme HOC so that we can use the current theme outside styled components.\nexport default withTheme(TablePager);\n","/**\n * @file PagedTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  CircularProgress,\n  Fade,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport TablePager from '../TablePager/TablePager';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst StyledPaper = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorTableBackgroundPrimary};\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    color: ${props => props.theme.colorBodyText};\n    padding-top: 8px;\n    padding-bottom: 4px;\n    padding-left: 11px;\n    text-align: left;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    font-weight: 300;\n  }\n`;\n\nconst DivCircularProgress = styled.div`\n  && {\n    position: absolute;\n    /* Set to modal z-index so that progress indicator is above table.  */\n    z-index: ${zIndex.modal};\n    /* Add padding under the progress indicator for XS to compensate for the larger footer. */\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-bottom: 30px;\n      `\n    }\n  }\n`;\n\nconst StyledCircularProgress = styled(CircularProgress)`\n  && {\n    color: ${props => props.theme.colorBodyButtonBackground};\n  }\n`;\n\nconst StyledTable = styled(Table)`\n  && {\n    /* Same easing as Material-UI . */\n    transition: ${'opacity ' + duration.standard + 'ms ' + easing.easeInOut};\n    opacity: ${props => props.loading ? 0.5 : 1.0};\n    font-family: ${Constants.FONT_PRIMARY};\n  }\n`;\n\nconst StyledTableRow = styled(TableRow)`\n  && {\n    height: ${Constants.TABLE_ROW_HEIGHT_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        height: ${Constants.TABLE_ROW_HEIGHT_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst TableRowFooter = styled(StyledTableRow)`\n  && {\n    border-top-color: ${props => props.theme.colorTableRowBorder};\n    border-top-style: solid;\n    border-top-width: 2px;\n  }\n`;\n\nconst StyledTableCell = styled(TableCell)`\n  && {\n    border-color: ${props => props.theme.colorTableRowBorder};\n    color: ${props => props.theme.colorBodyText};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n    white-space: nowrap;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.FONT_SIZE_TABLE_XS};\n      `\n    }\n  }\n`;\n\nconst TableCellHeader = styled(StyledTableCell)`\n  && {\n    border-bottom-style: solid;\n    border-bottom-width: 2px;\n    color: ${props => props.theme.colorBodyTextDim};\n    font-weight: 500;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\n/**\n * Class that implements a table component that supports pagination.\n */\nclass PagedTable extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * An array that specifies the column widths of the table.\n     */    \n    columnWidths: PropTypes.array.isRequired,\n    /**\n     * Return the Relay-compliant connection object from the data retrieved by the query.\n     * @param {Object} data The data retrieved by the query.\n     * @return {Object} The connection object.\n     */\n    getDataConnection: PropTypes.func.isRequired,\n    /**\n     * Return an array of objects that describe the body rows, where each object contains:\n     *  mapKey: A unique key that identifies the row.\n     *  cells: An array of objects that describe the cells of the row, where each object contains:\n     *    value: String containing the value of the cell.\n     *    isNumeric: True if the cell contains a numeric value, false otherwise.\n     *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n     *      for no link.\n     * @param {Object} data The data retrieved by the query.\n     * @return {Array} An array of objects that describe the body rows.\n     */\n    getBodyRows: PropTypes.func.isRequired,\n    /**\n     * An array of objects that describe the cells of the header row, where each object contains:\n     *  value: String containing the value of the cell.\n     *  isNumeric: True if the cell contains a numeric value, false otherwise.\n     *  link: Optional string which provides a link for the cell (to= prop of Link). Set to null for\n     *    no link.\n     */\n    headerRow: PropTypes.array.isRequired,\n    /**\n     * A Relay-compliant connection query document (gql`...`) to retrieve the table data. See\n     * queryBlocksConnection.js for an example of the required query parameters and shape.\n     */\n    query: PropTypes.object.isRequired,\n    /**\n     * GraphQL query to get total count of rows.\n     */\n    queryCount: PropTypes.object.isRequired,\n    /**\n     * The title of the table.\n     */\n    title: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Create a PagedTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n    this.state = {\n      pageIndex: 0,\n      priorPageIndex: 0,\n      priorStartCursor: null,\n      priorEndCursor: null,\n      rowsPerPage: 10\n    };\n\n    this.data = null;\n    this.count = 0;\n    this.firstId = null;\n    this.startCursor = null;\n    this.endCursor = null;\n\n    // Bind to make 'this' work in callbacks.\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { title } = this.props;\n    return (\n      <StyledPaper elevation={1}>\n        <TypographyTitle>{title}</TypographyTitle>\n        {this.getTableElements()}\n      </StyledPaper>\n    );\n  }\n\n  /**\n   * Return the elements for the table.\n   * @return {Object} The elements for the table.\n   * @private\n   */\n  getTableElements() {\n    const { breakpoint, columnWidths, getDataConnection, query, queryCount } = this.props;\n    const { pageIndex, priorPageIndex, priorStartCursor, priorEndCursor, rowsPerPage } = this.state;\n\n    // Determine the query variables for the current page.\n    let variables;\n    const getCount = this.count === 0;\n    if (getCount)\n      variables = {first: rowsPerPage};\n    else {\n      const lastPageIndex = Math.ceil(this.count / rowsPerPage) - 1;\n      if (pageIndex === priorPageIndex + 1)\n        variables = {after: priorEndCursor, first: rowsPerPage};\n      else if (pageIndex === priorPageIndex - 1)\n        variables = {before: priorStartCursor, last: rowsPerPage};\n      else if (pageIndex === lastPageIndex) {\n        const lastPageRows = this.count - pageIndex * rowsPerPage;\n        variables = {last: lastPageRows};\n      }\n      else {\n        // We query the first rowsPerPage even in the case when the first page button is clicked.\n        // We count on the Apollo cache returning the same rows every time for this query, based on\n        // the Query fetchPolicy. Specifying \"where: { id_lte: this.firstId }\" would result in a\n        // double fetch when the page is loaded.\n        variables = {first: rowsPerPage};\n        //variables = {where: { id_lte: this.firstId }, first: rowsPerPage};\n      }\n    }\n\n    return (\n      <Query\n        // Do not use the Apollo cache when getCount is true.\n        fetchPolicy={getCount ? 'network-only' : null}\n        query={query}\n        variables={variables}\n      >\n        {({ loading, error, data }) => {\n          if (!loading && !error) {\n            this.data = data;\n            const connection = getDataConnection(this.data);\n            if (this.firstId === null && connection.edges.length) // first query\n              this.firstId = connection.edges[0].node.id;\n            this.startCursor = connection.pageInfo.startCursor;\n            this.endCursor = connection.pageInfo.endCursor;\n          }\n\n          return (\n            <Query\n              // Do not use the Apollo cache when getCount is true.\n              fetchPolicy={getCount ? 'network-only' : null}\n              query={queryCount}\n              skip={this.firstId === null}\n              variables={{where: { id_lte: this.firstId }}}\n            >\n              {({ loading: loadingCount, error: errorCount, data: dataCount }) => {\n                if (dataCount != null && !loadingCount && !errorCount) {\n                  const connection = getDataConnection(dataCount);\n                  this.count = connection.aggregate.count;\n                }\n                return (\n                  <Grid container\n                    direction='column'\n                    justify='center'\n                    alignItems='center'\n                  >\n                    <Fade in={loading} timeout={duration.standard} mountOnEnter unmountOnExit>\n                      <DivCircularProgress breakpoint={breakpoint}>\n                        <StyledCircularProgress size={Constants.MATERIAL_CIRCULAR_INDICATOR_SIZE} />\n                      </DivCircularProgress>\n                    </Fade>\n                    <StyledTable loading={loading ? 1 : 0}>\n                      <colgroup>\n                        {columnWidths.map((width, index) => {\n                          // The column width settings seem to be ignored in many cases, depending on cell\n                          // length. That is, when cell lengths are long, the widths are ignored.\n                          return (\n                            <col key={index} width={width} />\n                          );\n                        })}\n                      </colgroup>\n                      <TableHead>\n                        {this.getHeaderRowElement()}\n                      </TableHead>\n                      <TableBody>\n                        {this.getBodyRowElements()}\n                      </TableBody>\n                      <TableFooter>\n                        {this.getFooterRowElement(loadingCount, errorCount, dataCount)}\n                      </TableFooter>\n                    </StyledTable>\n                  </Grid>\n                );\n              }}\n            </Query>\n          );\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Return the element for the header row.\n   * @return {Object} The element for the header row.\n   * @private\n   */\n  getHeaderRowElement() {\n    const { breakpoint, headerRow } = this.props;\n    return (\n      <StyledTableRow breakpoint={breakpoint}>\n        {headerRow.map((cell, index) => {\n          return (\n            // Using index as the key is fine here and for cells in other rows, since we never add,\n            // remove, reorder, or filter items in the cell arrays.\n            <TableCellHeader\n              breakpoint={breakpoint}\n              key={index}\n              align={cell.isNumeric ? 'right' : 'inherit'}\n              padding='checkbox'\n            >\n              {cell.link != null ?\n                <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                cell.value\n              }\n            </TableCellHeader>\n          );\n        })}\n      </StyledTableRow>\n    );\n  }\n\n  /**\n   * Return the elements for all of the body rows.\n   * @return {Object} The elements for all of the body rows.\n   * @private\n   */\n  getBodyRowElements() {\n    const { getBodyRows } = this.props;\n    if (this.data) {\n      let rows = getBodyRows(this.data);\n      return rows.map((bodyRow, index) => {\n        return this.getBodyRowElement(bodyRow);\n      });\n    }\n    else\n      return null;\n  }\n\n  /**\n   * Return the element for the specified body row.\n   * @param {Object} bodyRow Object that describes the body row.\n   * @return {Object} The element for the specified body row.\n   * @private\n   */\n  getBodyRowElement(bodyRow) {\n    const { breakpoint } = this.props;\n    return (\n      <StyledTableRow breakpoint={breakpoint} key={bodyRow.mapKey}>\n        {bodyRow.cells.map((cell, index) => {\n          return (\n            <StyledTableCell\n              breakpoint={breakpoint}\n              key={index}\n              align={cell.isNumeric ? 'right' : 'inherit'}\n              padding='checkbox'\n            >\n              {cell.link != null ?\n                <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                cell.value\n              }\n            </StyledTableCell>\n          );\n        })}\n      </StyledTableRow>\n    );\n  }\n\n  /**\n   * Return the element for the footer row.\n   * @return {Object} The element for the footer row.\n   * @private\n   */\n  getFooterRowElement() {\n    const { breakpoint } = this.props;\n    const { pageIndex, rowsPerPage } = this.state;\n    const show = this.count > 0;\n    return (\n      <Fade in={show} timeout={duration.standard}>\n        <TableRowFooter breakpoint={breakpoint}>\n          <TablePager\n            breakpoint={breakpoint}\n            rowsPerPageOptions={[10, 25, 50]}\n            rowsPerPage={rowsPerPage}\n            page={pageIndex}\n            count={this.count}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n          />\n        </TableRowFooter>\n      </Fade>\n    );\n  }\n\n  /**\n   * Callback fired when the page is changed.\n   * @param {Object} event The event source of the callback.\n   * @param {Object} page The selected page.\n   * @private\n   */\n  handleChangePage(event, page) {\n    this.setState(prevState => ({\n      pageIndex: page,\n      priorPageIndex: prevState.pageIndex,\n      priorStartCursor: this.startCursor,\n      priorEndCursor: this.endCursor\n    }));\n  }\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   * @param {Object} event The event source of the callback.\n   * @private\n   */\n  handleChangeRowsPerPage(event) {\n    // When rows per page is changed, reset everything.\n    const { rowsPerPage } = this.state;\n    if (rowsPerPage !== event.target.value) {\n      this.data = null;\n      this.count = 0;\n      this.firstId = null;\n      this.startCursor = null;\n      this.endCursor = null;\n      this.setState({\n        pageIndex: 0,\n        priorPageIndex: 0,\n        priorStartCursor: null,\n        priorEndCursor: null,\n        rowsPerPage: event.target.value\n      });\n    }\n  }\n}\n\nexport default PagedTable;\n","/**\n * @file queryBlocksConnection\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL Relay-compliant connection query to get a BlockConnection object.\n * @return {Object} The BlockConnection object.\n */\nconst queryBlocksConnection = gql`\n  query BlocksConnection(\n    $where: BlockWhereInput, $skip: Int, $after: String, $before: String, $first: Int, $last: Int) {\n    blocksConnection(\n      where: $where, orderBy: height_DESC, skip: $skip, after: $after, before: $before,\n      first: $first, last: $last) {\n      edges {\n        node {\n          id\n          height\n          timestamp\n          numTransactions\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n      }\n    }\n  }\n`;\n\nexport default queryBlocksConnection;\n","/**\n * @file queryBlocksCount\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get total count of blocks.\n * @return {Object} The total count of blocks.\n */\nconst queryBlocksCount = gql`\n  query BlocksConnection($where: BlockWhereInput) {\n    blocksConnection(where: $where) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nexport default queryBlocksCount;\n","/**\n * @file BlocksPagedTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PagedTable from '../PagedTable/PagedTable';\nimport queryBlocksConnection from '../../graphql/queryBlocksConnection';\nimport queryBlocksCount from '../../graphql/queryBlocksCount';\n\n/**\n * This component displays a paged table of Block objects.\n */\nclass BlocksPagedTable extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a BlocksPagedTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <PagedTable\n        breakpoint={breakpoint}\n        title='Blocks'\n        columnWidths={['30%', '40%', '30%']}\n        headerRow={[\n          {value: 'Height', isNumeric: false},\n          {value: 'Timestamp', isNumeric: false},\n          {value: 'Transactions', isNumeric: true}\n        ]}\n        query={queryBlocksConnection}\n        queryCount={queryBlocksCount}\n        getDataConnection={data => data.blocksConnection}\n        getBodyRows={this.getBodyRows}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @param {Object} data The data retrieved by getQuery().\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows(data) {\n    let bodyRows = data.blocksConnection.edges.map((edge) => {\n      const block = edge.node;\n      const date = new Date(block.timestamp);\n      return {\n        mapKey: block.height,\n        cells: [\n          {\n            value: block.height.toLocaleString(),\n            isNumeric: false,\n            link: `/block/${block.height}`\n          },\n          {value: date.toLocaleString(), isNumeric: false},\n          {value: block.numTransactions.toLocaleString(), isNumeric: true}\n        ]\n      };\n    });\n    return bodyRows;\n  }\n}\n\nexport default BlocksPagedTable;\n","/**\n * @file BlocksPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport styled from 'styled-components';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport Fade from 'react-reveal/Fade';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport BlocksPagedTable from '../BlocksPagedTable/BlocksPagedTable';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridPagedTable = styled(Grid)`\n  && {\n    width: 100%;\n  }\n`;\n\nclass BlocksPage extends TrackablePage {\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridPagedTable item breakpoint={breakpoint}>\n          <Fade timeout={500}>\n            <BlocksPagedTable breakpoint={breakpoint} />\n          </Fade>\n        </GridPagedTable>\n      </GridSection>\n    );\n  }\n}\n\nexport default BlocksPage;\n","/**\n * @file BlockTransactionsTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DynamicTable from '../DynamicTable/DynamicTable';\nimport getHashString from '../../utils/getHashString';\n\n/**\n * This component displays a table of a block's Transaction objects.\n */\nclass BlockTransactionsTable extends Component { \n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * Array of transaction objects.\n     */\n    transactions: PropTypes.array.isRequired\n  };\n\n  /**\n   * Create a BlockTransactionsTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, maxRows } = this.props;\n    return (\n      <DynamicTable\n        breakpoint={breakpoint}\n        title='Transactions'\n        columnWidths={['60%', '40%']}\n        maxRows={maxRows}\n        headerRow={[\n          {value: 'Hash', isNumeric: false},\n          {value: 'Amount', isNumeric: true}\n        ]}\n        getBodyRows={this.getBodyRows}\n        footerRow={[\n          {value: null, isNumeric: false},\n          {value: '(simulated data)', isNumeric: true}\n        ]}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows() {\n    const { transactions } = this.props;\n    if (transactions) {\n      let bodyRows = transactions.map((transaction) => {\n        return {\n          mapKey: transaction.hash,\n          cells: [\n            {\n              value: getHashString(transaction.hash),\n              isNumeric: false,\n              link: `/tx/0x${transaction.hash}`\n            },\n            {value: transaction.amount.toFixed(8).toString() + ' DFN', isNumeric: true, link: null}\n          ]\n        };\n      });\n      return bodyRows;\n    }\n    else\n      return [];\n  }\n}\n\nexport default BlockTransactionsTable;\n","/**\n * @file queryBlock\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get a block.\n * @param {Number} height The height of the block to fetch.\n * @return {Object} The Block object with the specified height.\n */\nconst queryBlock = gql`\n  query Block($height: Int!) {\n    block(height: $height) {\n      id\n      height\n      timestamp\n      numTransactions\n      transactions {\n        id\n        hash\n        amount\n      }\n    }\n  }\n`;\n\nexport default queryBlock;\n","/**\n * @file BlockDetailsPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport TrackablePage from '../TrackablePage/TrackablePage';\nimport BlockTransactionsTable from '../BlockTransactionsTable/BlockTransactionsTable'\nimport queryBlock from '../../graphql/queryBlock';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-left: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-right: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridTable = styled(Grid)`\n  && {\n    width: 100%;\n  }\n`;\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\n/**\n * The Block Details Page shows details about a block.\n */\nclass BlockDetailsPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Object containing information about how a <Route path> matched the URL.\n     */\n    match: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n\n    const height = parseInt(this.props.match.params.height, 10);\n    return (\n      <GridSection container\n        direction='column'\n        justify='flex-start'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <Grid item>\n          <TypographyHeading breakpoint={breakpoint}>Block Details</TypographyHeading>\n        </Grid>\n        <Query query={queryBlock} variables={{ height }}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <Grid item>\n                  <TypographyBody>Searching...</TypographyBody>\n                </Grid>\n              );\n            else if (error)\n              return (\n                <Grid item>\n                  <TypographyBody>Network error</TypographyBody>\n                </Grid>\n              );\n            else if (data.block) {\n              const date = new Date(data.block.timestamp);\n              return (\n                <Fragment>\n                  <Grid item>\n                    <TypographyBody>\n                      Height: {data.block.height.toLocaleString()}\n                    </TypographyBody>\n                    <TypographyBody>\n                      Timestamp: {date.toLocaleString()}\n                    </TypographyBody>\n                  </Grid>\n                  <br />\n                  <GridTable item>\n                    <BlockTransactionsTable\n                      breakpoint={breakpoint}\n                      maxRows={100}\n                      transactions={data.block.transactions}\n                    />\n                  </GridTable>\n                </Fragment>\n              );\n            }\n            else\n              return (\n                <Grid item>\n                  <TypographyBody>Block not found.</TypographyBody>\n                </Grid>\n              );\n          }}\n        </Query>\n      </GridSection>\n    );\n  }\n}\n\nexport default BlockDetailsPage;\n","/**\n * @file queryTransactionsConnection\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL Relay-compliant connection query to get a TransactionsConnection object.\n * @return {Object} The TransactionsConnection object.\n */\nconst queryTransactionsConnection = gql`\n  query TransactionsConnection(\n    $where: TransactionWhereInput, $skip: Int, $after: String, $before: String, $first: Int,\n    $last: Int) {\n    transactionsConnection(\n      where: $where, orderBy: createdAt_DESC, skip: $skip, after: $after, before: $before,\n      first: $first, last: $last) {\n      edges {\n        node {\n          id\n          hash\n          amount\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n      }\n    }\n  }\n`;\n\nexport default queryTransactionsConnection;\n","/**\n * @file queryTransactionsCount\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get total count of transactions.\n * @return {Object} The total count of transactions.\n */\nconst queryTransactionsCount = gql`\n  query TransactionsConnection($where: TransactionWhereInput) {\n    transactionsConnection(where: $where) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nexport default queryTransactionsCount;\n","/**\n * @file TransactionsPagedTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PagedTable from '../PagedTable/PagedTable';\nimport queryTransactionsConnection from '../../graphql/queryTransactionsConnection';\nimport queryTransactionsCount from '../../graphql/queryTransactionsCount';\nimport getHashString from '../../utils/getHashString';\n\n/**\n * This component displays a paged table of Transaction objects.\n */\nclass TransactionsPagedTable extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a TransactionsPagedTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <PagedTable\n        breakpoint={breakpoint}\n        title='Transactions'\n        columnWidths={['60%', '40%']}\n        headerRow={[\n          {value: 'Hash', isNumeric: false},\n          {value: 'Amount', isNumeric: true}\n        ]}\n        query={queryTransactionsConnection}\n        queryCount={queryTransactionsCount}\n        getDataConnection={data => data.transactionsConnection}\n        getBodyRows={this.getBodyRows}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @param {Object} data The data retrieved by getQuery().\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows(data) {\n    let bodyRows = data.transactionsConnection.edges.map((edge) => {\n      const transaction = edge.node;\n      return {\n        mapKey: transaction.hash,\n        cells: [\n          {\n            value: getHashString(transaction.hash),\n            isNumeric: false,\n            link: `/tx/0x${transaction.hash}`\n          },\n          {value: transaction.amount.toFixed(8).toString() + ' DFN', isNumeric: true}\n        ]\n      };\n    });\n    return bodyRows;\n  }\n}\n\n\nexport default TransactionsPagedTable;\n","/**\n * @file TransactionsPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport styled from 'styled-components';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport Fade from 'react-reveal/Fade';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport TransactionsPagedTable from '../TransactionsPagedTable/TransactionsPagedTable';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridPagedTable = styled(Grid)`\n  && {\n    width: 100%;\n  }\n`;\n\nclass TransactionsPage extends TrackablePage {\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridPagedTable item breakpoint={breakpoint}>\n          <Fade timeout={500}>\n            <TransactionsPagedTable breakpoint={breakpoint} />\n          </Fade>\n        </GridPagedTable>\n      </GridSection>\n    );\n  }\n}\n\nexport default TransactionsPage;\n","/**\n * @file queryTransaction\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get a transaction.\n * @param {String} id The hash of the transaction to fetch.\n * @return {Object} The Transaction object with the specified hash.\n */\nconst queryTransaction = gql`\n  query Transaction($hash: String!) {\n    transaction(hash: $hash) {\n      id\n      hash\n      amount\n      block {\n        id\n        height\n      }\n    }\n  }\n`;\n\nexport default queryTransaction;\n","/**\n * @file TransactionDetailsPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport TrackablePage from '../TrackablePage/TrackablePage';\nimport queryTransaction from '../../graphql/queryTransaction';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport getHashString from '../../utils/getHashString';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-left: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-right: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\n/**\n * The Transaction Details Page shows details about a transaction.\n */\nclass TransactionDetailsPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Object containing information about how a <Route path> matched the URL.\n     */\n    match: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    const { hash } = this.props.match.params;\n\n    const hashMaxLength = breakpoint === Breakpoints.XS || breakpoint === Breakpoints.SM ? 24 : 0;\n    return (\n      <GridSection container\n        direction='column'\n        justify='flex-start'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <TypographyHeading breakpoint={breakpoint}>Transaction Details</TypographyHeading>\n        <Query query={queryTransaction} variables={{ hash }}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <Grid item>\n                  <TypographyBody>Searching...</TypographyBody>\n                </Grid>\n              );\n            else if (error)\n              return (\n                <Grid item>\n                  <TypographyBody>Network error</TypographyBody>\n                </Grid>\n              );\n            else if (data.transaction)\n              return (\n                <Grid item>\n                  <TypographyBody>\n                    {'Hash: '}\n                    {getHashString(data.transaction.hash, hashMaxLength)}\n                  </TypographyBody>\n                  <TypographyBody>\n                    {'Amount: '}\n                    {data.transaction.amount.toFixed(8).toString()}\n                    {' DFN'}\n                  </TypographyBody>\n                  <TypographyBody>\n                    {'Block Height: '}\n                    <StyledLink to={`/block/${data.transaction.block.height}`}>\n                      {data.transaction.block.height.toLocaleString()}\n                    </StyledLink>\n                  </TypographyBody>\n                </Grid>\n              );\n            else\n              return (\n                <Grid item>\n                  <TypographyBody>Transaction not found.</TypographyBody>\n                </Grid>\n              );\n          }}\n        </Query>\n      </GridSection>\n    );\n  }\n}\n\nexport default TransactionDetailsPage;\n","/**\n * @file CanistersPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller, Todd Kitchens, and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport styled from 'styled-components';\nimport {\n  Typography\n} from '@material-ui/core';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nclass CanistersPage extends TrackablePage {\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <div style={{ marginTop: '32px', marginLeft: '32px' }}>\n        <TypographyHeading breakpoint={breakpoint}>Canisters</TypographyHeading>\n        <TypographyBody>Canisters page coming soon.</TypographyBody>\n      </div>\n    );\n  }\n}\n\nexport default CanistersPage;\n","/**\n * @file getRandomInt\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\nimport getRandomNumber from './getRandomNumber'\n\n/**\n * Return a random integer between start and end.\n * @param {Number} start The starting number.\n * @param {Number} end The ending number.\n * @return {Number} The random integer.\n * @private\n */\nexport default function getRandomInt(start, end) {\n  return Math.floor(getRandomNumber(start, end));\n}\n","/**\n * @file getRandomNumber\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\n /**\n * Return a random number between start and end.\n * @param {Number} start The starting number.\n * @param {Number} end The ending number.\n * @return {Number} The random number.\n * @private\n */\nexport default function getRandomNumber(start, end) {\n  return Math.random() * (end - start) + start;\n}\n","/**\n * @file SymbolD3\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport * as PIXI from 'pixi.js';\nimport * as filters from 'pixi-filters';\nimport getRandomInt from '../../utils/getRandomInt';\n\n/**\n * This class draws an infinity symbol using a d3 force-directed graph.\n */\nclass SymbolD3 extends Component  {\n  static propTypes = {\n    /**\n     * True for circle mode, where the symbol is shaped like a circle.\n     */\n    circleMode: PropTypes.bool,\n    /**\n     * True is the theme is dark, false if the theme is light.\n     */\n    isThemeDark: PropTypes.bool.isRequired,\n    /**\n     * True for logo mode, where the symbol is shaped differently, slighty taller, and various\n     * adjustments are made with the intention of rendering at small sizes (e.g., in an app bar).\n     */\n    logoMode: PropTypes.bool,\n    /**\n     * The width of the component, or 0 for use built-in simulationWidth.\n     */\n    width: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a SymbolD3 object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n\n    // Bind to make 'this' work in callbacks.\n    this.dragStarted = this.dragStarted.bind(this);\n    this.dragged = this.dragged.bind(this);\n    this.dragEnded = this.dragEnded.bind(this);\n    this.tick = this.tick.bind(this);\n    this.rotate = this.rotate.bind(this);\n\n    // A force-directed graph can be a difficult beast to tame. Most changes to settings in this\n    // class will likely change the shape of the graph and require changing other settings through\n    // trial and error in order to get the graph back to the infinity symbol shape. Any number of the\n    // settings below could be made into constructor parameters. Another idea would be to pre-define\n    // different groups of settings that produce a shape which approximates the infinity symbol\n    // shape, and then allow the caller to specify which group of settings to use. Since there is\n    // currently only one group of settings defined, settings groups would not currently be useful.\n\n    // PixiJS members.\n    this.stage = null;\n    this.renderer = null;\n    this.linksGraphics = null;\n\n    // Code is customized for this window size. Modifying these values will cause the d3 force-\n    // directed graph to change shape unless scaleToWindow is adjusted to keep the object the same\n    // size.\n    this.simulationWidth = this.props.logoMode ? 780 : 800;\n    this.simulationHeight = 400;\n    this.scaleSimulationToPixi = 1.0;\n\n    this.centerX = this.simulationWidth / 2;\n    this.centerY = this.simulationHeight / 2;\n    this.scaleToWindow = this.simulationWidth / 2 * 0.8;\n\n    // Specify the number of symbol nodes and the number of vertices for each symbol node. The\n    // current values of 36 symbol nodes and 8 vertices (octagon) was arrived at after trial and\n    // error to produce a shape which resembles the infinity symbol.\n    this.numSymbolNodes = this.props.logoMode ? 41 : 36;\n    this.numVertices = this.props.logoMode ? 10 : 8;\n    this.numNodes = this.numSymbolNodes * this.numVertices;\n\n    // Specify the charge of the symbol nodes and the non-symbol nodes. \"A positive value causes\n    // nodes to attract each other, similar to gravity, while a negative value causes nodes to\n    // repel each other, similar to electrostatic charge.\" The default value is -30, but we specify\n    // much lower in magnitude values because we do not want the nodes to repel very much. For the\n    // fixed nodes which draw the infinity symbol, we do not want any force at all.\n    this.forceManyBodyStrengthSymbolNodes = 0;\n    this.forceManyBodyStrengthNonSymbolNodes = this.props.logoMode ? -3.75 : -9;\n\n    // Specify the link distance. \"The link force pushes linked nodes together or apart according to\n    // the desired link distance.\" The default value is 30.\n    this.linkDistance = this.props.logoMode ? 19 : 14;\n\n    // Specify node and link drawing properties.\n    this.nodeStrokeWidth = 1;\n    this.nodeRadius = 4.5;\n    this.nodeRadiusSelected = this.props.logoMode ? 11 : 5.5;\n    // DCM 01.mar.2019: Always use same node fill color as stroke color.\n    //this.nodeFillColorArray = [127, 127, 127];\n    this.nodeSelectedFillColorArray = [255, 255, 255];\n    this.nodeSelectedStrokeColorArray = [255, 255, 255];\n    this.nodeOpacity = 0.5;\n    this.nodeOpacitySelected = 0.75;\n    this.linkStrokeWidth = this.props.logoMode ? 3 : 2; // why do lines get blurry when this is increased?\n    this.linkStrokeWidthIncreaseAtMagnitude = this.props.logoMode ? 1.5 : 0;\n\n    // Adjust the symbolHeightMultiplier to make the symbol shorter or taller. A value of 1.0\n    // represents normal height.\n    this.symbolHeightMultiplier = this.props.logoMode ? 1.325 : 1.111111;\n\n    // The initial rotateOffset does two things: it determines which part of the symbol goes in\n    // front (blue is on top), and it makes a small adjustment to align the colors correctly.\n    this.rotateOffset = this.numSymbolNodes / 2 - 1.2;\n\n    // The rotate interval frequency.\n    this.rotateTimeMs = 33.3; // 30 frames/sec max\n\n    // The amount of rotation for every rotate interval.\n    this.rotateAmount = this.props.logoMode ? 0 : 0.000015;\n\n    // The currently selected node index.\n    this.selectedNodeIndex = -1;\n\n    // New block timer members.\n    this.newBlockNodeStartTime = null;\n    this.newBlockLinksStartTime = null;\n    this.newBlockNodeTimerMs = 1000;\n    this.newBlockLinksTimerMs = 1500;\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Set the value of scaleSimulationToPixi based on the width prop. We scale the force-directed\n    // graph by keeping the d3 simulation as is, since it is finely tuned to appear in a certain\n    // way, and instead scaling coordinates from simulation space to PixiJS space when rendering.\n    // In this way, the graph can be scaled to any width by changing the widths prop. A width prop\n    // of 0 indicates no scaling. Note that drag/drop is not currently implemented when scaling.\n    this.scaleSimulationToPixi = this.props.width ? this.props.width / this.simulationWidth : 1.0;\n\n    // Draw the infinity symbol.\n    this.draw();\n  }\n\n  /**\n   * Invoked by React immediately before a component is unmounted and destroyed.\n   * @public\n   */\n  componentWillUnmount() {\n    // Cleanup PixiJS properties.\n    this.renderer.destroy();\n    this.stage.destroy();\n  }\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @public\n   */\n  componentDidUpdate() {\n    // Make the necessary PixiJS adjustments when the width prop changes.\n    const scaleSimulationToPixi = this.props.width ? this.props.width / this.simulationWidth : 1.0;\n    if (this.scaleSimulationToPixi !== scaleSimulationToPixi) {\n      this.scaleSimulationToPixi = scaleSimulationToPixi;\n\n      // Resize the renderer.\n      this.pixiResizeRenderer();\n\n      // Draw circles for the nodes.\n      if (this.nodesData) {\n        this.nodesData.forEach((node) => { this.pixiDrawNode(node); });\n      }\n    }\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return <div ref={(el) => { this.element = el }}/>;\n  }\n\n  /**\n   * Draw the infinity symbol.\n   * @public\n   */\n  draw() {\n    // Set up the nodes and links of the graph.\n    this.addNodes();\n    this.addLinks();\n\n    // Create the d3 simulation.\n    this.createSimulation();\n\n    // Set up PixiJS to draw the simulation.\n    this.pixiSetup();\n  }\n\n  /**\n   * Add a new block.\n   * @public\n   */\n  addNewBlock() {\n    // If there is a selected node still animating, stop the animation and return it to normal.\n    if (this.newBlockNodeStartTime) {\n        const node = this.nodesData[this.selectedNodeIndex];\n        this.pixiDrawNode(node);\n    }\n\n    // Select node and enable new block timers.\n    this.selectedNodeIndex = getRandomInt(0, this.numNodes - 1);\n    this.newBlockNodeStartTime = this.newBlockLinksStartTime = new Date();\n  }\n\n  /**\n   * Populate nodesData[] with the nodes of the graph.\n   * @private\n   */\n  addNodes() {\n    // Add the symbol nodes to nodesData[] at fixed positions (fx, fy). _fx and _fy save the fixed\n    // position across drag/drop operations, linkCount is used to calculate the strength of the\n    // force of a link.\n    this.nodesData = [];\n    for (let i = 0; i < this.numSymbolNodes; i++) {\n      const pos = this.getNodePosition(i);\n      this.nodesData.push({\n        'fx' : pos[0],\n        'fy' : pos[1],\n        '_fx' : pos[0],\n        '_fy' : pos[1],\n        'linkCount' : 0});\n    }\n\n    // Add the non-symbol nodes at non-fixed positions.\n    for (let i = this.numSymbolNodes; i < this.numNodes; i++) {\n      this.nodesData.push({'linkCount' : 0});\n    }\n  }\n\n  /**\n   * Get the position of the node with the specified index.\n   * @param {Number} index The node index.\n   * @return {Array} An array containing the [x, y] position of the node.\n   * @private\n   */\n  getNodePosition(index) {\n    const t =\n      2 * Math.PI * ((index + this.rotateOffset) % this.numSymbolNodes) / this.numSymbolNodes;\n    const scale = this.props.circleMode ? 0.4 : 2 / (3 - Math.cos(2 * t));\n    const fx = this.centerX + scale * Math.cos(t) * this.scaleToWindow;\n    const fy =\n      this.centerY + \n      (this.props.circleMode ?\n        scale * Math.sin(t) * this.scaleToWindow :\n        scale * Math.sin(2 * t) * this.symbolHeightMultiplier / 2 * this.scaleToWindow);\n    return [fx, fy];\n  }\n\n  /**\n   * Populate linksData[] with the links of the graph.\n   * @private\n   */\n  addLinks() {\n    this.linksData = [];\n    for (let i = 0; i < this.numSymbolNodes; i++) {   \n      // Define the ith link of the symbol.\n      const indexSymbol = i;\n      const indexSymbolNext = (i + 1) % this.numSymbolNodes;\n      this.addLink(indexSymbol, indexSymbolNext, 0, 1);\n           \n      // Link at top of shape, parallel to symbol link, invisible.\n      const vertexShapeTop = this.numVertices / 2;\n      const indexShapeTop = vertexShapeTop * this.numSymbolNodes + i;\n      const indexShapeTopNext =\n        vertexShapeTop * this.numSymbolNodes + (i + 1) % this.numSymbolNodes;\n      this.addLink(indexShapeTop, indexShapeTopNext, 1, 0);\n      \n      // Cross bar, invisible. This pulls the graph in and provides stability. Rather than linking\n      // the cross bar from the link at top of shape to the symbol index, we link it from the shape\n      // node prior. Found that this produces a more interesting graph. Note that previously this\n      // code was in the for loop below and executed when j === 3, but with the same parameters to\n      // addLink(). This produced a slightly different/thicker graph.\n      const vertexShapeAlmostTop = vertexShapeTop - 1;\n      const indexShapeAlmostTop = vertexShapeAlmostTop * this.numSymbolNodes + i;\n      this.addLink(indexShapeAlmostTop, indexSymbol, 1, 0);\n      \n      for (let j = 0; j < this.numVertices; j++) {     \n        // Define the jth link of the shape (e.g., if numVertices is 6, shape is 6-sided polygon).\n        const index = j * this.numSymbolNodes + i;\n        const indexShapeNext = (index + this.numSymbolNodes) % this.numNodes;\n        this.addLink(index, indexShapeNext, 0, 0.7);\n      \n        // Define the jth link of the spiral which spirals around the shapes. Two spirals are used\n        // for better stability.\n        const indexSpiralNext =\n          (j + 1) % this.numVertices * this.numSymbolNodes + (i + 1) % this.numSymbolNodes;            \n        this.addLink(index, indexSpiralNext, 0.65, 0.5);\n        this.addLink(index, indexSpiralNext, 0.65, 0.5);\n      }\n    }\n  }\n\n  /**\n   * Add a link of the graph to linksData[].\n   * @param {Number} indexSource The index of the source node of the link.\n   * @param {Number} indexTarget The index of the target node of the link.\n   * @param {Number} The strength of the link, or 0 for use default strength.\n   * @param {Number} opacity The opacity of the link.\n   * @private\n   */\n  addLink(indexSource, indexTarget, strength, opacity) {\n    this.linksData.push({\n      'source': indexSource.toString(),\n      'target': indexTarget.toString(),\n      '_strength' : strength,\n      'opacity' : opacity,\n      '_opacity' : opacity});\n    this.nodesData[indexSource].linkCount++;\n    this.nodesData[indexTarget].linkCount++;\n  }\n\n  /**\n   * Create the d3 simulation of the force-directed graph. Nodes and links must be added before\n   * calling this function.\n   * @private\n   */\n  createSimulation() {\n    // Create a new simulation containing the nodes.\n    this.simulation = d3.forceSimulation(this.nodesData);\n\n    // Add a charge to each node and a centering force.\n    this.simulation\n      .force('charge', d3.forceManyBody()\n        .strength((d) => {\n          return d.index < this.numSymbolNodes ?\n            this.forceManyBodyStrengthSymbolNodes : this.forceManyBodyStrengthNonSymbolNodes;\n        }))\n      .force('center', d3.forceCenter(this.simulationWidth / 2, this.simulationHeight / 2));\n\n    // Add the links, with the strength of the force of a link optionally specified by the link's\n    // _strength.\n    const link_force =  d3.forceLink(this.linksData)\n      .strength((d) => {\n        return d._strength > 0 ?\n          d._strength :\n          1 / Math.min(d.source.linkCount, d.target.linkCount); // default\n      })\n      .distance(this.linkDistance);        \n      this.simulation.force('links', link_force);\n\n    // Call tick() for every tick.\n    this.simulation.on('tick', this.tick);\n\n    // Set the decay rate to zero to have the simulation run forever at the current alpha.\n    this.simulation.alphaDecay(0);\n\n    // Rotate the symbol using a d3 interval.\n    if (this.rotateAmount)\n      d3.interval(this.rotate, this.rotateTimeMs);\n  }\n\n  /**\n   * Set up PixiJS to draw the simulation using WebGL (with Canvas fallback for older platforms).\n   * @private\n   */\n  pixiSetup() {\n    // Disable PIXI console log message.\n    PIXI.utils.skipHello();\n    \n    // Create PixiJS WebGL renderer element to hold the force-directed graph. We set the resolution\n    // to 3, then auto-resize the window back down to the correct size in order to increase the\n    // resolution. With resolution set to 1, it looks low resolution and pixelated.\n    this.stage = new PIXI.Container();\n    this.renderer = PIXI.autoDetectRenderer(\n      this.simulationWidth * this.scaleSimulationToPixi,\n      this.simulationHeight * this.scaleSimulationToPixi,\n      {antialias: true, transparent: true, resolution: 3}\n    );\n    this.renderer.autoResize = true;\n    this.pixiResizeRenderer();\n    this.element.appendChild(this.renderer.view);\n\n    // Draw circles for the nodes.\n    this.nodesData.forEach((node) => {\n      node.graphics = new PIXI.Graphics();\n      this.pixiDrawNode(node);\n      this.stage.addChild(node.graphics);\n    });\n\n    // Set up drag/drop.\n    d3.select(this.renderer.view)\n      .call(d3.drag()\n        .container(this.renderer.view)\n        .subject(() => this.simulation.find(d3.event.x, d3.event.y))\n        .on('start', this.dragStarted)\n        .on('drag', this.dragged)\n        .on('end', this.dragEnded));\n\n    // Set up graphics for the links.\n    this.linksGraphics = new PIXI.Graphics();\n    this.stage.addChild(this.linksGraphics);\n  }\n\n  /**\n   * Resize the PixiJS renderer based on the width and height.\n   * @private\n   */\n   pixiResizeRenderer() {\n    this.renderer.resize(\n      this.simulationWidth * this.scaleSimulationToPixi,\n      this.simulationHeight * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Move the PixiJS position of the specified node.\n   * @param {Object} node The node to move the position of.\n   * @private\n   */\n  pixiMoveNode(node) {\n    let { x, y, graphics } = node;\n    graphics.position =\n      new PIXI.Point(x * this.scaleSimulationToPixi, y * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Use PixiJS to draw the circle for a node.\n   * @param {Object} node The node to draw the circle for.\n   * @param {Number} selectedNodeMagnitude If this is the currently selected node, indicates the\n   * magnitude percentage (0 - 1.0) of the selection. A value of 0 indicates that this is not the\n   * currently selected node.\n   * @private\n   */\n  pixiDrawNode(node, selectedNodeMagnitude = 0) {\n    let nodeStrokeColor;\n    let nodeFillColor;\n    let nodeOpacity;\n    let nodeRadius;\n    if (selectedNodeMagnitude) {\n      // Scale the node properties based on the magnitude.\n      nodeStrokeColor = this.rgbNumberFromArray(\n        this.gradientColor(\n          this.nodeSelectedStrokeColorArray,\n          this.getNodeStrokeColorArray(node),\n          selectedNodeMagnitude));\n      nodeFillColor = this.rgbNumberFromArray(\n        this.gradientColor(\n          this.nodeSelectedFillColorArray,\n          // DCM 01.mar.2019: Always use same node fill color as stroke color.\n          this.getNodeStrokeColorArray(node),\n          //this.props.logoMode ? this.getNodeStrokeColorArray(node) : this.nodeFillColorArray,\n          selectedNodeMagnitude));\n      nodeOpacity =\n        this.nodeOpacity + (this.nodeOpacitySelected - this.nodeOpacity) * selectedNodeMagnitude;\n      nodeRadius =\n        this.nodeRadius + (this.nodeRadiusSelected - this.nodeRadius) * selectedNodeMagnitude;\n    }\n    else {\n      nodeStrokeColor = this.rgbNumberFromArray(this.getNodeStrokeColorArray(node));\n      // DCM 01.mar.2019: Always use same node fill color as stroke color.\n      nodeFillColor = nodeStrokeColor;\n      //nodeFillColor = this.rgbNumberFromArray(\n      //  this.props.logoMode ?\n      //    this.getNodeStrokeColorArray(node) : this.nodeFillColorArray);\n\n      nodeOpacity = this.nodeOpacity;\n      nodeRadius = this.nodeRadius;\n    }\n\n    node.graphics.clear();\n    node.graphics.lineStyle(\n      this.nodeStrokeWidth * this.scaleSimulationToPixi,\n      nodeStrokeColor,\n      nodeOpacity);\n    node.graphics.beginFill(nodeFillColor, nodeOpacity);\n    if (selectedNodeMagnitude) {\n      node.graphics.filters = [\n        new filters.GlowFilter(\n          5,                          // distance\n          4 * selectedNodeMagnitude,  // outerStrength\n          0,                          // innerStrength\n          nodeStrokeColor,            // color\n          0.5)                        // quality\n      ]\n    }\n    else\n      node.graphics.filters = null;\n    node.graphics.drawCircle(0, 0, nodeRadius * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Use PixiJS to draw the line for a link between nodes.\n   * @param {Object} link The link to draw the line for.\n   * @param {Number} linkMagnitude Indicates the magnitude percentage (0 - 1.0) of the link opacity\n   * boost.\n   * @private\n   */\n  pixiDrawLink(link, linkMagnitude) {\n    let { source, target, opacity } = link;\n    const linkOpacity = opacity + 0.25 * (this.props.logoMode ? 1 : linkMagnitude);\n    this.linksGraphics.alpha = linkOpacity;\n    this.linksGraphics.lineStyle(\n      (this.linkStrokeWidth + this.linkStrokeWidthIncreaseAtMagnitude * linkMagnitude) *\n        this.scaleSimulationToPixi,\n      this.rgbNumberFromArray(this.getColorArray(link.index, this.linksData.length)));\n      this.linksGraphics.moveTo(\n        source.x * this.scaleSimulationToPixi, source.y * this.scaleSimulationToPixi);\n      this.linksGraphics.lineTo(\n        target.x * this.scaleSimulationToPixi, target.y * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Return the color based on the specified index and number of indices.\n   * @param {Number} index The index to return the color of.\n   * @param {Number} numIndices The total number of indices used to determine the color.\n   * @return {Array} The color arrayof the specified index.\n   * @private\n   */\n  getColorArray(index, numIndices) {\n    // These colors come from the DFINITY logo.\n    const purple = [99,38,132];\n    const pink = [237,30,121];\n    const darkOrange = [241,90,36];\n    const lightOrange = [251,176,59];\n    const blue = [41,171,226];\n\n    // Certain color transitions are small, others are gradual.\n    const transitionPercentSmall = 0.02;\n    const transitionPercentGradual = 0.1;\n    const transitionIndicesSmall = numIndices * transitionPercentSmall;\n    const transitionIndicesGradual = numIndices * transitionPercentGradual;\n\n    // The number of indices of each color was determined by analyzing the DFINITY logo.\n    const lastPurpleIndex = numIndices * 0.15 - transitionIndicesGradual;\n    const lastPinkIndex =\n      lastPurpleIndex + transitionIndicesGradual + numIndices * 0.15 - transitionIndicesSmall;\n    const lastDarkOrangeIndex =\n      lastPinkIndex + transitionIndicesSmall + numIndices * 0.15 - transitionIndicesGradual;\n    const lastLightOrangeIndex =\n      lastDarkOrangeIndex + transitionIndicesGradual + numIndices * 0.15 - transitionIndicesSmall;\n    const lastBlueIndex =\n      lastLightOrangeIndex + transitionIndicesSmall + numIndices * 0.4 - transitionIndicesSmall;\n\n    // Determine the color based on the color zone the index is in.\n    if (index <= lastPurpleIndex)\n      return purple;\n    else if (index <= lastPurpleIndex + transitionIndicesGradual)\n    {\n      const percentage = (index - lastPurpleIndex) / transitionIndicesGradual;\n      return this.gradientColor(pink, purple, percentage);\n    }\n    else if (index <= lastPinkIndex)\n      return pink;\n    else if (index <= lastPinkIndex + transitionIndicesSmall)\n    {\n      const percentage = (index - lastPinkIndex) / transitionIndicesSmall;\n      return this.gradientColor(darkOrange, pink, percentage);\n    }\n    else if (index <= lastDarkOrangeIndex)\n      return darkOrange;\n    else if (index <= lastDarkOrangeIndex + transitionIndicesGradual)\n    {\n      const percentage = (index - lastDarkOrangeIndex) / transitionIndicesGradual;\n      return this.gradientColor(lightOrange, darkOrange, percentage);\n    }\n    else if (index <= lastLightOrangeIndex)\n      return lightOrange;\n    else if (index <= lastLightOrangeIndex + transitionIndicesSmall)\n    {\n      const percentage = (index - lastLightOrangeIndex) / transitionIndicesSmall;\n      return this.gradientColor(blue, lightOrange, percentage);\n    }     \n    else if (index <= lastBlueIndex)\n      return blue;\n    else\n    {\n      const percentage = (index - lastBlueIndex) / transitionIndicesSmall;\n      return this.gradientColor(purple, blue, percentage);\n    }\n  }\n\n  /**\n   * Return the gradient color based on the specified parameters.\n   * @param {Array} color1 The RGB array of color 1.\n   * @param {Array} color2 The RGB array of color 2.\n   * @param {Number} percent The percentage of the gradient.\n   * @return {Array} The RGB array of the gradient color.\n   * @private\n   */\n  gradientColor(color1, color2, percent) {\n    const p1 = percent;\n    const p2 = 1 - p1;\n    const rgb = [\n      Math.round(color1[0] * p1 + color2[0] * p2),\n      Math.round(color1[1] * p1 + color2[1] * p2),\n      Math.round(color1[2] * p1 + color2[2] * p2)];\n    return rgb;\n  }\n\n  /**\n   * Return the RGB color number corresponding to the specified RGB color array.\n   * @param {Array} array The RGB array.\n   * @return {Number} The RGB color number.\n   * @private\n   */\n  rgbNumberFromArray(array) {\n    let color = 0;\n    array.forEach(element => {\n      color = (color << 8) + element;\n    });\n    return Number(color);\n  }\n\n/**\n   * Return the stroke color of the specified node.\n   * @param {Object} node The node to return the stroke color of.\n   * @return {Array} The stroke color array of the specified node.\n   * @private\n   */\n  getNodeStrokeColorArray(node) {\n    return this.getColorArray(node.index % this.numSymbolNodes, this.numSymbolNodes)\n  }\n\n/**\n   * Start dragging a node.\n   * @param {Object} d The node being dragged.\n   * @private\n   */\n  dragStarted(d) {\n    // Disable dragging when scaling.\n    if (this.scaleSimulationToPixi !== 1.0)\n      return;\n\n    const isSimulationRunning = this.simulation.alphaDecay() === 0;\n    if (!isSimulationRunning) {\n      if (!d3.event.active)\n        this.simulation.alphaTarget(0.3).restart();\n    }\n    d3.event.subject.fx = d3.event.subject.x;\n    d3.event.subject.fy = d3.event.subject.y;\n  }\n\n  /**\n   * Continue dragging a node.\n   * @param {Object} d The node being dragged.\n   * @private\n   */\n  dragged(d) {\n    // Disable dragging when scaling.\n    if (this.scaleSimulationToPixi !== 1.0)\n      return;\n\n    d3.event.subject.fx = d3.event.x;\n    d3.event.subject.fy = d3.event.y;\n  }\n\n  /**\n   * Stop dragging a node.\n   * @param {Object} d The node being dragged.\n   * @private\n   */\n  dragEnded(d) {\n    // Disable dragging when scaling.\n    if (this.scaleSimulationToPixi !== 1.0)\n      return;\n\n    const isSimulationRunning = this.simulation.alphaDecay() === 0;\n    if (!isSimulationRunning) {\n      if (!d3.event.active)\n        this.simulation.alphaTarget(0);\n    }\n    d3.event.subject.fx = d3.event.subject._fx;\n    d3.event.subject.fy = d3.event.subject._fy;\n  }\n\n  /**\n   * Update the node and link positions on each tick of the simulation.\n   * @private\n   */\n  tick() {\n    // Move the node positions.\n    this.nodesData.forEach((node) => { this.pixiMoveNode(node); });\n\n    // Animate the selected node to grow larger and change to white, then shrink smaller and change\n    // back to original colors.\n    if (this.newBlockNodeStartTime != null) {\n      const node = this.nodesData[this.selectedNodeIndex];\n      const elapsedMs = new Date() - this.newBlockNodeStartTime;\n      if (elapsedMs > this.newBlockNodeTimerMs) {\n        // Draw a normal node circle.\n        this.pixiDrawNode(node);\n\n        // Disable new block node timer.\n        this.newBlockNodeStartTime = null;\n      }\n      else {\n        // Calculate the magnitude based on the timer.\n        const selectedNodeMagnitude =\n          (elapsedMs <= this.newBlockNodeTimerMs / 2 ?\n            elapsedMs :\n            this.newBlockNodeTimerMs - elapsedMs) /\n          (this.newBlockNodeTimerMs / 2);\n\n        // Draw a modifified node circle based on the magnitude.\n        this.pixiDrawNode(node, selectedNodeMagnitude);\n      }\n    }\n\n    // Calculate link magnitude.\n    let linkMagnitude = 0;\n    if (this.newBlockLinksStartTime != null) {\n      const elapsedMs = new Date() - this.newBlockLinksStartTime;\n      if (elapsedMs > this.newBlockLinksTimerMs) {\n        // Disable new block links timer.\n        this.newBlockLinksStartTime = null;\n      }\n      else {\n        // Calculate the magnitude based on the timer.\n        linkMagnitude =\n          elapsedMs <= this.newBlockLinksTimerMs / 3 ?\n            elapsedMs / (this.newBlockLinksTimerMs / 3) :\n            (this.newBlockLinksTimerMs - elapsedMs) /\n              (this.newBlockLinksTimerMs * 2 / 3);\n      }\n    }\n\n    // Draw lines for the links.\n    this.linksGraphics.clear();\n    this.linksData.forEach((link) => {\n      this.pixiDrawLink(link, linkMagnitude);\n    });\n    this.linksGraphics.endFill();\n\n    this.renderer.render(this.stage);\n  }\n\n  /**\n   * Rotate the symbol.\n   * @param {Number} elapsed Elapsed time since the timer became active.\n   * @private\n   */\n  rotate(elapsed) {\n    // In order to increase efficiency, it might be possible to decrease the frequency at which we\n    // rotate, then use d3 transition so that the movement is smooth. The problem is, non-symbol\n    // nodes will still be moving based on the simulation, so it's unknown whether this will\n    // actually improve performance. Since it does not seem like d3.interval() can be counted on to\n    // call this function with precision, this may not be a feasible approach, since if you do not\n    // know when the next call will be, you cannot know how long to make the transition.\n    // See webpage \"D3.selectAll(...).transition() Explained\"\n    // (http://bl.ocks.org/Kcnarf/9e4813ba03ef34beac6e)\n\n    for (let i = 0; i < this.numSymbolNodes; i++) {\n      this.rotateOffset += this.rotateAmount;\n      const pos = this.getNodePosition(i);\n      this.nodesData[i].fx = this.nodesData[i]._fx = pos[0];\n      this.nodesData[i].fy = this.nodesData[i]._fy = pos[1];\n    }\n  }\n}\n\nexport default SymbolD3;\n","/**\n * @file ImageLinkGrid\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid\n} from '@material-ui/core';\nimport Fade from 'react-reveal/Fade';\n\n/**\n * This component displays a grid of images that link to other pages.\n */\nclass ImageLinkGrid extends Component {\n  static propTypes = {\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string,\n    /**\n     * An array of objects describing the image links, where each object contains:\n     *  src: The <img> src attribute.\n     *  height: The <img> height attribute.\n     *  alt: The <img> alt attribute.\n     *  href: The <a> href attribute.\n     */    \n    imageLinks: PropTypes.array.isRequired,\n    /**\n     * The Material-UI justify prop to apply to each row.\n     * @see See [Material-UI Grid documentation](https://material-ui.com/api/grid/).\n     */\n    justifyRow: PropTypes.string,\n    /**\n     * The amount of space between rows.\n     */\n    marginBetweenRows: PropTypes.number,\n    /**\n     * The number of images per row.\n     */\n    perRow: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a ImageLinkGrid object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.state = {widths: [], maxHeight: 0};\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    this.calculateMaxImageDimensions();\n  }\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @param {Object} prevProps The previous props.\n   * @public\n   */\n  componentDidUpdate(prevProps) {\n    // Determine whether the props have changed.\n    let arePropsChanged = false;\n    const { imageLinks } = this.props;\n    if (imageLinks.length === prevProps.imageLinks.length) {\n      imageLinks.forEach((imageLink, index) => {\n        if (imageLink.src !== prevProps.imageLinks[index].src ||\n            imageLink.height !== prevProps.imageLinks[index].height)\n          arePropsChanged = true;\n      });\n    }\n    else\n      arePropsChanged = true;\n\n    // Only calculate max image dimensions if props have changed, otherwise we would cause an\n    // infinite loop of updating the state.\n    if (arePropsChanged)\n      this.calculateMaxImageDimensions();\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {\n      className,\n      imageLinks,\n      justifyRow,\n      marginBetweenRows,\n      perRow\n    } = this.props;\n    const { widths } = this.state;\n\n    // Make the container slightly taller than the max image height to account for Grid bug where\n    // there are a few pixels of whitespace added under the image. This '+ 4' can be removed once\n    // the Grid bug is fixed.\n    const containerHeight = this.state.maxHeight + 4;\n\n    // The image grid is an array of rows, where each row is an array of image objects. Creating\n    // a two-dimensional array like this is an extra step, but makes the code below more readable.\n    // TODO: Consider an alternate approach to solve the problem of the center column of 3-item rows\n    // not being centered. Use the same maxWidth for all cells. For cells on left, left align. For\n    // cells on right, right align. For all other cells, center. To do this, we'd likely need a cell\n    // within a cell, so that columns could first be centered relative to the column, then placed\n    // in a second wrapper cell (Grid) aligned either left, right, or center. Would need to test\n    // with different row lengths and numbers of images to see what effect it has on spacing for all\n    // conditions. It seems possible this would look wrong for rows longer than 3, since the spacing\n    // at the edges could be greater because the cell within the cell at the edges is not centered.!!!\n    let imageLinkGrid = [];\n    let maxWidthColumn = Array(perRow).fill(0);\n    for (let i = 0; i < imageLinks.length;) {\n      let row = [];\n      const isShortRow = imageLinks.length - i < perRow;\n      for (var j = 0; j < perRow && i < imageLinks.length; j++) {\n        // Do not update maxWidthColumn[j] if this is a short row (last row with fewer columns).\n        if (!isShortRow && widths[i])\n          maxWidthColumn[j] = Math.max(widths[i], maxWidthColumn[j]);\n        row.push(imageLinks[i++]);\n      }\n      imageLinkGrid.push(row);\n    }\n    \n    return (\n      <div className={className}>\n        {imageLinkGrid.map((row, rowIndex) => {\n          const isShortRow = row.length < perRow;\n          return (\n            <Grid container\n              direction='row'\n              // Always set justify='space-around' for a short row (last row with fewer columns).\n              justify={isShortRow ? 'space-around' : (justifyRow || 'space-between')}\n              alignItems='center'\n              key={rowIndex}\n              style={{ marginTop: (rowIndex && marginBetweenRows) ? marginBetweenRows : 0 }}\n            >\n              {row.map((imageLink, columnIndex) => {\n                const index = rowIndex * perRow + columnIndex;\n                return (\n                  <Grid container\n                    direction='column'\n                    justify='center'\n                    alignItems='center'\n                    key={columnIndex}\n                    // Do not use maxWidthColumn[j] if this is a short row (last row with fewer\n                    // columns).\n                    style={{\n                      width: isShortRow ? widths[index] : maxWidthColumn[columnIndex],\n                      height: containerHeight\n                    }}\n                  >\n                    <Grid item>\n                      <a href={imageLink.href} target='_blank' rel='noopener noreferrer'>\n                        <Fade\n                          bottom\n                          delay={index * 50}\n                          timeout={500}\n                        >\n                          <img\n                            src={imageLink.src}\n                            height={imageLink.height}\n                            alt={imageLink.alt}>\n                          </img>\n                        </Fade>\n                      </a>\n                    </Grid>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          );\n        })}\n      </div>\n    );\n  }\n\n  /**\n   * Calculate the maximum width and height of all images by loading the images. This allows us to\n   * create Grid containers for the images which are all the same size. An image will be\n   * horizontally and vertically centered in its container.\n   * @private\n   */\n  calculateMaxImageDimensions() {\n    const { imageLinks } = this.props;\n    this.setState({\n      widths: Array(imageLinks.length).fill(0),\n      maxHeight: 0\n    });\n\n    // Calculate the widths[] and maxHeight of the images by loading them.\n    imageLinks.forEach((imageLink, index) => {\n      const img = new Image();\n      img.onload = event => {\n        const { naturalWidth, naturalHeight } = event.currentTarget;\n        if (naturalHeight) {\n          // Scale width from natural width to image link width.\n          const width = imageLink.height / naturalHeight * naturalWidth;\n          this.setState(prevState => ({\n            widths: [\n              ...prevState.widths.slice(0, index),\n              width,\n              ...prevState.widths.slice(index + 1)\n            ],\n            maxHeight: Math.max(imageLink.height, prevState.maxHeight)\n          }));\n        }\n      }\n      // Setting src after we have set the onload event will cause the event to be triggered after\n      // the image has loaded.\n      img.src = imageLink.src;\n    });\n  }\n}\n\nexport default ImageLinkGrid;\n","/**\n * @file AboutPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Button,\n  Grid,\n  Paper,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport MailIcon from '@material-ui/icons/MailOutline';\nimport { Parallax } from 'react-parallax';\nimport Fade from 'react-reveal/Fade';\nimport Flip from 'react-reveal/Flip';\nimport LightSpeed from 'react-reveal/LightSpeed';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport CoinbaseCommerceButton from 'react-coinbase-commerce';\nimport 'react-coinbase-commerce/dist/coinbase-commerce-button.css';\nimport TrackablePage from '../TrackablePage/TrackablePage';\nimport SymbolD3 from '../SymbolD3/SymbolD3';\nimport ImageLinkGrid from '../ImageLinkGrid/ImageLinkGrid';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\nimport bannerXHorizon from './banner-x-horizon.png';\nimport openBlockExplorerLogo from './open-block-explorer-logo-large.png';\nimport apolloLogoDark from './apollo-logo-dark-mode.png';\nimport apolloLogoLight from './apollo-logo-light-mode.png';\nimport githubOctocat from './github-octocat.png';\nimport graphqlLogo from './graphql-logo.png';\nimport materialUiLogo from './material-ui-logo.png';\nimport mySqlLogo from './mysql-logo.png';\nimport nomicsLogoDark from './nomics-logo-dark-mode.png';\nimport nomicsLogoLight from './nomics-logo-light-mode.png';\nimport prismaLogoDark from './prisma-logo-dark-mode.png';\nimport prismaLogoLight from './prisma-logo-light-mode.png';\nimport reactLogo from './react-logo-text.png';\nimport styledComponentsLogoDark from './styled-components-logo-dark-mode.png';\nimport styledComponentsLogoLight from './styled-components-logo-light-mode.png';\n\nconst PaperParallax = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorBodyBackground};\n    /* Allows shadow to overlap the element below it. */\n    position: relative;\n  }\n`;\n\nconst GridParallax = styled(Grid)`\n  && {\n    height: 280px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        height: 200px;       \n      `\n    }\n  }\n`;\n\nconst TypographyParallax = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 200;\n    color: ${props => props.theme.colorAboutHeaderText};  \n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.MD && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.SM && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};\n      `)\n    }\n  }\n`;\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-top: 96px;\n    padding-bottom: 96px;\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.MD && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.SM && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        padding-top: 64px;\n        padding-bottom: 64px;\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n      `)\n    }\n  }\n`;\n\nconst GridSectionPrimary = styled(GridSection)`\n  && {\n    background: ${props => props.theme.colorAboutBackgroundPrimary};\n  }\n`;\n\nconst GridSectionSecondary = styled(GridSection)`\n  && {\n    background: ${props => props.theme.colorAboutBackgroundSecondary};\n  }\n`;\n\nconst GridItem = styled(Grid)`\n  && {\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        width: calc(50% - ${Constants.ABOUT_PAGE_MARGIN_LG/2 + 'px'});\n      `) ||\n      (breakpoint === Breakpoints.MD && `\n        width: calc(50% - ${Constants.ABOUT_PAGE_MARGIN_MD/2 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst GridImageLeft = styled(GridItem)`\n  && {\n    order: 1;\n  }\n`;\n\nconst GridImageRight = styled(GridItem)`\n  && {\n    order: 2;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        order: 1;\n      `\n    }\n  }\n`;\n\nconst GridSymbolLeft = styled(GridImageLeft)`\n  && {\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-top: -32px;\n        margin-bottom: -32px;     \n      `\n    }\n  }\n`;\n\nconst GridText = styled(GridItem)`\n  && {\n    ${({ breakpoint }) =>\n    (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        margin-top: 48px;\n      `\n    }\n  }\n`;\n\nconst GridTextLeft = styled(GridText)`\n  && {\n    order: 1;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        order: 2;\n      `\n    }\n  }\n`;\n\nconst GridTextRight = styled(GridText)`\n  && {\n    order: 2;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        order: 2;\n      `\n    }\n  }\n`;\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 300;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\n// From the Material Design documentation: \"The ideal length for legibility of body copy is 40-60\n// characters per line.\"\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nconst StyledA = styled.a`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      cursor: pointer;\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst ImgSection = styled.img`\n  && {\n    max-width: 100%;\n    max-height: 300px;\n  }\n`;\n\nconst ButtonSubscribe = styled(Button)`\n  && {\n    height: 48px;\n    border-radius: 24px;\n    margin-top: 24px;\n    padding-left: 24px;\n    padding-right: 24px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BUTTON};\n    font-weight: 400;\n    text-transform: capitalize;\n    background: ${props => props.theme.colorBodyButtonBackground};\n    color: ${props => props.theme.colorBodyButtonText};\n    &:hover {\n      background: ${props => props.theme.colorBodyButtonHoverBackground};\n      color: ${props => props.theme.colorBodyButtonHoverText};\n    }    \n  }\n`;\n\nconst MailIconButton = styled(MailIcon)`\n  && {\n    margin-right: 14px;\n  }\n`;\n\nconst SpanHeart = styled.span`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n  }\n`;\n\nconst ButtonDonate = styled(CoinbaseCommerceButton)`\n  && {\n    height: 48px;\n    border: none;\n    border-radius: 24px;\n    margin-top: 24px;\n    padding-left: 24px;\n    padding-right: 24px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BUTTON};\n    font-weight: 400;\n    background: ${props => props.theme.colorBodyButtonBackground};\n    color: ${props => props.theme.colorBodyButtonText};\n    &:hover {\n      cursor: pointer;\n      background: ${props => props.theme.colorBodyButtonHoverBackground};\n      color: ${props => props.theme.colorBodyButtonHoverText};\n    }    \n  }\n`;\n\nconst SvgIconButton = styled(SvgIcon)`\n  && {\n    margin-right: 14px;\n  }\n`;\n\nconst PaperTwitter = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorAboutTwitterBackground};\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        max-width: 640px;\n        margin: auto;\n      `\n    }\n  }\n`;\n\nconst ImageLinkGridThanks = styled(ImageLinkGrid)`\n  && {\n    margin-top: ${Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT/2 + 'px'};\n  }\n`;\n\n/**\n * Component for the about page.\n */\nclass AboutPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * True if the desktop drawer (large screens) is open.\n     */    \n    isDesktopDrawerOpen: PropTypes.bool.isRequired,\n    /**\n     * True is the theme is dark, false if the theme is light.\n     */\n    isThemeDark: PropTypes.bool.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        {this.getHeader()}\n        {this.getSectionMission()}\n        {this.getSectionOpenSource()}\n        {this.getSectionCommunity()}\n        {this.getSectionContributors()}\n        {this.getSectionThanks()}\n      </div>\n    );\n  }\n\n  /**\n   * Return the elements for the header based on the current breakpoint.\n   * @return {Object} The elements for the header based on the current breakpoint.\n   * @private\n   */\n  getHeader()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <PaperParallax elevation={2}>\n        <Fade timeout={1200}>\n          <Parallax bgImage={bannerXHorizon} bgImageAlt='banner' bgImageStyle={{marginTop: '-100px'}} strength={500}>\n            <GridParallax container direction='column' justify='center' alignItems='flex-start' breakpoint={breakpoint}>\n              <Grid item>\n                <TypographyParallax breakpoint={breakpoint}>\n                  An open-source block explorer prototype.\n                </TypographyParallax>\n              </Grid>\n            </GridParallax>\n          </Parallax>\n        </Fade>\n      </PaperParallax>\n    );\n  }\n\n  /**\n   * Return the elements for the Mission section based on the current breakpoint.\n   * @return {Object} The elements for the Mission section based on the current breakpoint.\n   * @private\n   */\n  getSectionMission()\n  {\n    const { breakpoint, isThemeDark } = this.props;\n\n    return (\n      <GridSectionPrimary container direction='row' justify='space-between' alignItems='center' breakpoint={breakpoint}>\n        <GridSymbolLeft item breakpoint={breakpoint}>\n          <Grid container direction='row' justify='center' alignItems='center'>\n            <SymbolD3\n              width={this.getSymbolD3Width()}\n              isThemeDark={isThemeDark}\n              circleMode={true}\n            />\n          </Grid>\n        </GridSymbolLeft>\n        <GridTextRight item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Mission\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'Our mission is to provide a bridge between you and the blockchain, '}\n              {'allowing you to easily search for and retrieve information '}\n              {'which is useful in a format that is understandable, with everything you want to '}\n              {'know right at your fingertips.'}\n            </TypographyBody>\n          </Fade>\n        </GridTextRight>\n      </GridSectionPrimary>\n    );\n  }\n\n  /**\n   * Return the elements for the Open Source section based on the current breakpoint.\n   * @return {Object} The elements for the Open Source section based on the current breakpoint.\n   * @private\n   */\n  getSectionOpenSource()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <GridSectionSecondary container direction='row' justify='space-between' alignItems='center' breakpoint={breakpoint}>\n        <GridTextLeft item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Open, Transparent, Trusted\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'Open Block Explorer is an open-source project under the '}\n              <StyledA href={Constants.URI_GITHUB_MIT_LICENSE} target='_blank' rel='noopener noreferrer'>MIT license</StyledA>\n              {', providing transparency, reliability, and security.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'We believe that all block explorers of public blockchains should be open source. '}\n              {'If you’re going to trust a block explorer to provide timely, accurate, and '}\n              {'uncensored information, the code should be open for all to see.'}\n            </TypographyBody>\n          </Fade>\n        </GridTextLeft>\n        <GridImageRight item breakpoint={breakpoint}>\n          <Grid container direction='row' justify='center' alignItems='center'>\n            <Flip right timeout={800}>\n              <ImgSection\n                src={openBlockExplorerLogo}\n                alt='logo'>\n              </ImgSection>\n            </Flip>\n          </Grid>\n        </GridImageRight>\n      </GridSectionSecondary>\n    );\n  }\n\n  /**\n   * Return the elements for the Community section based on the current breakpoint.\n   * @return {Object} The elements for the Community section based on the current breakpoint.\n   * @private\n   */\n  getSectionCommunity()\n  {\n    const { breakpoint, isThemeDark } = this.props;\n\n    const theme = isThemeDark ? 'dark' : 'light';\n    return (\n      <GridSectionPrimary container direction='row' justify='space-between' alignItems='center' breakpoint={breakpoint}>\n        <GridImageLeft item breakpoint={breakpoint}>\n          <Fade timeout={2000}>\n            {/* Twitter card looks better at elevation 2 than 1, since card/body are same color. */}\n            <PaperTwitter elevation={2} breakpoint={breakpoint}>\n              <TwitterTimelineEmbed\n                sourceType='profile'\n                screenName='dylancm4'\n                theme={theme}\n                options={{height: 432}}\n                // Setting key here is a bit of a hack. Since TwitterTimelineEmbed only uses the theme\n                // prop when it mounts, the TwitterTimelineEmbed theme will not change if the user changes\n                // the theme after the page has loaded. By setting key to the theme string, we can force a\n                // remount of TwitterTimelineEmbed when the theme changes, so that it picks up the change\n                // to its theme prop. \n                key={theme}\n                noFooter\n                transparent\n              />\n            </PaperTwitter>\n          </Fade>\n        </GridImageLeft>\n        <GridTextRight item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Community\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'Follow '}\n              <StyledA href={Constants.URI_TWITTER_OPEN_BLOCK_EXPLORER} target='_blank' rel='noopener noreferrer'>@dylancm4</StyledA>\n              {' on Twitter to learn about the latest project news.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'Learn more about our project on '}\n              <StyledA href={Constants.URI_GITHUB_OPEN_BLOCK_EXPLORER_PROJECT} target='_blank' rel='noopener noreferrer'>GitHub</StyledA>\n              {' and in our '}\n              <StyledA href={Constants.URI_GITHUB_OPEN_BLOCK_EXPLORER_WIKI} target='_blank' rel='noopener noreferrer'>wiki</StyledA>\n              {'.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'Join our mailing list today to stay up to date on development of our project. '}\n              {'We’ll let you know when Open Block Explorer goes live with real blockchain data.'}\n            </TypographyBody>\n            {/* Begin MailChimp Signup Form */}\n            <form action='https://dfinityexplorer.us18.list-manage.com/subscribe/post?u=059dc252f5f0cea2fec413c42&amp;id=4ebbd6c248' method='post' id='mc-embedded-subscribe-form' name='mc-embedded-subscribe-form' className='validate' target='_blank' rel='noopener noreferrer' noValidate>\n              {/* real people should not fill this in and expect good things - do not remove this or risk form bot signups  */}\n              <div style={{ position: 'absolute', left: '-5000px' }} aria-hidden='true'>\n                <input type='text' name='b_059dc252f5f0cea2fec413c42_4ebbd6c248' tabIndex='-1' defaultValue='' />\n              </div>\n              <div className='clear'>\n                <ButtonSubscribe type='submit'>\n                  <MailIconButton />\n                  Join Our Mailing List\n                </ButtonSubscribe>\n              </div>\n            </form>\n            {/* End MailChimp Signup Form */}\n          </Fade>\n        </GridTextRight>\n      </GridSectionPrimary>\n    );\n  }\n  \n  /**\n   * Return the elements for the Contributors section based on the current breakpoint.\n   * @return {Object} The elements for the Contributors section based on the current breakpoint.\n   * @private\n   */\n  getSectionContributors()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <GridSectionSecondary container\n        direction='row'\n        justify='space-between'\n        alignItems='center'\n        breakpoint={breakpoint}\n      >\n        <GridTextLeft item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Contributors\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'Open Block Explorer is a cooperative effort, made with '}\n              <SpanHeart>♥</SpanHeart>\n              {' by '}\n              <StyledA href={Constants.URI_GITHUB_DYLAN} target='_blank' rel='noopener noreferrer'>@dylancm4</StyledA>\n              {', '}\n              <StyledA href={Constants.URI_GITHUB_TODD} target='_blank' rel='noopener noreferrer'>@toddkitchens</StyledA>\n              {', and a friendly bunch of '}\n              <StyledA href={Constants.URI_GITHUB_CONTRIBUTORS} target='_blank' rel='noopener noreferrer'>contributors</StyledA>\n              {'.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'Make a donation to help support the project! Open-source development is powered '}\n              {'by the support of people like you.'}\n            </TypographyBody>\n            <ButtonDonate checkoutId={Constants.COINBASE_CHECKOUT_ID}>\n              <Grid container direction='row' justify='flex-start' alignItems='center'>\n                <Grid item>\n                  <SvgIconButton>\n                    <path d={Constants.ICON_SVG_PATH_BITCOIN} />\n                  </SvgIconButton>\n                </Grid>\n                <Grid item>\n                  Donate With Crypto\n                </Grid>\n              </Grid>\n            </ButtonDonate>\n          </Fade>\n        </GridTextLeft>\n        <GridImageRight item breakpoint={breakpoint}>\n          <Grid container direction='row' justify='center' alignItems='center'>\n            <LightSpeed right timeout={800}>\n              <ImgSection\n                src={githubOctocat}\n                alt='GitHub Octocat'>\n              </ImgSection>\n            </LightSpeed>\n          </Grid>\n        </GridImageRight>\n      </GridSectionSecondary>\n    );\n  }\n\n  /**\n   * Return the elements for the Thanks section based on the current breakpoint.\n   * @return {Object} The elements for the Thanks section based on the current breakpoint.\n   * @private\n   */\n  getSectionThanks() {\n    // Possibly add: GraphQL Yoga, Recharts!!!\n    const { breakpoint, isThemeDark } = this.props;\n    \n    // Adjust heights based on the perceived size of images (i.e., some images contain smaller logos\n    // to make room for the text, so those images need to be enlarged).\n    const reactHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.3;\n    const styledComponentsHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.4;\n    const materialUiHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT;\n    const nomicsHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 0.9;\n    const apolloHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT;\n    const graphqlHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.4;\n    const prismaHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT;\n    const mySqlHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.2;\n\n    // Define the image link objects for the ImageLinkGrid.\n    const imageLinks = [\n      {\n        src: reactLogo,\n        height: reactHeight,\n        alt: 'React logo',\n        href: Constants.URI_ABOUT_REACT\n      },\n      {\n        src: isThemeDark ? styledComponentsLogoDark : styledComponentsLogoLight,\n        height: styledComponentsHeight,\n        alt: 'Styled Components logo',\n        href: Constants.URI_ABOUT_STYLED_COMPONENTS\n      },\n      {\n        src: materialUiLogo,\n        height: materialUiHeight,\n        alt: 'Material-UI logo',\n        href: Constants.URI_ABOUT_MATERIAL_UI\n      },\n      {\n        src: isThemeDark ? nomicsLogoDark : nomicsLogoLight,\n        height: nomicsHeight,\n        alt: 'Nomics logo',\n        href: Constants.URI_ABOUT_NOMICS\n      },\n      {\n        src: isThemeDark ? apolloLogoDark : apolloLogoLight,\n        height: apolloHeight,\n        alt: 'Apollo logo',\n        href: Constants.URI_ABOUT_APOLLO\n      },\n      {\n        src: graphqlLogo,\n        height: graphqlHeight,\n        alt: 'GraphQL logo',\n        href: Constants.URI_ABOUT_GRAPHQL\n      },\n      {\n        src: isThemeDark ? prismaLogoDark : prismaLogoLight,\n        height: prismaHeight,\n        alt: 'Prisma logo',\n        href: Constants.URI_ABOUT_PRISMA\n      },\n      {\n        src: mySqlLogo,\n        height: mySqlHeight,\n        alt: 'MySQL logo',\n        href: Constants.URI_ABOUT_MY_SQL\n      }\n    ];\n\n    // Calculate images per row based on the current breakpoint.\n    let imagesPerRow;\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        imagesPerRow = 1;\n        break;\n      case Breakpoints.SM:\n        imagesPerRow = 2;\n        break;\n      default:\n        imagesPerRow = 3;\n        break;\n    }\n\n    return (\n      <GridSectionPrimary container\n        direction='column'\n        justify='flex-start'\n        alignItems='stretch'\n        breakpoint={breakpoint}\n      >\n        <Grid container direction='row' justify='center' alignItems='center'>\n          <Grid item>\n            <Fade bottom timeout={500}>\n              <TypographyHeading breakpoint={breakpoint}>Special thanks to:</TypographyHeading>\n            </Fade>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <ImageLinkGridThanks\n            imageLinks={imageLinks}\n            perRow={imagesPerRow}\n            justifyRow={breakpoint === Breakpoints.XS ? 'center' : 'space-between'}\n            marginBetweenRows={Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT / 2}\n          />\n        </Grid>\n      </GridSectionPrimary>\n    );\n  }\n\n  /**\n   * Return the width of the SymbolD3 component based on the current breakpoint.\n   * @return {Number} The width of the SymbolD3 component based on the current breakpoint.\n   * @private\n   */\n  getSymbolD3Width() {\n    const { breakpoint, isDesktopDrawerOpen } = this.props;\n    const contentWidth =  window.innerWidth - (isDesktopDrawerOpen ? Constants.DRAWER_WIDTH : 0);\n\n    let width;\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        width = contentWidth - Constants.ABOUT_PAGE_MARGIN_XS*2;\n        break;\n      case Breakpoints.SM:\n        width = contentWidth - Constants.ABOUT_PAGE_MARGIN_SM*2;\n        break;\n      case Breakpoints.MD:\n        width = contentWidth*0.5 - Constants.ABOUT_PAGE_MARGIN_MD*3/2;\n        // This is a bit of a hack, but we scale the symbol slightly larger because it does not fill\n        // its window all the way to the edges.\n        width *= 1.2;\n        break;\n      default:\n        width = contentWidth*0.5 - Constants.ABOUT_PAGE_MARGIN_LG*3/2;\n        width *= 1.2;\n        break;\n    }\n    return width;\n  }\n}\n\nexport default AboutPage;\n","/**\n * @file querySearchGetType\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get type of object being searched for based on query string.\n * @return {String} The type of object being searched for.\n */\nconst querySearchGetType = gql`\n  query SearchGetType($query: String!) {\n    searchGetType(query: $query) {\n      type\n    }\n  }\n`;\n\nexport default querySearchGetType;\n","/**\n * @file SearchPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  Typography\n} from '@material-ui/core';\nimport querySearchGetType from '../../graphql/querySearchGetType';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\n/**\n * The Search Page shows details about a search.\n */\nclass SearchPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * Object containing information about how a <Route path> matched the URL.\n     */\n    match: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    const { query } = this.props.match.params;\n    return (\n      <div style={{ marginTop: '32px', marginLeft: '32px' }}>\n        <TypographyHeading breakpoint={breakpoint}>Search</TypographyHeading>\n        <Query query={querySearchGetType} variables={{ query }}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <TypographyBody>Searching...</TypographyBody>              \n              );\n            else if (error)\n              return (\n                <TypographyBody>Network error</TypographyBody>             \n              );\n            else if (data.searchGetType.type === \"Block\")\n              return (\n                <Redirect to={{ pathname: `/block/${query}` }}/>\n              );\n            else if (data.searchGetType.type === \"Transaction\")\n              return (\n                <Redirect to={{ pathname: `/tx/${query}` }}/>\n              );\n            else\n              return (              \n                <TypographyBody>Sorry, this is an invalid search string.</TypographyBody>             \n              );\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n","/**\n * @file querySearchAutoComplete\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get auto-complete items based on query string.\n * @return {Array} The array of auto-complete items.\n */\nconst querySearchAutoComplete = gql`\n  query SearchAutoComplete($query: String!, $first: Int) {\n    searchAutoComplete(query: $query, first: $first) {\n      items\n    }\n  }\n`;\n\nexport default querySearchAutoComplete;\n","/**\n * @file DEAppBar\n * @copyright Copyright (c) 2018-2020 Dylan Miller, Todd Kitchens, and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { Query } from 'react-apollo';\nimport styled from 'styled-components';\nimport {\n  AppBar,\n  Divider,\n  Drawer,\n  Fade,\n  Grid,\n  IconButton,\n  Input,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  SvgIcon,\n  SwipeableDrawer,\n  Toolbar,\n  Typography,\n  Zoom\n} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport HomeIcon from '@material-ui/icons/Home';\nimport InfoIcon from '@material-ui/icons/Info';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RevealFade from 'react-reveal/Fade';\nimport RevealZoom from 'react-reveal/Zoom';\nimport Downshift from 'downshift';\nimport ResponsiveComponent from '../ResponsiveComponent/ResponsiveComponent'\nimport querySearchAutoComplete from '../../graphql/querySearchAutoComplete';\nimport {\n  Breakpoints,\n  getBreakpoint,\n  isBreakpointLessOrEqualTo,\n  isBreakpointDesktop\n} from '../../utils/breakpoint';\nimport Constants from '../../constants';\nimport openBlockExplorerLogo from './open-block-explorer-logo.png';\n\nconst StyledAppBar = styled(AppBar)`\n  && {\n    background: ${props => props.theme.colorAppBarBackground};\n    /* AppBar is above Drawer */\n    z-index: ${zIndex.drawer + 1};\n  }\n`;\n\nconst SearchAppBar = styled(AppBar)`\n  && {\n    background: white;\n    /* AppBar is above Drawer */\n    z-index: ${zIndex.drawer + 1};\n  }\n`;\n\nconst StyledToolbar = styled(Toolbar)`\n  && {\n    padding-left: 12px;\n    padding-right: 12px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-left: 4px;\n        padding-right: 4px;\n      `\n    }\n  }\n`;\n\nconst SearchToolbar = styled(Toolbar)`\n  && {\n    padding-top: 4px;\n    padding-bottom: 4px;\n    padding-left: 16px;\n    padding-right: 12px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: 4px;\n        padding-bottom: 4px;\n        padding-left: 8px;\n        padding-right: 4px;\n      `\n    }\n  }\n`;\n\nconst ImgProductIcon = styled.img`\n  && {\n    margin-left: 12px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-left: 0px;\n      `\n    }\n  }\n`;\n\n// Specify font-size in px rather than rem for app name, since it should not change based on browser\n// settings.\nconst TypographyAppName = styled(Typography)`\n  && {\n    font-family: 'Istok Web', sans-serif;\n    font-weight: bold;\n    font-size: 20px;\n    user-select: none;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: 14px;\n      `\n    }\n  }\n`;\n\nconst TypographyBlock = styled(TypographyAppName)`\n  && {\n    margin-left: 12px;\n    letter-spacing: 12px;\n    color: ${props => props.theme.colorAppBarOpenText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-left: 8.4px;\n        letter-spacing: 8.4px;\n      `\n    }\n  }\n`;\n\n/**\n * A separate div is used for the border between OPEN and Explorer, so that it can be\n * animated. The height is based on TypographyAppName font-size, and matches exactly what\n * \"border-right: 1px solid\" in TypographyBlock would look like.\n */\nconst TypographyBorder = styled.div`\n  && {\n    width: 0px;\n    height: 29px;\n    border-right: ${props => '1px solid ' + props.theme.colorAppBarOpenText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        height: 20.3px;\n      `\n    }\n  }\n`;\n\nconst TypographyExplorer = styled(TypographyAppName)`\n  && {\n    margin-left: 14px;\n    letter-spacing: 7.5px;\n    color: ${props => props.theme.colorAppBarExplorerText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-left: 9.8px;\n        letter-spacing: 5.25px;\n      `\n    }\n  }\n`;\n\nconst InputSearch = styled(Input)`\n  && {\n    /*\n     * margin-top is used to center the Input vertically, and depends on font-size.\n     * DCM 21.apr.2018: After updating Material-UI, margin-top had to be adjusted for all\n     * breakpoints based on trial and error.\n     */\n    margin-top: 0.65rem;\n    color: ${props => props.theme.colorSearchText};\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM && `\n        margin-top: 0.875rem;\n        /* font-size \"Body 2\" is not small enough to fit a hash, but this is smallest we should\n           go. */\n        font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        margin-top: 0.625rem;\n      `)\n    }\n  }\n`;\n\n/**\n * List for search auto-complete list.\n */\nconst ListSearch = styled(List)`\n  && {\n    /* The List component has top and bottom padding of 8px. Remove it. */\n    padding-top: 0px;\n    padding-bottom: 0px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    color:  ${props => props.theme.colorSearchText};\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        /* This font size is smaller than Material Design standards, but fits an auto-complete\n           hash. */\n        /**\n         * BUG: A full hash pushes the close button off of the screen with this font size\n         * This bug existed in old code too, but you could see a tiny bit of the close button\n         * It seems like this could have to do with style={{ flexGrow: '1' }}>\n         * For now, changing the font size smaller than 0.5625rem to avoid bug\n         * font-size: 0.5625rem; this is the size we would like!!!\n         */\n        font-size: 7px;\n      `)\n    }\n  }\n`;\n\n/**\n * ListItem for search auto-complete list.\n */\nconst ListItemSearch = styled(ListItem)`\n  && {\n    /* Use theme for the highlighted/focused color!!! */\n    background: ${props => props.highlighted ? Constants.COLOR_GRAY_ON_WHITE : 'initial'};\n  }\n`;\n\n/**\n * SearchIcon for search auto-complete list.\n */\nconst SearchIconListSearch = styled(SearchIcon)`\n  && {\n    color: ${props => props.theme.colorSearchIcon};\n    /* Sizes here are based on ListSearch font-sizes. */\n    width: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    height: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    /*\n     * DCM 21.apr.2018: After updating Material-UI, margin-right had to be adjusted for all\n     * breakpoints based on trial and error.\n     */\n    margin-right: 0px;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM && `\n        width: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n        height: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        /* BUG: 0.5625rem is the size we would like (see above)!!! */\n        width: 7px;\n        height: 7px;\n        margin-right: -7px;\n      `)\n    }\n  }\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  && {\n    color: ${props => props.theme.colorAppBarTextButton};\n\n    &:hover {\n      background: ${props => fade(props.theme.colorIconButtonHover, props.theme.opacityActionHover)};\n      color: ${props => props.theme.colorIconButtonHover};\n      /* Reset on touch devices. */\n      @media (hover: none) {\n        background: inherit;\n        color: ${props => props.theme.colorAppBarTextButton};\n      }\n    }\n  }\n`;\n\nconst StyledMenuIcon = styled(MenuIcon)`\n  && {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  && {\n    width: 32px;\n    height: 32px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        width: 24px;\n        height: 24px;\n      `\n    }\n  }\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  && {\n    width: 32px;\n    height: 32px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        width: 24px;\n        height: 24px;\n      `\n    }\n  }\n`;\n\nconst StyledSwipeableDrawer = styled(({ ...other }) => (\n  <SwipeableDrawer {...other} classes={{ paper: 'paper' }} />\n))`\n  & .paper {\n    width: ${Constants.DRAWER_WIDTH + 'px'};\n    background: ${props => props.theme.colorDrawerBackground};\n  }\n`;\n\nconst StyledDrawer = styled(({ ...other }) => (\n  <Drawer {...other} classes={{ paper: 'paper' }} />\n))`\n  & .paper {\n    width: ${Constants.DRAWER_WIDTH + 'px'};\n    background: ${props => props.theme.colorDrawerBackground};\n    border-right:\n      ${props => props.theme.isDark ? `1px solid ${props.theme.colorBodyBackground}` : '0px'};\n  }\n`;\n\nconst StyledDivider = styled(Divider)`\n  && {\n    background: ${props => props.theme.colorDrawerDivider};\n  }\n`;\n\nconst DrawerListItemIcon = styled(ListItemIcon)``;\n\nconst DrawerListItemText = styled(({ ...other }) => (\n  <ListItemText {...other} classes={{ primary: 'primary' }} />\n))``;\n\nconst DrawerListItem = styled(ListItem)`\n  && {\n    padding-top: 12px;\n    padding-bottom: 12px;\n    ${DrawerListItemIcon} {\n      margin-left: 8px;\n      color: ${\n        props => props.selected ?\n          props.theme.colorDrawerIconTextSelected :\n          props.theme.colorDrawerIcon\n      };\n    }\n    ${DrawerListItemText} {\n      margin-left: -8px;\n      & .primary {\n        font-family: ${Constants.FONT_PRIMARY};\n        font-size: ${Constants.MATERIAL_FONT_SIZE_BUTTON};\n        font-weight: ${props => props.selected ? 600 : 400};\n        color: ${\n          props => props.selected ?\n            props.theme.colorDrawerIconTextSelected :\n            props.theme.colorDrawerText\n        };\n      }\n    }\n  }\n`;\n\n// DCM 2019-02-02: I tried for a few hours to change the \"selected\" background color of a ListItem\n// using styled-components, but I was unsuccessful even though it seems like the code below should\n// work. I was able to change the color using the Material-UI withStyles() technique of styling:\n// https://stackoverflow.com/questions/50371315/how-to-override-material-ui-menuitem-selected-background-color\n// However, that technique does not have access to props, so it would not work well with the way\n// we're currently doing theming. There is likely a way to get this working in a way that does not\n// use styled-components, but the \"selected\" background color is not important enough to spend the\n// time on this issue right now.\n/*const DrawerListItem = styled(({ ...other }) => (\n  <ListItem classes={{ selected: 'selected' }} {...other} />\n))`\n  && {\n    background: pink;\n    &:focus {\n      background: cyan;\n    }\n    &:hover {\n      background: red;\n    }\n    // All of the above colors work, but the \"selected\" background color does not work.\n    & .selected {\n      background: blue !important;\n    }\n  }\n`;*/\n\n/**\n * The App Bar provides content and actions related to the current screen.\n */\nclass DEAppBar extends ResponsiveComponent {\n  static propTypes = {\n    /**\n     * Callback fired when the App Bar is resized.\n     */\n    handleAppBarResize: PropTypes.func,\n    /**\n     * Callback fired when the desktop drawer (large screens) menu button is clicked.\n     */\n    handleDesktopDrawerMenuClick: PropTypes.func.isRequired,\n    /**\n     * Callback fired when the mobile drawer (small screens) menu button is clicked.\n     */\n    handleMobileDrawerMenuClick: PropTypes.func.isRequired,\n    /**\n     * True if the desktop drawer (large screens) is open.\n     */    \n    isDesktopDrawerOpen: PropTypes.bool.isRequired,\n    /**\n     * True if the mobile drawer (small screens) is open.\n     */    \n    isMobileDrawerOpen: PropTypes.bool.isRequired,\n    /**\n     * Object containing information about the current react-router location.\n     */\n    location: PropTypes.object.isRequired,\n    /**\n     * Reference to the <HashRouter> element.\n     */\n    routerRef: PropTypes.object\n  };\n\n  /**\n   * Create a DEAppBar object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.state = {\n      isSearchOn: false,\n      searchQuery: ''\n    };\n\n    this.toolbarDivRef = React.createRef();\n\n    this.maxSearchAutoCompleteItems = 6;\n\n    // Bind to make 'this' work in callbacks.\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n    this.handleCloseClick = this.handleCloseClick.bind(this);\n    this.handleDownshiftStateChange = this.handleDownshiftStateChange.bind(this);\n    this.handleDownshiftChange = this.handleDownshiftChange.bind(this);\n    this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n    this.isActiveRoute = this.isActiveRoute.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { isSearchOn } = this.state;\n    return (\n      <Fragment>\n        {/* Toolbar shim to compensate for AppBar position='fixed'. */}\n        <div ref={this.toolbarDivRef}>\n          <Toolbar />\n        </div>\n        <Fade in={isSearchOn} timeout={200} mountOnEnter unmountOnExit>\n          <SearchAppBar elevation={2}>\n            {this.getToolbarSearchContent()}\n          </SearchAppBar>\n        </Fade>\n        <Fade in={!isSearchOn} timeout={200} mountOnEnter unmountOnExit>\n          <StyledAppBar elevation={2}>\n            {this.getToolbarDefaultContent()}\n          </StyledAppBar>\n        </Fade>\n        {this.getDrawer()}\n      </Fragment>\n    );\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree).\n   * @public\n   */\n  componentDidMount() {\n    super.componentDidMount();\n\n    // Pass App Bar height to owner.\n    if (this.props.handleAppBarResize)\n      this.props.handleAppBarResize(this.toolbarDivRef.current.offsetHeight);\n  }\n\n  /**\n   * Force the component to re-render when the window is resized.\n   * @private\n   */\n  handleWindowResize() {\n    super.handleWindowResize();\n\n    // Pass App Bar height to owner.\n    if (this.props.handleAppBarResize)\n      this.props.handleAppBarResize(this.toolbarDivRef.current.offsetHeight);\n\n    // Close the mobile drawer (small screens) when screen is resized larger, so that it does not\n    // reappear when the screen is resized smaller.\n    if (isBreakpointDesktop() && this.props.isMobileDrawerOpen)\n      this.props.handleMobileDrawerMenuClick();\n  }\n\n  /**\n   * Return the elements for the search toolbar based on the current breakpoint.\n   * @return {Object} The elements for the search toolbar based on the current breakpoint.\n   * @private\n   */\n  getToolbarSearchContent() {\n    const breakpoint = getBreakpoint();\n    return (\n      <SearchToolbar variant='dense' breakpoint={breakpoint}>\n        <Grid container direction='row' justify='space-between' alignItems='flex-start' wrap='nowrap'>\n          <Grid item style={{ flexGrow: '1' }}>\n            <Downshift\n              onStateChange={this.handleDownshiftStateChange}\n              onChange={this.handleDownshiftChange}\n              selectedItem={this.state.searchQuery}\n            >\n              {({\n                getInputProps,\n                getItemProps,\n                getMenuProps,\n                isOpen,\n                inputValue,\n                highlightedIndex,\n              }) => (\n                <div>\n                  <form onSubmit={this.handleSearchSubmit}>\n                    <InputSearch\n                      {...getInputProps({\n                        autoFocus: true,\n                        disableUnderline: true,\n                        fullWidth: true,\n                        placeholder: 'Search for block, transaction, or address'\n                      })}\n                      breakpoint={breakpoint}\n                    />\n                  </form>\n                  <Query\n                    query={querySearchAutoComplete}\n                    variables={{ query: inputValue, first: this.maxSearchAutoCompleteItems }}\n                  >\n                    {({ loading, error, data }) => {\n                      if (loading || error || !data.searchAutoComplete || !isOpen)\n                        return <ListSearch breakpoint={breakpoint} />;\n                      return (    \n                        <ListSearch {...getMenuProps()} breakpoint={breakpoint}>\n                          {data.searchAutoComplete.items.map((item, index) => (\n                            <ListItemSearch\n                              disableGutters\n                              // Use number for highlighted prop instead of boolean to prevent\n                              // \"non-boolean attribute\" warning.\n                              highlighted={highlightedIndex === index ? 1 : 0}\n                              {...getItemProps({\n                                key: item,\n                                index,\n                                item\n                              })}\n                            >\n                              <ListItemIcon>\n                                <SearchIconListSearch breakpoint={breakpoint} />\n                              </ListItemIcon>\n                              {item}\n                            </ListItemSearch>\n                          ))}\n                        </ListSearch>\n                      );\n                    }}\n                  </Query>\n                </div>\n              )}\n            </Downshift>\n          </Grid>\n          <Grid item>\n            <Zoom in={true} timeout={300}>\n              <IconButton onClick={this.handleCloseClick}>\n                <StyledCloseIcon breakpoint={breakpoint} />\n              </IconButton>\n            </Zoom>\n          </Grid>\n        </Grid>\n      </SearchToolbar>\n    );\n  }\n\n  /**\n   * Return the elements for the toolbar based on the current breakpoint.\n   * @return {Object} The elements for the toolbar based on the current breakpoint.\n   * @private\n   */\n  getToolbarDefaultContent() {\n    const breakpoint = getBreakpoint();\n    return (\n      <StyledToolbar breakpoint={breakpoint}>\n        <Grid container alignItems='center' wrap='nowrap'>\n          <Grid item>\n            {this.getMenuButton()}\n          </Grid>\n          {this.getAppTitle()}\n          <Grid container alignItems='center' justify='flex-end' wrap='nowrap'>\n            <Grid item>\n              {this.getSearchButton()}\n            </Grid>\n          </Grid>\n        </Grid>\n      </StyledToolbar>\n    );\n  }\n\n  /**\n   * Return the elements for the menu button on the current breakpoint.\n   * @return {Object} The elements for the menu button based on the current breakpoint.\n   * @private\n   */\n  getMenuButton() {\n    const { handleMobileDrawerMenuClick, handleDesktopDrawerMenuClick } = this.props;\n    return (\n      <Zoom in={true} timeout={300}>\n        <StyledIconButton\n          onClick={\n            isBreakpointDesktop() ? handleDesktopDrawerMenuClick : handleMobileDrawerMenuClick\n          }\n        >\n          <StyledMenuIcon />\n        </StyledIconButton>\n      </Zoom>\n    );\n  }\n\n  /**\n   * Return the elements for the app title based on the current breakpoint.\n   * @return {Object} The elements for the app title based on the current breakpoint.\n   * @private\n   */\n  getAppTitle() {\n    const breakpoint = getBreakpoint();\n    return (\n      <Link\n        style={{ textDecoration: 'none' }}\n        to='/'\n      >\n        <Grid container alignItems='center' justify='flex-start' wrap='nowrap'>\n          <RevealFade timeout={500}>\n            <Grid item>\n              <ImgProductIcon\n                src={openBlockExplorerLogo}\n                height={this.getProductIconHeight()}\n                alt='logo'\n                breakpoint={breakpoint}\n              >\n              </ImgProductIcon>\n            </Grid>\n            <Grid item>\n              <TypographyBlock breakpoint={breakpoint}>BLOCK</TypographyBlock>\n            </Grid>\n            <RevealZoom timeout={350}>\n              <Grid item>\n                <TypographyBorder breakpoint={breakpoint} />\n              </Grid>\n            </RevealZoom>\n            <Grid item>\n              <TypographyExplorer breakpoint={breakpoint}>ExpIorer</TypographyExplorer>\n            </Grid>\n          </RevealFade>\n        </Grid>\n      </Link>\n    );\n  }\n\n  /**\n   * Return the height of the product icon based on the current breakpoint.\n   * @return {Number} The height of the product icon based on the current breakpoint.\n   * @private\n   */\n  getProductIconHeight() {\n    if (isBreakpointLessOrEqualTo(Breakpoints.XS))\n      return 23.8;\n    else\n      return 34;\n  }\n\n  /**\n   * Return the elements for the drawer based on the current breakpoint.\n   * @return {Object} The elements for the drawer based on the current breakpoint.\n   * @private\n   */\n  getDrawer() {\n    // The Material Design documentation states: \"Modal drawer: In a responsive layout grid, at a\n    // defined minimum breakpoint of at least 600dp width, a standard drawer should be replaced with\n    // a modal drawer.\" We use a modal drawer for breakpoints xs and sm (i.e., up to 960px).\n    if (isBreakpointDesktop()) {\n      return (\n        <StyledDrawer variant='persistent' open={this.props.isDesktopDrawerOpen}>\n          {this.getDrawerContent()}\n        </StyledDrawer>\n      );\n    }\n    else {\n      return (\n        <StyledSwipeableDrawer\n          open={this.props.isMobileDrawerOpen}\n          onOpen={this.props.handleMobileDrawerMenuClick}\n          onClose={this.props.handleMobileDrawerMenuClick}\n        >\n          <div onClick={this.props.handleMobileDrawerMenuClick}>\n            {this.getDrawerContent()}\n          </div>\n        </StyledSwipeableDrawer>\n      );\n    }  \n  }\n\n  /**\n   * Return the elements for the drawer content based on the current breakpoint.\n   * @return {Object} The elements for the drawer content based on the current breakpoint.\n   * @private\n   */\n  getDrawerContent() {\n    /* Use constants for paths such as 'blocks' everywhere in code!!! */\n    return (\n      <Fragment>\n        {/* Shim to compensate for AppBar position='fixed'. */}\n        <Toolbar/>\n        <List>\n          {/* Could change this to be more generic by calling map() on an array of route objects\n              which contain info such as: path, menu text, and icon.\n              See: https://stackoverflow.com/questions/50801093/material-ui-drawer-selection-how-to-route\n          */}\n          <DrawerListItem button component={Link} to='/' selected={this.isActiveRoute('/')}>\n            <DrawerListItemIcon>\n              <HomeIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Home' selected={this.isActiveRoute('/')} />\n          </DrawerListItem>\n          <StyledDivider />\n          <DrawerListItem button component={Link} to='/blocks' selected={this.isActiveRoute('/blocks')}>\n            <DrawerListItemIcon>\n              <SvgIcon>\n                <path d={Constants.ICON_SVG_PATH_BLOCK} />\n              </SvgIcon>\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Blocks' selected={this.isActiveRoute('/blocks')} />\n          </DrawerListItem>\n          <DrawerListItem button component={Link} to='/txs' selected={this.isActiveRoute('/txs')}>\n            <DrawerListItemIcon>\n              <SvgIcon>\n                <path d={Constants.ICON_SVG_PATH_TPS} />\n              </SvgIcon>\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Transactions' />\n          </DrawerListItem>\n          <DrawerListItem button component={Link} to='/accounts' selected={this.isActiveRoute('/accounts')}>\n            <DrawerListItemIcon>\n              <AccountCircleIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Accounts' />\n          </DrawerListItem>            \n          <DrawerListItem button component={Link} to='/canisters' selected={this.isActiveRoute('/canisters')}>\n            <DrawerListItemIcon>\n              <DescriptionIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Canisters' />\n          </DrawerListItem>\n          <StyledDivider />\n          <DrawerListItem button component={Link} to='/about' selected={this.isActiveRoute('/about')}>\n            <DrawerListItemIcon>\n              <InfoIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='About' />\n          </DrawerListItem>\n        </List>\n      </Fragment>\n    );\n  }\n\n  /**\n   * Return the elements for the search button on the current breakpoint.\n   * @return {Object} The elements for the search button based on the current breakpoint.\n   * @private\n   */\n  getSearchButton() {\n    const breakpoint = getBreakpoint();\n    return (\n      <Zoom in={true} timeout={300}>\n        <StyledIconButton onClick={this.handleSearchClick}>\n          <StyledSearchIcon breakpoint={breakpoint} />\n        </StyledIconButton>\n      </Zoom>\n    );\n  }\n\n  /**\n   * Callback fired when the search button is clicked.\n   * @private\n   */\n  handleSearchClick() {\n    this.setState({\n      isSearchOn: true\n    });\n  }\n\n  /**\n   * Callback fired when the close button is clicked.\n   * @private\n   */\n  handleCloseClick() {\n    this.setState({\n      isSearchOn: false\n    });\n  }\n  \n /**\n   * Callback fired any time the internal state of the Downshift component changes.\n   * @param {Object} changes The properties that have changed since the last state change.\n   * @private\n   */\n  handleDownshiftStateChange(changes) {\n    const { inputValue } = changes;\n    if (inputValue) {\n      this.setState({\n        searchQuery: inputValue\n      });\n    }\n  }\n\n  /**\n   * Callback fired when the value of the Downshift component changes.\n   * @param {Object} selectedItem The item that was just selected.\n   * @private\n   */\n  handleDownshiftChange(selectedItem) {\n    this.performSearch(selectedItem);\n  }\n\n  /**\n   * Callback fired when the SearchAppBar form is submitted.\n   * @param {Object} event The event source of the callback.\n   * @private\n   */\n  handleSearchSubmit(event) {\n    event.preventDefault();\n    this.performSearch(this.state.searchQuery);\n  }\n\n  /**\n   * Perform a search based on the specified search query.\n   * @param {String} searchQuery The search quert to use for the search.\n   * @private\n   */\n  performSearch(searchQuery) {\n    this.setState({\n      isSearchOn: false,\n      searchQuery: ''\n    });\n    if (this.props.routerRef)\n      this.props.routerRef.history.push(`/search/${searchQuery}`);\n  }\n\n  /**\n   * Return true if the specified route matches the current route, false otherwise.\n   * @param {String} routeName The name of the route to check.\n   * @return {Boolean} True if the specified route matches the current route, false otherwise.\n   * @private\n   */\n  isActiveRoute(routeName) {\n    return this.props.location.pathname === routeName;\n  }\n};\n\nexport default withRouter(DEAppBar);","/**\n * @file Footer\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport styled from 'styled-components';\nimport { loadCSS } from 'fg-loadcss';\nimport {\n  Checkbox,\n  Grid,\n  Icon,\n  IconButton,\n  SvgIcon,\n  Toolbar,\n  Typography\n} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport ResponsiveComponent from '../ResponsiveComponent/ResponsiveComponent';\nimport { Breakpoints, getBreakpoint } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst FooterToolbar = styled(Toolbar)`\n  && {\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: ${Constants.FOOTER_HEIGHT + 'px'};\n    padding-left: 0px;\n    padding-right: 0px;\n    text-align: center;\n    background: ${props => props.theme.colorFooterBackground};\n    color: ${props => props.theme.colorFooterTextIcon};\n  }\n`;\n\nconst OneThirdGrid = styled(Grid)`\n  && {\n    width: 33.33%;\n  }\n`;\n\nconst LeftThirdGrid = styled(OneThirdGrid)`\n  && {\n    margin-left: ${Constants.FOOTER_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-left: ${Constants.FOOTER_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst RightThirdGrid = styled(OneThirdGrid)`\n  && {\n    margin-right: ${Constants.FOOTER_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-right: ${Constants.FOOTER_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst FooterTypography = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: 12px;\n  }\n`;\n\nconst FooterA = styled.a`\n  && {\n    color: ${props => props.theme.colorFooterTextIcon};\n    text-decoration: underline;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst AwesomeIconButtonGrid = styled(Grid)`\n  && {\n    // Look into why this is needed!!!\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        min-width: 35px;\n      `\n    }\n  }\n`;\n\nconst AwesomeIconButton = styled(IconButton)`\n  && {\n    &:hover {\n      background: ${props => fade(props.theme.colorIconButtonHover, props.theme.opacityActionHover)};\n      color: ${props => props.theme.colorIconButtonHover};\n      /* Reset on touch devices. */\n      @media (hover: none) {\n        background: inherit;\n        color: inherit;\n      }\n    }\n  }\n`;\n\nconst AwesomeIcon = styled(Icon)`\n  && {\n    font-size: 20px;\n  }\n`;\n\nconst ThemeCheckbox = styled(Checkbox)`\n  && {\n    color: ${props => props.theme.colorFooterTextIcon};\n    &:hover {\n      background: ${props => fade(props.theme.colorIconButtonHover, props.theme.opacityActionHover)};\n      color: ${props => props.theme.colorIconButtonHover};\n      /* Reset on touch devices. */\n      @media (hover: none) {\n        background: inherit;\n        color: ${props => props.theme.colorFooterTextIcon};\n      }\n    }\n  }\n`;\n\nconst ThemeSvgIcon = styled(SvgIcon)`\n  && {\n    margin-top: -1px;\n    font-size: 17px;\n  }\n`;\n\n/**\n * The Footer provides information related to the current screen.\n */\nclass Footer extends ResponsiveComponent {\n  static propTypes = {\n    /**\n     * True is the theme is dark, false if the theme is light.\n     */\n    isThemeDark: PropTypes.bool.isRequired,\n    /**\n     * Callback fired when the value of the theme checkbox changes.\n     */    \n    handleThemeChange: PropTypes.func.isRequired,\n    /**\n     * Object containing information about the current react-router location.\n     */\n    location: PropTypes.object.isRequired\n  };\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    super.componentDidMount();\n\n    loadCSS(Constants.URI_CDN_FONT_AWESOME, document.querySelector('#insertion-point-jss'));\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const breakpoint = getBreakpoint();\n    return (\n      <FooterToolbar>\n        <LeftThirdGrid\n          container\n          direction='row'\n          justify='flex-start'\n          alignItems='center'\n          breakpoint={breakpoint}\n        >\n          <Grid item>\n            <FooterTypography color='inherit'>\n              {this.getCopyrightText()}\n            </FooterTypography>\n          </Grid>\n        </LeftThirdGrid>\n        <OneThirdGrid container direction='column' justify='center' alignItems='center'>\n          <Grid item>\n            <FooterTypography color='inherit'>\n              {this.getSimulatedText()}\n            </FooterTypography>\n          </Grid>\n          { this.props.location.pathname === '/' &&\n            <Grid item>\n              <FooterTypography color='inherit'>\n                {'('}\n                {this.getNomicsTextDescription()}\n                <FooterA href={Constants.URI_ABOUT_NOMICS} target='_blank' rel='noopener noreferrer'>\n                  {this.getNomicsTextLink()}\n                </FooterA>\n                {')'}\n              </FooterTypography>\n            </Grid>\n          }\n        </OneThirdGrid>\n        <RightThirdGrid\n          container direction='row'\n          justify='flex-end'\n          alignItems='center'\n          wrap='nowrap'\n          breakpoint={breakpoint}\n        >\n          <AwesomeIconButtonGrid item breakpoint={breakpoint}>\n            <AwesomeIconButton\n              color='inherit'\n              href={Constants.URI_TWITTER_OPEN_BLOCK_EXPLORER}\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <AwesomeIcon className='fa fa-twitter' />\n            </AwesomeIconButton>\n          </AwesomeIconButtonGrid>\n          <AwesomeIconButtonGrid item breakpoint={breakpoint}>\n            <AwesomeIconButton\n              color='inherit'\n              href={Constants.URI_GITHUB_OPEN_BLOCK_EXPLORER_PROJECT}\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <AwesomeIcon className='fa fa-github' />\n            </AwesomeIconButton>\n          </AwesomeIconButtonGrid>\n          <AwesomeIconButtonGrid item breakpoint={breakpoint}>\n            <ThemeCheckbox\n              color='default'\n              checked={this.props.isThemeDark}\n              icon={\n                <ThemeSvgIcon>\n                  <path d={Constants.ICON_SVG_PATH_THEME_LIGHT} />\n                </ThemeSvgIcon>\n              }\n              checkedIcon={\n                <ThemeSvgIcon>\n                  <path d={Constants.ICON_SVG_PATH_THEME_DARK} />\n                </ThemeSvgIcon>\n              }\n              onChange={this.props.handleThemeChange}\n            />\n          </AwesomeIconButtonGrid>\n        </RightThirdGrid>\n      </FooterToolbar>\n    );\n  }\n\n  /**\n   * Return the copyright text.\n   * @return {String} the copyright text.\n   * @private\n   */\n   getCopyrightText() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return '© 2020 openblockexplorer';\n      case Breakpoints.SM:\n        return '© 2020 openblockexplorer contributors';\n      default:\n        return '© 2020 openblockexplorer contributors | All rights reserved';\n    }\n  }\n\n  /**\n   * Return the \"data is simulated\" text.\n   * @return {String} The \"data is simulated\" text.\n   * @private\n   */\n  getSimulatedText() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return '(Simulated data)';\n      case Breakpoints.SM:\n        return '(Data is simulated)';\n      default:\n        return '(Network data is simulated)';\n    }\n  }\n\n  /**\n   * Return the Nomics attribution description text.\n   * @return {String} The Nomics attribution description text.\n   * @private\n   */\n  getNomicsTextDescription() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return 'Futures price data by ';\n      default:\n        return 'Futures price data provided by Nomics.com ';\n    }\n  }\n\n  /**\n   * Return the Nomics attribution link text.\n   * @return {String} The Nomics attribution link text.\n   * @private\n   */\n  getNomicsTextLink() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return 'Nomics.com';\n      default:\n        return 'Cryptocurrency Market Data API';\n    }\n  }\n};\n\nexport default withRouter(Footer);\n","/**\n * @file App\n * @copyright Copyright (c) 2018-2020 Dylan Miller, Todd Kitchens, an openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport {\n  Route,\n  HashRouter\n} from 'react-router-dom';\nimport ReactGA from 'react-ga';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { loadCSS } from 'fg-loadcss';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { ApolloProvider } from 'react-apollo';\nimport { GlobalStyle, themeLight, themeDark } from './theme/globalStyle';\nimport HomePage from './Components/HomePage/HomePage';\nimport AccountsPage from './Components/AccountsPage/AccountsPage';\nimport BlocksPage from './Components/BlocksPage/BlocksPage';\nimport BlockDetailsPage from './Components/BlockDetailsPage/BlockDetailsPage';\nimport TransactionsPage from './Components/TransactionsPage/TransactionsPage';\nimport TransactionDetailsPage from './Components/TransactionDetailsPage/TransactionDetailsPage';\nimport CanistersPage from './Components/CanistersPage/CanistersPage';\nimport AboutPage from './Components/AboutPage/AboutPage';\nimport SearchPage from './Components/SearchPage/SearchPage';\nimport DEAppBar from './Components/DEAppBar/DEAppBar';\nimport Footer from './Components/Footer/Footer';\nimport Constants from './constants';\nimport { getBreakpoint, isBreakpointDesktop } from './utils/breakpoint';\n\n// Create an http link.\nconst httpLink = new HttpLink({\n  uri: Constants.URI_SERVER_HTTP\n});\n\n// Create a WebSocketLink that represents the WebSocket connection. \nconst wsLink = new WebSocketLink({\n  uri: Constants.URI_SERVER_WEB_SOCKETS,\n  options: {\n    reconnect: true\n  }\n});\n\n// Using the ability to split links, you can send data to each link depending on what kind of\n// operation is being sent.\nconst link = split(\n  // split based on operation type\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink, // for subscription\n  httpLink // for query or mutation\n);\n\n// Create Apollo client.\nconst apolloClient = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache({\n    // Tell Apollo to use the unique identifier object.id when normalizing the data in the store.\n    // This allows Apollo to automatically re-render the UI when objects change as the result of\n    // mutations. Using object.id only works when every object.id in the application is unique.\n    // For this to work in the app, every GraphQL query must ask for the ID of every record.\n    dataIdFromObject: object => object.id || null,\n    // Do not add a \"__typename to the document\". By setting this to false, we avoid a big\n    // performance hit that results from including __typename in connection aggregate count queries.\n    // It is unclear from the Apollo documentation whether __typename is even used by the cache when\n    // dataIdFromObject is defined.\n    addTypename: false\n  })\n});\n\n// Initialize the react-ga library. We do not need user consent to be GDPR compliant. According to\n// Google: \"When using Google Analytics Advertising Features, you must also comply with the European\n// Union User Consent Policy.\" Advertising Features are not enabled for Open Block Explorer. Under\n// the GDPR, an IP address is considered Personally Identifiable Information (PII), so we anonymize\n// the IP addresses sent to Google Analytics\nReactGA.initialize(Constants.GOOGLE_ANALYTICS_TRACKING_ID);\nReactGA.set({ anonymizeIp: true });\n\nconst ContentDiv = styled.div`\n  && {\n    margin-left: ${props => props.isDesktopDrawerOpen ? Constants.DRAWER_WIDTH + 'px' : '0px'};\n    transition: ${props =>\n      'margin-left ' +\n      (props.isDesktopDrawerOpen ? duration.enteringScreen : duration.leavingScreen) +\n      'ms ' +\n      easing.easeInOut};\n  }\n`;\n\nconst ContentGrid = styled(Grid)`\n  && {\n    /* The height of the body + footer is the total viewport height - App Bar height. */\n    min-height: calc(100vh - ${props => props.appbarheight + 'px'});\n`;\n\n/**\n * Top-level component of the app.\n */\nclass App extends Component {\n  /**\n   * Create an App object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      routerRef: null,\n      appBarHeight: 0,\n      isDesktopDrawerEnabled: true,\n      isMobileDrawerOpen: false,\n      isThemeDark: true\n    };\n\n    // Bind to make 'this' work in callbacks.\n    this.setRouterRef = this.setRouterRef.bind(this);\n    this.handleAppBarResize = this.handleAppBarResize.bind(this);\n    this.handleDesktopDrawerMenuClick = this.handleDesktopDrawerMenuClick.bind(this);\n    this.handleMobileDrawerMenuClick = this.handleMobileDrawerMenuClick.bind(this);\n    this.handleThemeChange = this.handleThemeChange.bind(this);\n  }\n  \n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Load fonts.\n    loadCSS(\n      Constants.URI_CDN_GOOGLE_FONTS,\n      document.querySelector('#insertion-point-jss')\n    );\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {\n      appBarHeight,\n      isDesktopDrawerEnabled,\n      isMobileDrawerOpen,\n      isThemeDark,\n      routerRef\n    } = this.state;\n\n    const isDesktopDrawerOpen = isDesktopDrawerEnabled && isBreakpointDesktop();\n    const breakpoint = getBreakpoint(isDesktopDrawerOpen);\n\n    return (\n      <ApolloProvider client={apolloClient}>\n        <GlobalStyle theme={this.getTheme()} />\n        <ThemeProvider theme={this.getTheme()}>\n          <HashRouter ref={this.setRouterRef}>\n            <div>\n              <DEAppBar\n                handleAppBarResize={this.handleAppBarResize}\n                handleDesktopDrawerMenuClick={this.handleDesktopDrawerMenuClick}\n                handleMobileDrawerMenuClick={this.handleMobileDrawerMenuClick}\n                isDesktopDrawerOpen={isDesktopDrawerOpen}\n                isMobileDrawerOpen={isMobileDrawerOpen}\n                routerRef={routerRef}\n              />\n              <ContentDiv\n                isDesktopDrawerOpen={isDesktopDrawerOpen}\n                isMobileDrawerOpen={isMobileDrawerOpen}\n                /* Workaround to force react-parallax to update when drawer opens/closes. Perhaps */\n                /* file an issue with react-parallax that Parallax does not update when */\n                /* margin-left changes. */\n                onTransitionEnd={() => window.dispatchEvent(new Event('resize'))}\n              >\n                <ContentGrid\n                  container\n                  direction='column'\n                  justify='space-between'\n                  appbarheight={appBarHeight}\n                >                 \n                  <Route\n                    exact path='/'\n                    render={(props) => \n                      <HomePage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path='/blocks'\n                    render={(props) => \n                      <BlocksPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path='/txs'\n                    render={(props) => \n                      <TransactionsPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route exact path=\"/accounts\" component={AccountsPage} />                  \n                  <Route exact path=\"/canisters\" component={CanistersPage} />\n                  <Route\n                    exact path='/about'\n                    render={(props) => \n                      <AboutPage\n                        {...props}\n                        breakpoint={breakpoint}\n                        isDesktopDrawerOpen={isDesktopDrawerOpen}\n                        isThemeDark={isThemeDark}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path='/block/:height'\n                    render={(props) => \n                      <BlockDetailsPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path=\"/tx/:hash\"\n                    render={(props) => \n                      <TransactionDetailsPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route exact path=\"/search/:query\" component={SearchPage} />\n                  <Footer                  \n                    handleThemeChange={this.handleThemeChange}\n                    isThemeDark={isThemeDark}\n                  />\n                </ContentGrid>\n              </ContentDiv>\n            </div>\n          </HashRouter>\n        </ThemeProvider>\n      </ApolloProvider>\n    );\n  }\n\n  /**\n   * Set a reference to the HashRouter element.\n   * @public\n   */\n  setRouterRef(element) {\n    this.setState({ routerRef: element });\n  };\n\n  /**\n   * Callback fired when the App Bar is resized.\n   * @private\n   */\n  handleAppBarResize(height) {\n    this.setState({\n      appBarHeight: height\n    });\n  }\n\n  /**\n   * Callback fired when the desktop drawer (large screens) menu button is clicked.\n   * @private\n   */\n  handleDesktopDrawerMenuClick(contentRect) {\n    this.setState({\n      isDesktopDrawerEnabled: !this.state.isDesktopDrawerEnabled\n    });\n  }\n\n  /**\n   * Callback fired when the mobile drawer (small screens) menu button is clicked.\n   * @private\n   */\n  handleMobileDrawerMenuClick(contentRect) {\n    this.setState({\n      isMobileDrawerOpen: !this.state.isMobileDrawerOpen\n    });\n  }\n\n  /**\n   * Callback fired when the value of the Footer component theme checkbox changes.\n   * @param {Object} event The event source of the callback.\n   * @param {Number} checked The checked value of the switch.\n   * @public\n   */\n  handleThemeChange(event, checked) {\n    this.setState({\n      isThemeDark: checked\n    });\n  }\n\n  /**\n   * Return the current theme.\n   * @return {Object} The current theme.\n   * @private\n   */\n  getTheme() {\n    return this.state.isThemeDark ? themeDark : themeLight;\n  }\n}\n\nexport default App;\n","/**\n * @file index\n * @copyright Copyright (c) 2018-2020 Dylan Miller, Todd Kitchens, and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\ndocument.getElementById(\"root\"));\n"],"sourceRoot":""}